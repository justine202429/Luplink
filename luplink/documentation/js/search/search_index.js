var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/Antenna.html",[0,0.927,1,1.539]],["body/interfaces/Antenna.html",[0,0.914,1,3.007,2,1.842,3,0.121,4,0.138,5,0.087,6,0.071,7,2.69,8,2.891,9,1.624,10,0.441,11,0.778,12,1.364,13,5.544,14,5.811,15,1.416,16,0.639,17,0.017,18,0.309,19,1.75,20,3.279,21,0.245,22,0.097,23,1.416,24,3.279,25,0.914,26,1.309,27,2.567,28,2.653,29,4.548,30,0.621,31,4.506,32,1.124,33,5.811,34,2.179,35,1.59,36,0.953,37,3.279,38,0.953,39,3.279,40,3.279,41,4.506,42,1.204,43,1.422,44,3.279,45,3.279,46,1.307,47,2.69,48,4.043,49,2.818,50,3.393,51,3.697,52,2.69,53,2.942,54,4.974,55,2.69,56,2.322,57,2.69,58,2.69,59,2.322,60,3.697,61,1.942,62,2.942,63,2.942,64,1.59,65,1.751,66,2.322,67,1.667,68,2.942,69,4.619,70,4.619,71,4.883,72,4.619,73,2.942,74,4.043,75,3.372,76,2.942,77,2.942,78,2.942,79,2.942,80,2.942,81,3.421,82,2.942,83,2.179,84,2.179,85,2.748,86,3.279,87,2.942,88,1.518,89,1.667,90,3.224,91,2.891,92,2.39,93,2.942,94,3.851,95,1.942,96,3.642,97,2.942,98,2.942,99,1.219,100,3.279,101,2.942,102,2.942,103,2.942,104,3.279,105,2.531,106,3.279,107,2.822,108,2.942,109,3.279,110,3.279,111,4.548,112,4.974,113,5.214,114,4.043,115,4.506,116,4.506,117,3.279,118,3.279,119,4.506,120,2.942,121,3.279,122,3.279,123,2.942,124,3.279,125,4.506,126,1.451,127,0.008,128,0.01,129,0.008]],["title/interfaces/AntennaField.html",[0,0.927,130,2.081]],["body/interfaces/AntennaField.html",[0,1.722,1,2.003,2,2.43,3,0.159,4,0.182,5,0.115,6,0.093,9,1.948,10,0.582,11,0.934,12,1.064,15,1.634,16,0.875,17,0.016,19,3.58,21,0.268,22,0.082,25,1.206,26,1.257,27,2.003,28,1.832,30,0.82,50,2.885,65,2.1,67,2.199,88,2.003,90,2.709,91,3.036,92,2.519,94,2.709,96,3.201,99,1.168,105,2.43,107,2.709,127,0.01,128,0.013,129,0.01,130,3.385,131,3.064,132,4.688,133,4.688,134,3.284,135,2.885,136,3.828,137,3.284,138,3.284,139,2.748,140,3.284,141,2.309,142,3.064,143,2.43,144,2.874,145,3.284,146,2.43,147,2.874,148,2.874,149,2.199,150,2.874,151,2.562,152,3.284,153,3.064,154,3.284,155,3.284,156,3.284,157,3.284,158,3.828,159,3.064,160,3.064,161,3.284,162,1.11,163,2.562,164,2.098,165,3.064,166,2.709,167,3.284,168,1.915,169,3.284]],["title/classes/Antennas.html",[22,0.063,84,2.208]],["body/classes/Antennas.html",[0,0.787,1,3.04,3,0.104,4,0.119,5,0.075,6,0.112,7,2.317,8,2.279,9,1.28,10,0.38,11,0.701,13,2.824,14,4.748,15,0.957,16,0.673,17,0.017,18,0.266,19,1.508,20,2.824,21,0.232,22,0.09,23,1.35,24,2.824,25,0.787,26,1.38,27,2.65,28,2.602,29,4.51,30,0.535,31,4.057,32,0.968,33,6.033,34,1.876,35,1.369,36,0.821,37,2.824,38,0.821,39,2.824,40,2.824,41,4.057,42,1.139,43,1.28,44,2.824,45,2.824,46,1.224,47,2.317,48,4.26,49,2.638,50,3.404,51,3.329,52,2.317,53,2.534,54,4.657,55,2.317,56,2,57,2.317,58,2.317,59,2,60,3.329,61,1.673,62,2.534,63,2.534,64,1.369,65,1.845,66,2,67,1.436,68,2.534,69,4.26,70,4.26,71,4.955,72,4.26,73,2.534,74,3.64,75,3.214,76,2.534,77,2.534,78,2.534,79,2.534,80,2.534,81,3.448,82,2.534,83,1.876,84,2.696,85,3.279,86,4.748,87,3.64,88,1.879,89,2.062,90,3.584,91,3.214,92,2.519,93,3.64,94,4.06,95,2.403,96,3.839,97,3.64,98,3.64,99,1.308,100,4.057,101,3.64,102,3.64,103,3.64,104,4.057,105,2.915,106,4.057,107,3.25,108,3.64,109,4.057,110,4.057,111,4.949,112,5.413,113,5.594,114,4.657,115,5.19,116,5.497,117,4.057,118,4.057,119,5.19,120,3.64,121,4.057,122,4.057,123,3.64,124,4.057,125,5.19,126,1.796,127,0.007,128,0.009,129,0.007,170,1.308,171,1.028,172,0.82,173,3.265,174,3.265,175,3.265]],["title/components/CardComponent.html",[176,0.574,177,1.291]],["body/components/CardComponent.html",[3,0.133,4,0.152,5,0.096,6,0.136,10,0.486,11,0.831,15,1.361,16,0.818,17,0.016,18,0.543,21,0.152,22,0.068,23,1.417,25,1.609,26,1.05,32,1.977,89,2.447,99,1.144,127,0.011,128,0.011,129,0.008,141,2.569,162,1.235,171,1.249,172,1.067,176,0.935,177,2.242,178,1.674,179,1.674,180,1.674,181,3.615,182,1.6,183,3.012,184,2.644,185,6.947,186,2.229,187,6.256,188,2.229,189,5.565,190,5.412,191,6.18,192,1.342,193,6.671,194,3.198,195,6.256,196,6.256,197,2.996,198,4.179,199,4.179,200,4.179,201,4.179,202,0.967,203,1.094,204,4.179,205,4.179,206,2.797,207,0.435,208,2.56,209,2.263,210,2.263,211,2.56,212,4.814,213,3.615,214,3.615,215,4.179,216,4.814,217,3.408,218,3.615,219,2.744,220,4.179,221,4.179,222,3.615,223,2.966,224,4.179,225,3.615,226,4.179,227,6.256,228,5.565,229,4.734,230,5.175,231,4.814,232,4.814,233,4.179,234,4.179,235,2.744,236,2.966,237,4.179,238,5.565,239,1.674,240,2.229,241,2.039,242,1.674,243,2.672,244,1.674,245,1.184,246,1.674,247,1.405,248,2.229,249,1.405,250,1.291,251,1.291,252,1.674,253,1.405,254,1.674,255,1.405,256,1.674,257,1.405,258,1.291,259,2.229,260,1.466,261,1.674,262,1.405,263,1.405,264,1.6,265,1.674,266,1.405,267,1.674,268,1.405,269,1.674,270,1.405,271,1.649,272,1.674,273,1.405,274,1.405,275,1.405,276,1.674,277,1.405,278,1.674,279,1.674,280,1.674]],["title/modules/CardModule.html",[281,1.139,282,1.69]],["body/modules/CardModule.html",[3,0.18,4,0.206,5,0.13,6,0.105,17,0.016,18,0.606,21,0.206,22,0.092,127,0.011,128,0.014,129,0.011,177,2.691,207,0.588,282,3.428,283,1.896,284,2.464,285,4.88,286,4.88,287,4.88,288,2.693,289,2.16,290,1.896,291,5.641,292,2.693,293,2.26,294,2.167,295,2.693,296,2.16,297,3.267,298,2.605,299,2.605,300,5.641,301,1.672]],["title/injectables/ComputeLinkBudgetService.html",[302,1.006,303,1.611]],["body/injectables/ComputeLinkBudgetService.html",[3,0.108,4,0.123,5,0.078,6,0.138,9,0.922,10,0.393,11,0.718,12,1.297,15,1.243,16,0.89,17,0.017,18,0.573,21,0.123,22,0.055,23,1.514,25,1.47,30,0.788,32,1.425,35,2.556,36,1.532,38,1.532,42,1.154,46,0.69,64,3.082,66,2.07,67,1.486,85,1.561,88,1.926,99,1.147,127,0.012,128,0.01,129,0.007,143,1.642,147,1.943,151,1.731,171,1.253,172,1.098,192,1.159,202,1.49,203,1.259,207,0.352,245,1.297,302,1.259,303,2.016,304,1.731,305,6.419,306,2.494,307,2.924,308,5.596,309,5.596,310,5.596,311,5.596,312,3.412,313,6.096,314,2.128,315,4.159,316,6.096,317,4.808,318,2.07,319,6.886,320,1.803,321,4.808,322,1.734,323,2.336,324,4.808,325,6.096,326,3.38,327,4.808,328,3.732,329,3.345,330,3.302,331,3.38,332,3.957,333,4.808,334,6.096,335,3.38,336,2.742,337,3.38,338,4.808,339,3.38,340,4.731,341,4.808,342,3.38,343,3.38,344,3.38,345,1.532,346,3.38,347,1.831,348,2.623,349,3.38,350,1.486,351,3.38,352,3.38,353,1.486,354,1.418,355,1.561,356,1.642,357,2.924,358,3.38,359,1.642,360,1.642,361,3.031,362,4.326,363,3.38,364,3.38,365,2.623,366,1.642,367,2.07,368,4.841,369,3.38,370,3.675,371,4.808,372,2.07,373,2.22,374,3.38,375,4.808,376,2.945,377,3.38,378,2.924,379,3.38,380,3.38,381,4.808,382,2.399,383,2.924,384,3.38,385,3.38,386,1.642,387,2.399,388,3.38,389,5.596,390,3.38,391,3.38,392,3.38,393,4.808,394,3.38,395,3.38,396,2.07,397,2.924,398,3.38,399,3.38,400,2.924,401,2.945,402,2.623,403,2.924,404,5.596,405,3.38,406,3.38,407,3.38,408,2.623,409,1.831,410,2.07,411,2.07,412,2.07,413,1.831,414,3.38,415,3.38,416,3.38,417,2.22,418,3.38,419,1.943,420,3.38,421,4.808,422,3.38,423,2.22,424,4.159,425,4.808,426,4.808,427,3.38,428,4.808,429,3.38,430,3.38,431,3.38,432,4.159,433,2.22,434,2.924,435,3.38,436,3.38,437,3.38,438,3.38,439,3.38,440,2.924,441,3.38,442,2.924,443,3.38,444,3.38,445,1.642,446,3.38]],["title/classes/CustomRouteReuseStrategy.html",[22,0.063,447,2.727]],["body/classes/CustomRouteReuseStrategy.html",[3,0.148,4,0.169,5,0.107,6,0.14,10,0.54,11,0.89,12,1.529,16,0.881,17,0.016,18,0.378,21,0.169,22,0.076,25,1.773,38,1.166,42,1.245,59,4.254,61,3.371,99,0.795,127,0.009,128,0.012,129,0.009,164,2.499,170,1.858,171,0.868,172,1.098,192,1.437,202,1.662,203,1.56,245,1.529,251,1.841,314,2.034,322,2.043,345,1.497,361,2.512,447,4.228,448,4.013,449,4.639,450,4.624,451,5.958,452,5.958,453,5.958,454,5.958,455,5.693,456,6.582,457,5.958,458,5.958,459,5.958,460,5.958,461,6.582,462,5.154,463,4.639,464,5.958,465,7.991,466,4.639,467,5.575,468,7.352,469,5.958,470,4.639,471,5.958,472,4.639,473,5.958,474,6.582,475,4.639,476,4.639,477,5.958,478,4.639,479,2.142,480,4.639,481,5.958,482,4.013,483,4.013,484,2.142,485,4.639,486,4.639,487,4.639,488,4.639,489,5.958,490,4.639,491,4.639,492,4.639,493,4.639,494,4.639,495,4.639,496,4.639]],["title/injectables/CustomValidators.html",[302,1.006,497,2.354]],["body/injectables/CustomValidators.html",[0,1.06,3,0.14,4,0.16,5,0.101,6,0.135,8,2.794,10,0.511,11,0.859,16,0.834,17,0.017,18,0.468,21,0.234,22,0.094,23,1.571,30,1.051,42,1.265,43,1.75,46,0.896,83,2.525,99,1.166,127,0.012,128,0.012,129,0.009,139,1.932,171,1.402,172,1.055,207,0.458,302,1.506,304,2.251,336,2.704,359,2.135,360,2.135,361,2.38,376,3.523,401,2.692,419,2.525,484,3.345,497,3.523,498,5.142,499,3.119,500,4.977,501,4.977,502,5.752,503,4.977,504,4.394,505,5.877,506,4.394,507,4.394,508,4.394,509,4.394,510,4.829,511,3.523,512,5.28,513,0.935,514,3.411,515,3.411,516,2.525,517,2.886,518,2.886,519,3.411,520,2.525,521,3.411,522,2.886,523,5.142,524,3.411,525,3.411,526,3.411,527,2.529,528,2.886,529,4.082,530,4.464,531,4.082,532,4.082,533,3.119,534,2.029,535,3.411,536,2.525,537,3.411,538,2.886,539,3.411,540,2.692,541,2.692,542,2.886,543,3.411,544,2.947,545,3.411,546,3.411,547,2.38,548,2.525,549,3.411,550,4.464,551,3.411,552,4.464,553,3.411,554,3.411,555,3.411]],["title/classes/DrawingDefault.html",[22,0.063,556,2.354]],["body/classes/DrawingDefault.html",[3,0.127,4,0.145,5,0.092,6,0.122,10,0.464,11,0.806,15,0.813,16,0.803,17,0.017,18,0.325,21,0.145,22,0.088,27,3.094,28,1.461,32,1.94,38,1.887,43,1.923,65,1.34,81,4.315,83,2.292,85,3.43,89,3.397,92,2.609,99,1.122,127,0.008,128,0.011,129,0.008,135,3.567,170,1.597,171,1.144,172,0.913,176,1.16,271,1.182,274,1.34,281,1.182,534,2.49,556,3.303,557,4.009,558,3.45,559,6.11,560,6.11,561,3.743,562,1.937,563,3.099,564,4.665,565,5.482,566,4.732,567,5.47,568,6.546,569,4.665,570,5.393,571,6.546,572,4.665,573,5.393,574,4.665,575,5.662,576,4.665,577,5.393,578,5.662,579,3.541,580,6.546,581,4.665,582,5.393,583,5.393,584,6.546,585,4.665,586,5.393,587,5.393,588,2.921,589,5.393,590,4.665,591,3.988,592,2.83,593,4.665,594,5.393,595,2.49,596,3.988,597,3.988,598,2.921,599,2.83,600,3.45,601,1.937]],["title/classes/EmptyForm.html",[22,0.063,163,1.968]],["body/classes/EmptyForm.html",[0,1.712,1,1.972,3,0.157,4,0.179,5,0.113,6,0.137,9,1.996,10,0.573,11,0.924,12,1.44,15,1.624,16,0.87,17,0.016,19,3.539,21,0.267,22,0.081,25,1.188,26,1.238,27,1.972,28,1.804,30,1.109,50,3.278,65,2.08,67,2.165,88,1.972,90,2.667,91,3.449,92,2.275,94,2.667,96,3.17,99,1.16,105,2.392,107,2.667,127,0.01,128,0.012,129,0.01,130,2.667,131,3.016,132,3.234,133,3.234,134,3.234,135,2.857,136,3.791,137,3.234,138,3.234,139,2.721,140,3.234,141,2.274,142,3.016,143,2.392,144,2.83,145,3.234,146,2.392,147,2.83,148,2.83,149,2.165,150,2.83,151,2.523,152,3.234,153,3.016,154,3.234,155,3.234,156,3.234,157,3.234,158,4.349,159,3.016,160,3.016,161,3.234,162,1.093,163,3.17,164,2.595,165,3.016,166,2.667,167,3.234,168,1.885,169,3.234,170,1.972,172,1.061,602,6.189,603,4.925,604,4.925]],["title/interfaces/Field.html",[0,0.927,19,1.774]],["body/interfaces/Field.html",[0,1.682,1,2.65,2,2.278,3,0.149,4,0.171,5,0.108,6,0.088,9,2.012,10,0.545,11,0.896,12,1.631,15,1.632,16,0.959,17,0.016,19,3.611,21,0.263,22,0.077,25,1.131,26,1.179,27,2.65,28,2.424,30,0.769,50,2.77,65,2.017,67,2.062,88,1.878,90,2.54,91,2.915,92,2.478,94,3.777,96,3.692,99,1.264,105,2.278,107,2.54,127,0.009,128,0.012,129,0.009,130,2.54,131,2.873,132,3.08,133,3.08,134,3.08,135,2.77,136,3.675,137,3.08,138,3.08,139,3.066,140,3.08,141,2.165,142,2.873,143,2.278,144,2.695,145,3.08,146,2.278,147,2.695,148,2.695,149,2.062,150,2.695,151,3.572,152,3.08,153,2.873,154,3.08,155,4.579,156,4.579,157,3.08,158,3.675,159,2.873,160,2.873,161,3.08,162,1.041,163,2.402,164,1.967,165,2.873,166,2.54,167,3.08,168,1.796,169,3.08]],["title/interfaces/Form.html",[0,0.927,9,1.049]],["body/interfaces/Form.html",[0,1.685,1,1.887,2,2.289,3,0.15,4,0.172,5,0.108,6,0.088,9,1.97,10,0.548,11,0.899,12,1.673,15,1.648,16,0.941,17,0.016,19,3.542,21,0.263,22,0.077,25,1.599,26,1.184,27,1.887,28,1.727,30,0.772,50,3.333,65,2.023,67,2.072,88,1.887,90,2.553,91,3.507,92,2.229,94,2.553,96,3.083,99,1.137,105,3.394,107,3.784,127,0.009,128,0.012,129,0.009,130,2.553,131,2.887,132,3.095,133,3.095,134,3.095,135,2.779,136,3.686,137,3.095,138,3.095,139,2.646,140,3.095,141,2.176,142,2.887,143,2.289,144,2.708,145,3.095,146,2.289,147,2.708,148,2.708,149,2.072,150,2.708,151,2.414,152,3.095,153,2.887,154,3.095,155,3.095,156,3.095,157,3.095,158,4.421,159,4.279,160,4.279,161,4.588,162,1.046,163,2.414,164,1.976,165,2.887,166,2.553,167,3.095,168,1.804,169,3.095]],["title/components/FormComponent.html",[176,0.574,247,1.291]],["body/components/FormComponent.html",[3,0.061,4,0.07,5,0.044,6,0.139,9,1.859,10,0.223,11,0.466,12,1.2,15,1.329,16,0.892,17,0.017,18,0.495,19,2.95,21,0.07,22,0.031,23,1.389,25,1.417,26,1.417,30,0.315,32,1.346,34,1.104,35,2.095,36,1.255,38,1.141,42,1.053,43,0.524,46,1.239,49,1.997,56,1.912,59,1.912,61,0.984,65,1.325,66,1.177,89,0.845,92,1.526,95,2.02,99,1.136,105,1.916,123,1.491,126,1.51,127,0.008,128,0.006,129,0.004,130,2.46,135,0.887,141,2.306,144,1.104,148,1.104,149,1.373,162,0.875,163,2.02,171,1.326,172,1.115,176,0.878,177,0.646,178,0.769,179,0.769,180,0.769,182,0.736,183,2.665,184,2.339,186,1.25,188,1.25,192,0.753,194,1.794,202,1.445,203,1.591,206,2.465,207,0.2,208,1.177,209,1.041,210,1.041,211,1.177,217,1.912,218,1.662,236,1.364,239,0.769,240,1.25,241,1.144,242,0.769,243,1.819,244,0.769,245,1.293,246,0.769,247,1.526,248,1.25,249,0.646,250,0.594,251,0.965,252,0.769,253,0.646,254,0.769,255,0.646,256,0.769,257,0.646,258,0.594,259,1.25,260,0.674,261,0.769,262,0.646,263,0.646,264,0.736,265,0.769,266,0.646,267,0.769,268,0.646,269,0.769,270,0.646,271,0.925,272,0.769,273,0.646,274,0.646,275,0.646,276,0.769,277,0.646,278,0.769,279,0.769,280,0.769,301,0.569,306,1.325,314,1.877,320,1.477,322,1.604,330,1.691,336,2.446,345,1.606,350,0.845,353,0.845,370,3.989,372,1.177,373,3.514,376,1.177,417,2.05,419,2.266,433,1.262,445,1.517,484,3.008,510,4.171,513,0.409,520,3.377,523,4.312,527,1.997,532,1.364,533,1.364,536,2.61,538,2.05,541,1.177,542,2.05,547,1.041,548,1.794,562,0.933,601,1.517,605,1.662,606,3.411,607,2.701,608,3.944,609,3.944,610,3.944,611,2.416,612,3.944,613,3.944,614,4.995,615,3.944,616,3.411,617,3.122,618,3.122,619,3.122,620,4.541,621,3.122,622,3.122,623,4.541,624,4.541,625,5.352,626,3.944,627,2.799,628,3.944,629,3.122,630,3.944,631,2.05,632,1.491,633,3.122,634,3.122,635,1.921,636,1.921,637,1.921,638,4.541,639,1.921,640,3.122,641,1.921,642,3.122,643,1.921,644,3.122,645,1.921,646,2.701,647,1.921,648,3.122,649,1.921,650,3.122,651,1.921,652,1.921,653,1.921,654,1.921,655,1.921,656,1.921,657,3.944,658,1.921,659,1.921,660,4.846,661,1.921,662,2.049,663,1.921,664,1.921,665,1.921,666,1.921,667,3.514,668,3.877,669,1.921,670,1.921,671,1.921,672,1.921,673,0.933,674,1.177,675,1.491,676,1.364,677,1.491,678,1.262,679,1.662,680,1.177,681,1.921,682,3.122,683,1.921,684,1.921,685,1.921,686,6.389,687,3.122,688,1.921,689,3.122,690,5.877,691,3.29,692,2.46,693,2.216,694,2.216,695,2.61,696,2.416,697,1.921,698,3.122,699,4.541,700,1.921,701,1.177,702,1.662,703,1.491,704,1.921,705,1.921,706,1.921,707,1.491,708,1.662,709,1.921,710,1.491,711,1.491,712,3.122,713,1.491,714,1.921,715,3.122,716,1.491,717,1.921,718,1.921,719,1.491,720,1.921,721,1.491,722,4.541,723,1.921,724,3.944,725,4.321,726,4.995,727,2.423,728,1.177,729,1.921,730,3.122,731,1.921,732,1.921,733,1.921,734,1.921,735,1.921,736,2.423,737,1.491,738,1.262,739,1.921,740,1.921,741,1.921,742,1.662,743,1.921,744,1.262,745,1.921,746,1.662,747,1.921,748,1.921,749,2.701,750,2.423,751,1.921,752,1.491,753,1.491,754,1.921,755,1.921,756,1.921,757,2.701,758,2.423,759,1.921,760,3.928,761,3.122,762,3.944,763,1.921,764,2.701,765,2.701,766,3.122,767,3.514,768,1.921,769,3.122,770,3.122,771,1.921,772,1.921,773,1.921,774,1.662,775,2.701,776,1.921,777,1.921,778,1.921,779,1.921,780,1.921,781,3.122,782,1.921,783,1.921,784,1.921,785,1.921,786,1.491,787,1.921,788,2.46,789,1.662,790,1.491,791,1.921,792,1.921,793,1.921,794,2.701,795,1.662,796,1.921,797,3.944,798,1.921,799,4.541,800,1.921,801,1.921,802,3.411,803,1.662,804,3.411,805,1.921,806,1.921,807,1.921,808,1.921,809,3.411,810,1.921,811,1.921,812,1.662,813,1.921,814,1.921,815,4.541,816,1.491,817,2.423,818,3.798,819,1.921,820,1.921,821,1.921,822,1.921,823,1.662,824,1.921,825,1.364,826,1.921,827,1.041,828,3.122,829,1.921,830,1.921,831,1.921,832,1.662,833,1.921,834,1.921,835,1.921,836,1.662,837,1.491,838,1.921,839,1.177,840,1.921,841,3.122,842,3.122,843,3.122,844,3.122,845,1.921,846,1.662,847,1.662,848,1.491,849,1.262,850,3.122,851,1.921,852,1.662,853,1.921,854,1.662,855,1.921,856,2.701,857,1.491,858,3.122,859,1.921,860,1.921]],["title/classes/FormControlWarn.html",[22,0.063,520,2.208]],["body/classes/FormControlWarn.html",[0,1.143,3,0.151,4,0.173,5,0.109,6,0.113,8,3.231,10,0.552,11,0.903,16,0.581,17,0.017,18,0.492,21,0.242,22,0.099,23,1.357,30,0.777,42,1.296,43,1.815,46,0.967,83,2.725,127,0.012,128,0.012,129,0.01,139,2.085,170,1.899,171,1.311,172,0.708,207,0.494,302,1.582,336,2.769,359,2.304,360,2.304,361,2.568,376,3.701,401,2.905,419,2.725,484,3.414,497,2.905,498,4.288,499,3.365,500,3.68,501,3.68,503,3.68,505,5.613,510,4.97,511,4.073,512,5.435,513,1.009,514,3.68,515,3.68,516,2.725,517,3.114,518,3.114,519,3.68,520,3.473,521,5.161,522,3.114,523,5.247,524,3.68,525,3.68,526,3.68,527,2.657,528,3.114,529,4.288,530,4.689,531,4.288,532,4.288,533,3.365,534,2.19,535,3.68,536,2.725,537,3.68,538,3.114,539,3.68,540,2.905,541,2.905,542,3.114,543,3.68,544,3.095,545,3.68,546,3.68,547,2.568,548,2.725,549,3.68,550,4.689,551,3.68,552,4.689,553,3.68,554,3.68,555,3.68,861,4.742]],["title/modules/FormModule.html",[281,1.139,862,2.354]],["body/modules/FormModule.html",[3,0.167,4,0.191,5,0.121,6,0.098,17,0.016,18,0.631,21,0.191,22,0.086,36,1.905,127,0.011,128,0.013,129,0.011,207,0.546,247,2.667,283,1.761,284,2.356,288,2.576,289,2.006,290,1.761,292,2.576,293,2.162,294,2.072,295,2.576,296,2.006,297,3.125,298,2.42,299,2.42,301,1.906,320,1.985,353,2.304,513,1.115,678,3.441,862,4.878,863,4.533,864,4.533,865,4.533,866,4.533,867,4.533,868,2.852,869,5.241,870,2.828,871,4.565,872,5.241,873,2.684,874,3.21]],["title/injectables/FormService.html",[302,1.006,320,1.006]],["body/injectables/FormService.html",[1,1.047,3,0.083,4,0.095,5,0.111,6,0.139,9,2.013,10,0.304,11,0.594,12,1.35,15,1.551,16,0.883,17,0.017,18,0.532,19,2.486,21,0.095,22,0.043,23,1.614,25,1.647,26,1.21,30,0.652,32,1.717,35,2.02,36,1.456,38,1.21,42,1.172,43,1.086,46,1.294,49,2.367,56,1.601,61,1.339,64,2.02,65,0.878,67,1.149,91,1.27,92,0.878,96,1.339,99,1.148,127,0.005,128,0.008,129,0.008,139,1.749,143,1.27,148,1.502,153,1.601,160,3.548,162,0.58,171,1.334,172,1.109,176,0.72,192,0.959,197,2.02,202,1.629,203,1.661,206,1.096,207,0.272,223,1.855,245,1.499,302,1.042,304,1.339,306,1.619,312,2.823,314,1.96,320,1.042,322,1.804,328,2.028,329,2.34,330,2.916,332,3.329,345,1.643,347,1.416,350,1.149,353,1.149,356,1.27,359,1.27,360,1.27,361,2.609,362,1.855,382,1.855,396,2.437,409,1.416,445,1.27,462,2.261,484,1.207,497,3.886,511,2.437,513,0.556,516,1.502,517,1.716,518,3.535,520,1.502,527,1.149,528,1.716,536,2.768,541,2.437,600,3.441,601,1.933,611,2.95,616,2.261,631,2.612,646,2.261,662,2.931,667,1.716,673,2.615,677,2.028,679,2.261,680,1.601,701,1.601,703,2.028,711,2.028,727,2.028,728,2.437,742,2.261,744,1.716,749,2.261,750,2.028,752,3.087,786,2.028,794,3.441,795,4.166,802,2.261,804,5.011,818,4.641,846,2.261,875,2.261,876,4.817,877,4.817,878,4.817,879,4.817,880,3.978,881,3.978,882,3.978,883,3.758,884,3.441,885,3.298,886,3.978,887,4.817,888,2.614,889,2.609,890,2.614,891,3.978,892,2.614,893,3.978,894,2.614,895,3.978,896,5.793,897,2.614,898,2.614,899,2.614,900,3.978,901,2.614,902,2.614,903,3.978,904,4.817,905,2.614,906,2.614,907,2.614,908,2.614,909,2.614,910,3.535,911,3.441,912,3.441,913,3.978,914,2.614,915,2.614,916,3.978,917,2.614,918,2.614,919,2.614,920,2.614,921,2.614,922,2.614,923,1.601,924,2.028,925,2.614,926,2.614,927,2.614,928,2.614,929,2.614,930,4.817,931,2.614,932,2.261,933,1.601,934,3.087,935,2.614,936,2.614,937,3.978,938,2.614,939,2.614,940,2.614,941,2.614,942,1.716,943,2.028,944,3.441,945,2.614,946,2.614,947,2.614,948,2.614,949,2.614,950,2.028,951,2.028,952,2.614,953,2.261,954,2.614,955,1.855,956,1.716,957,2.614,958,3.978,959,2.261,960,2.614,961,2.614,962,2.614,963,2.614,964,2.614,965,2.614,966,3.087,967,2.614,968,2.261,969,2.614,970,2.614,971,2.614,972,2.614,973,2.614,974,2.614,975,2.614,976,2.614,977,3.978,978,2.261,979,2.614,980,2.614,981,2.614,982,2.614,983,2.614,984,1.601,985,2.614,986,2.614,987,3.087,988,3.978,989,2.614,990,2.614,991,2.614,992,2.614,993,2.028,994,2.261,995,2.614,996,2.614,997,2.028,998,2.261,999,2.614,1000,3.441,1001,2.614,1002,2.028,1003,2.261,1004,2.261,1005,2.261,1006,2.614,1007,2.614,1008,2.261,1009,2.614,1010,2.261,1011,2.614,1012,2.614,1013,3.978,1014,2.614,1015,3.978,1016,2.614,1017,2.614,1018,2.614,1019,2.614,1020,2.614,1021,2.614,1022,2.614,1023,2.614,1024,2.614,1025,3.978,1026,2.614,1027,2.614,1028,2.614]],["title/classes/FormsTemplate.html",[22,0.063,611,2.354]],["body/classes/FormsTemplate.html",[1,2.467,3,0.04,4,0.046,5,0.029,6,0.117,9,1.913,10,0.146,11,0.326,16,0.924,17,0.017,18,0.178,21,0.046,22,0.021,26,1.08,27,2.27,29,3.47,38,1.548,43,1.173,50,3.201,59,2.633,61,1.119,65,0.734,67,0.961,81,3.063,83,0.722,84,0.722,85,3.448,88,0.503,90,3.52,91,3.368,92,2.66,93,3.795,94,4.282,95,2.504,96,4.062,97,3.795,98,3.795,99,1.365,101,3.795,102,4.923,103,4.781,105,2.375,107,2.648,108,2.686,111,2.456,113,5.89,114,2.686,120,4.4,126,1.872,127,0.003,128,0.004,129,0.003,139,3.415,158,4.193,159,3.773,162,0.485,163,1.484,166,1.183,168,2.274,170,0.503,171,1.153,172,0.92,183,0.481,217,2.12,361,1.183,413,1.874,483,1.087,534,1.598,536,1.255,578,2.994,611,1.338,691,2.501,693,1.55,694,1.55,695,1.989,696,2.12,713,1.695,746,2.994,767,2.273,816,1.695,825,0.892,839,0.77,933,2.12,942,1.434,953,1.087,956,0.826,998,1.89,1029,1.087,1030,2.897,1031,2.897,1032,2.897,1033,2.897,1034,2.897,1035,2.897,1036,2.897,1037,2.897,1038,2.897,1039,2.897,1040,2.897,1041,2.897,1042,2.897,1043,2.184,1044,2.184,1045,1.257,1046,3.461,1047,4.229,1048,2.904,1049,3.461,1050,3.461,1051,5.784,1052,3.461,1053,3.461,1054,3.461,1055,2.994,1056,2.994,1057,3.461,1058,3.461,1059,3.461,1060,4.889,1061,5.329,1062,1.257,1063,3.47,1064,4.229,1065,4.889,1066,4.889,1067,4.889,1068,4.889,1069,3.461,1070,5.669,1071,3.461,1072,3.461,1073,3.461,1074,3.461,1075,3.461,1076,3.461,1077,3.461,1078,3.461,1079,3.461,1080,3.461,1081,3.461,1082,2.994,1083,1.257,1084,3.461,1085,2.273,1086,4.612,1087,2.456,1088,4.889,1089,4.889,1090,1.257,1091,2.686,1092,3.461,1093,4.61,1094,4.904,1095,5.329,1096,3.782,1097,2.184,1098,3.461,1099,2.994,1100,2.184,1101,3.461,1102,4.229,1103,3.461,1104,3.461,1105,3.461,1106,1.257,1107,3.461,1108,2.686,1109,3.461,1110,3.461,1111,2.184,1112,1.257,1113,3.258,1114,3.461,1115,3.919,1116,3.461,1117,3.461,1118,3.461,1119,3.461,1120,3.461,1121,3.461,1122,3.461,1123,3.461,1124,3.461,1125,2.994,1126,3.461,1127,1.257,1128,1.257,1129,2.184,1130,1.695,1131,1.89,1132,2.184,1133,2.184,1134,2.184,1135,1.89,1136,2.184,1137,2.184,1138,2.184,1139,2.184,1140,1.257,1141,1.89,1142,1.89,1143,1.89,1144,1.89,1145,1.89,1146,1.89,1147,1.89,1148,1.89,1149,1.89,1150,1.89,1151,1.89,1152,1.89,1153,1.89,1154,1.257,1155,1.257,1156,1.338,1157,2.184,1158,3.461,1159,2.184,1160,2.184,1161,1.257,1162,1.257,1163,2.184,1164,1.338,1165,2.184,1166,2.184,1167,1.89,1168,2.184,1169,1.89,1170,2.184,1171,2.184,1172,1.257,1173,2.184,1174,1.257,1175,2.184,1176,2.184,1177,1.257,1178,1.257,1179,1.257,1180,0.892,1181,1.257,1182,1.257,1183,1.257,1184,1.257]],["title/classes/HelperFunctions.html",[22,0.063,674,2.354]],["body/classes/HelperFunctions.html",[3,0.111,4,0.127,5,0.08,6,0.132,10,0.407,11,0.736,12,1.317,15,1.546,16,0.853,17,0.017,21,0.127,22,0.093,23,1.331,28,2.937,42,1.213,43,1.898,46,1.381,60,2.482,81,3.557,85,3.617,99,1.118,111,3.496,112,3.823,126,2.183,127,0.007,128,0.01,129,0.007,170,1.401,171,1.329,172,1.039,192,1.188,202,1.432,245,1.317,322,1.76,373,2.297,534,1.615,593,3.025,601,1.699,674,3.017,676,3.496,692,1.894,693,4.046,694,4.046,695,3.996,696,4.61,752,3.823,758,2.714,764,4.261,765,4.932,767,3.744,924,3.823,1087,3.496,1130,3.823,1135,4.261,1164,2.142,1185,6.142,1186,3.025,1187,4.932,1188,5.702,1189,5.702,1190,4.925,1191,4.925,1192,4.925,1193,4.925,1194,4.925,1195,4.925,1196,3.278,1197,3.497,1198,4.925,1199,3.497,1200,4.925,1201,3.497,1202,2.831,1203,4.925,1204,4.925,1205,4.925,1206,7.1,1207,3.497,1208,4.925,1209,3.497,1210,4.925,1211,5.702,1212,3.497,1213,3.497,1214,4.425,1215,4.046,1216,4.925,1217,6.524,1218,3.497,1219,3.497,1220,4.925,1221,4.925,1222,3.497,1223,4.925,1224,4.925,1225,5.354,1226,4.925,1227,4.925,1228,3.823,1229,3.497,1230,3.497,1231,3.497,1232,3.497,1233,3.497,1234,4.932,1235,3.497,1236,3.497,1237,6.189,1238,4.925,1239,4.925,1240,3.497,1241,2.142,1242,3.497,1243,3.497,1244,3.497,1245,3.497,1246,3.025,1247,3.497,1248,3.497,1249,2.482,1250,3.497,1251,3.497,1252,3.497,1253,3.497,1254,3.497,1255,3.497,1256,4.925,1257,3.497,1258,4.925,1259,3.497,1260,2.714,1261,3.497,1262,3.497,1263,3.497,1264,3.497,1265,3.497,1266,3.497]],["title/components/JSatOrbLinkComponent.html",[176,0.574,249,1.291]],["body/components/JSatOrbLinkComponent.html",[3,0.11,4,0.126,5,0.08,6,0.134,10,0.403,11,0.731,12,1.041,15,0.707,16,0.797,17,0.016,18,0.586,21,0.126,22,0.057,23,1.469,25,1.486,26,0.871,30,0.802,32,1.682,35,2.379,36,1.549,38,1.23,42,0.877,43,1.336,55,3.473,64,2.909,99,0.973,127,0.01,128,0.01,129,0.007,141,1.6,162,1.086,164,2.052,166,1.877,171,0.916,172,1.058,176,0.848,177,1.165,178,1.388,179,1.388,180,1.388,182,1.327,183,2.945,184,2.585,186,1.96,188,1.96,192,1.18,197,1.453,202,1.313,203,1.486,206,1.453,207,0.361,239,1.388,240,1.96,241,1.793,242,1.388,243,2.469,244,1.388,245,1.312,246,1.388,247,1.165,248,1.96,249,2.072,250,2.226,251,2.464,252,1.388,253,1.165,254,1.388,255,1.165,256,1.388,257,1.165,258,1.071,259,1.96,260,1.216,261,1.388,262,1.165,263,1.165,264,1.327,265,1.388,266,1.165,267,1.388,268,1.165,269,1.388,270,1.165,271,1.451,272,1.388,273,1.165,274,1.165,275,1.165,276,1.388,277,1.165,278,1.388,279,1.388,280,1.388,306,1.165,314,1.512,322,1.392,330,1.877,345,1.696,353,1.524,370,2.276,373,2.276,484,2.26,511,3.982,513,0.737,542,2.276,544,1.775,601,1.684,662,2.172,667,2.276,680,2.123,716,3.798,728,2.123,884,4.908,910,2.276,911,2.998,1085,2.276,1267,5.59,1268,5.59,1269,2.998,1270,3.073,1271,5.673,1272,4.894,1273,5.673,1274,5.237,1275,6.164,1276,6.164,1277,4.894,1278,3.776,1279,3.466,1280,3.982,1281,4.908,1282,2.995,1283,3.466,1284,3.466,1285,4.894,1286,3.466,1287,3.466,1288,4.789,1289,5.046,1290,3.466,1291,3.466,1292,3.466,1293,3.466,1294,2.123,1295,2.123,1296,2.998,1297,2.69,1298,3.466,1299,3.466,1300,3.466,1301,3.466,1302,3.466,1303,3.466,1304,3.466,1305,2.998,1306,3.466,1307,2.998,1308,3.466,1309,3.466,1310,3.466,1311,3.466,1312,4.026,1313,2.46,1314,3.466,1315,3.466,1316,4.026,1317,3.466,1318,2.998,1319,4.026,1320,3.466,1321,3.466,1322,3.466,1323,3.466,1324,5.673,1325,3.466,1326,3.466,1327,3.466,1328,3.466,1329,3.466,1330,4.233,1331,4.233,1332,3.798,1333,3.473,1334,4.894,1335,2.998,1336,3.466]],["title/injectables/JSatOrbLinkService.html",[302,1.006,1280,2.354]],["body/injectables/JSatOrbLinkService.html",[3,0.121,4,0.139,5,0.088,6,0.141,10,0.443,11,0.781,12,1.27,15,1.217,16,0.852,17,0.017,18,0.58,21,0.139,22,0.062,30,0.857,35,2.503,36,1.614,38,0.957,42,0.937,64,3.041,65,1.28,67,1.675,99,0.896,127,0.008,128,0.011,129,0.008,142,2.334,171,1.202,172,1.123,176,0.569,192,1.261,202,1.678,203,1.762,206,1.598,207,0.397,223,2.704,245,1.27,250,2.079,251,2.341,302,1.369,304,1.951,314,2.405,320,1.821,322,1.697,323,2.899,329,1.851,330,2.063,345,1.5,347,2.063,350,1.675,353,1.675,354,1.598,355,1.759,356,1.851,359,1.851,360,1.851,365,2.957,367,2.334,417,2.502,632,2.957,707,2.957,737,2.957,744,3.433,812,3.296,817,4.057,955,2.704,966,2.957,1196,1.759,1267,5.88,1274,5.526,1280,3.202,1281,5.162,1282,3.12,1294,2.334,1295,2.334,1297,4.984,1305,6.272,1313,4.776,1337,5.88,1338,2.957,1339,5.395,1340,5.968,1341,6.422,1342,6.422,1343,5.227,1344,5.227,1345,5.227,1346,3.81,1347,3.81,1348,3.81,1349,3.81,1350,5.227,1351,3.81,1352,5.968,1353,5.227,1354,3.81,1355,3.81,1356,6.159,1357,3.81,1358,3.81,1359,3.81,1360,3.296,1361,5.227,1362,5.227,1363,3.81,1364,3.81,1365,3.81,1366,2.957,1367,2.704,1368,2.189,1369,3.81,1370,3.81,1371,5.227,1372,3.296,1373,3.81,1374,3.296,1375,3.81,1376,3.81,1377,3.81,1378,5.968,1379,3.81,1380,3.81,1381,3.81,1382,3.81,1383,3.81]],["title/components/LayoutComponent.html",[176,0.574,253,1.291]],["body/components/LayoutComponent.html",[1,2.352,3,0.068,4,0.077,5,0.049,6,0.138,9,1.954,10,0.393,11,0.505,12,1.024,15,1.491,16,0.918,17,0.017,18,0.478,21,0.077,22,0.035,23,1.617,25,1.47,26,0.85,30,0.554,32,1.909,35,2.203,36,1.32,38,1.209,43,0.579,46,0.86,49,1.487,56,1.3,65,1.137,75,1.031,84,1.22,88,0.85,89,2.115,91,2.048,92,1.137,95,1.087,99,1.194,105,2.048,126,0.812,127,0.007,128,0.007,129,0.007,146,1.031,149,0.933,162,0.936,164,1.418,165,2.072,168,2.406,171,1.33,172,1.098,176,0.63,177,0.713,178,0.85,179,0.85,180,0.85,182,0.812,183,2.72,184,2.388,186,1.354,188,1.354,192,0.816,202,1.113,203,1.376,206,0.89,207,0.221,209,1.149,217,2.072,229,2.992,230,3.729,231,1.836,235,2.221,239,0.85,240,1.354,241,1.239,242,0.85,243,1.926,244,0.85,245,1.498,246,0.85,247,0.713,248,1.354,249,0.713,250,0.656,251,0.656,252,0.85,253,1.617,254,0.85,255,0.713,256,0.85,257,0.713,258,0.656,259,1.354,260,0.744,261,0.85,262,0.713,263,0.713,264,0.812,265,0.85,266,0.713,267,0.85,268,0.713,269,0.85,270,0.713,271,1.002,272,0.85,273,0.713,274,0.713,275,0.713,276,0.85,277,0.713,278,0.85,279,0.85,280,0.85,289,0.812,314,1.73,315,2.926,318,1.3,320,1.687,322,1.368,323,2.048,347,1.149,353,0.933,354,0.89,355,0.98,356,1.031,362,1.506,367,1.3,370,4.523,373,3.159,376,1.3,396,2.072,403,1.836,413,1.149,467,3.273,479,0.98,547,1.149,562,2.337,566,2.072,574,1.836,588,1.149,611,2.583,627,2.992,667,4.396,668,4.732,677,1.647,691,3.73,692,1.149,702,1.836,713,1.647,725,1.836,736,1.647,750,3.273,753,1.647,775,1.836,790,1.647,825,1.506,832,1.836,849,1.393,923,1.3,932,1.836,951,1.647,966,1.647,984,2.946,987,1.647,997,3.733,1002,1.647,1003,1.836,1047,3.647,1048,2.867,1063,3.414,1085,2.221,1086,2.992,1091,3.273,1108,2.625,1141,1.836,1142,1.836,1143,1.836,1144,1.836,1145,1.836,1146,1.836,1147,1.836,1148,1.836,1149,1.836,1150,1.836,1151,1.836,1152,1.836,1153,1.836,1270,2.284,1278,2.946,1384,6.389,1385,1.836,1386,3.382,1387,4.217,1388,3.382,1389,4.217,1390,4.217,1391,4.217,1392,4.217,1393,4.217,1394,4.217,1395,4.217,1396,4.81,1397,4.217,1398,3.382,1399,3.382,1400,4.81,1401,3.382,1402,3.382,1403,2.122,1404,2.122,1405,3.382,1406,2.122,1407,2.122,1408,3.382,1409,2.122,1410,2.122,1411,3.382,1412,2.122,1413,2.122,1414,2.122,1415,3.382,1416,2.122,1417,2.122,1418,3.382,1419,2.122,1420,2.122,1421,2.122,1422,2.122,1423,2.122,1424,4.217,1425,3.647,1426,4.217,1427,4.217,1428,3.647,1429,4.217,1430,2.122,1431,2.122,1432,2.122,1433,2.122,1434,2.122,1435,2.122,1436,2.122,1437,2.122,1438,3.382,1439,1.647,1440,1.647,1441,1.836,1442,1.836,1443,1.836,1444,1.836,1445,1.836,1446,2.926,1447,2.122,1448,5.407,1449,4.217,1450,1.506,1451,4.217,1452,1.836,1453,2.122,1454,2.926,1455,2.122,1456,2.122,1457,2.122,1458,2.122,1459,2.122,1460,2.122,1461,2.122,1462,5.254,1463,2.122,1464,3.382,1465,3.382,1466,3.382,1467,2.122,1468,2.122,1469,2.122,1470,2.122,1471,2.122,1472,3.382,1473,3.382,1474,3.382,1475,2.122,1476,2.122,1477,2.122,1478,3.382,1479,2.122,1480,2.122,1481,1.647,1482,1.836,1483,2.122,1484,2.122,1485,3.382,1486,2.122,1487,2.122,1488,2.122,1489,2.122,1490,3.382,1491,4.217,1492,2.122,1493,2.122,1494,2.122,1495,2.122,1496,2.122,1497,2.122,1498,2.122,1499,2.122,1500,1.506,1501,2.122,1502,2.122,1503,2.122,1504,2.122,1505,2.122,1506,3.382,1507,2.122,1508,2.122,1509,2.122,1510,1.647,1511,3.382,1512,2.122,1513,1.836,1514,2.122,1515,1.836,1516,2.122,1517,2.122,1518,6.097,1519,3.382,1520,1.836,1521,1.836,1522,1.836,1523,2.221,1524,1.836,1525,2.122,1526,2.122,1527,2.992,1528,2.122,1529,1.836,1530,2.122,1531,2.122,1532,3.647,1533,2.769,1534,2.992,1535,2.122,1536,2.122,1537,2.992,1538,3.382,1539,3.382,1540,1.647,1541,1.836,1542,1.647,1543,1.647,1544,1.836,1545,2.926,1546,3.382,1547,2.122,1548,1.506,1549,2.122,1550,1.836,1551,2.122,1552,2.122,1553,3.382,1554,1.836,1555,2.122,1556,3.382]],["title/modules/LayoutModule.html",[281,1.139,1557,2.727]],["body/modules/LayoutModule.html",[3,0.137,4,0.156,5,0.099,6,0.08,17,0.017,18,0.644,21,0.156,22,0.07,127,0.009,128,0.011,129,0.009,162,0.952,207,0.447,223,3.045,249,2.595,250,1.75,251,1.959,253,2.595,275,2.595,282,3.165,283,1.442,284,2.075,288,2.268,289,1.643,290,1.442,292,2.268,293,1.903,294,1.825,295,2.268,296,1.643,297,2.085,298,1.981,299,1.981,301,1.679,306,1.442,447,4.019,455,4.899,479,1.981,482,4.899,513,0.913,738,2.818,744,2.818,786,4.395,862,4.409,868,2.756,870,2.49,871,4.019,873,2.198,1010,3.712,1268,3.33,1280,4.409,1296,3.712,1337,3.33,1446,3.712,1557,5.723,1558,3.712,1559,3.712,1560,3.712,1561,3.712,1562,3.712,1563,3.496,1564,4.726,1565,4.726,1566,4.726,1567,4.291,1568,2.466,1569,2.085,1570,2.324,1571,4.291,1572,3.33,1573,3.712,1574,4.291,1575,3.045,1576,4.291,1577,4.291,1578,4.291,1579,2.198,1580,2.628,1581,4.291,1582,4.291,1583,4.291,1584,4.291,1585,4.291,1586,4.291,1587,4.291,1588,4.291,1589,2.466,1590,4.291,1591,2.198,1592,2.628]],["title/interfaces/LinkBudgetComponent.html",[0,0.927,598,2.081]],["body/interfaces/LinkBudgetComponent.html",[0,1.157,2,1.638,3,0.107,4,0.123,5,0.078,6,0.063,9,0.92,10,0.392,11,0.717,15,1.481,16,0.789,17,0.017,21,0.204,22,0.055,23,1.498,25,1.348,27,2.577,28,2.841,42,1.233,43,1.756,46,1.513,49,1.482,75,1.638,89,2.677,92,2.163,127,0.007,128,0.01,129,0.007,135,3.177,146,1.638,162,1.428,168,2.139,171,1.046,172,0.504,176,0.504,202,0.78,245,1.189,306,1.613,314,1.881,345,0.847,387,2.393,527,2.11,540,2.065,547,2.599,561,2.065,563,1.937,565,4.321,566,4.308,579,2.214,588,1.826,598,3.876,601,2.331,662,1.291,692,1.826,701,2.94,728,2.065,839,2.94,933,2.94,942,2.214,984,2.94,1048,1.727,1096,2.393,1113,2.758,1156,2.065,1196,2.216,1450,2.393,1593,2.393,1594,2.616,1595,4.308,1596,4.991,1597,4.991,1598,1.826,1599,2.393,1600,4.746,1601,2.616,1602,4.321,1603,3.998,1604,4.725,1605,2.616,1606,2.616,1607,4.337,1608,2.616,1609,2.393,1610,3.966,1611,2.616,1612,2.616,1613,2.616,1614,2.616,1615,2.616,1616,2.616,1617,3.725,1618,2.616,1619,2.616,1620,2.616,1621,2.616,1622,2.616,1623,3.725,1624,2.616,1625,2.616,1626,2.616,1627,2.616,1628,2.616,1629,2.616,1630,3.725,1631,2.616,1632,2.616,1633,2.393,1634,2.065,1635,2.616,1636,2.616,1637,2.616,1638,2.616,1639,2.616,1640,2.616,1641,2.616,1642,2.616,1643,2.616,1644,2.616,1645,2.393,1646,2.393,1647,2.616,1648,2.616,1649,2.616,1650,2.616,1651,3.725,1652,2.616,1653,2.616,1654,2.616,1655,2.616,1656,2.616,1657,2.616,1658,2.393,1659,2.393,1660,1.826,1661,2.393,1662,2.616,1663,2.393,1664,2.616,1665,4.725,1666,2.616,1667,5.459,1668,5.554,1669,2.616,1670,2.616,1671,3.725,1672,3.725,1673,3.725,1674,4.725,1675,4.725,1676,4.725,1677,4.725,1678,4.337,1679,2.616]],["title/classes/LinkBudgetScenario.html",[22,0.063,1598,2.081]],["body/classes/LinkBudgetScenario.html",[0,1.012,3,0.089,4,0.102,5,0.065,6,0.139,9,0.766,10,0.326,11,0.627,12,1.422,15,1.459,16,0.92,17,0.017,21,0.183,22,0.046,23,1.603,25,0.677,27,1.681,28,2.835,30,0.46,42,1.165,43,1.774,46,1.459,49,1.234,75,1.363,89,1.234,92,2.185,99,0.957,127,0.006,128,0.008,129,0.006,135,2.577,146,1.363,162,1.483,168,2.401,170,1.124,171,1.279,172,1.115,176,0.419,192,1.012,202,1.655,203,1.642,245,1.503,306,1.69,314,2.21,322,1.9,345,0.705,387,1.992,527,1.846,540,1.719,547,2.274,561,3.08,562,3.046,563,1.613,565,1.992,566,3.66,579,2.757,588,1.52,598,3.874,601,2.039,662,1.075,692,1.52,701,2.571,728,1.719,839,2.571,933,2.571,942,1.843,984,2.571,1048,2.576,1096,1.992,1113,3.208,1156,1.719,1164,2.571,1196,1.938,1450,1.992,1593,1.992,1594,2.178,1595,4.261,1596,4.743,1597,4.743,1598,2.274,1599,3.569,1600,4.743,1601,3.258,1602,3.961,1603,3.665,1604,4.332,1605,3.258,1606,4.332,1607,3.903,1608,4.332,1609,1.992,1610,3.569,1611,2.178,1612,2.178,1613,2.178,1614,2.178,1615,2.178,1616,2.178,1617,3.258,1618,2.178,1619,2.178,1620,2.178,1621,2.178,1622,3.258,1623,3.258,1624,3.258,1625,2.178,1626,2.178,1627,2.178,1628,2.178,1629,3.258,1630,3.258,1631,3.258,1632,2.178,1633,2.979,1634,1.719,1635,2.178,1636,2.178,1637,2.178,1638,2.178,1639,2.178,1640,2.178,1641,4.332,1642,2.178,1643,4.332,1644,3.258,1645,1.992,1646,1.992,1647,2.178,1648,2.178,1649,2.178,1650,2.178,1651,3.903,1652,2.178,1653,2.178,1654,2.178,1655,2.178,1656,3.258,1657,2.178,1658,1.992,1659,1.992,1660,1.52,1661,1.992,1662,2.178,1663,1.992,1664,2.178,1665,4.332,1666,2.178,1667,5.186,1668,5.303,1669,2.178,1670,2.178,1671,3.258,1672,3.258,1673,3.258,1674,4.332,1675,4.332,1676,4.332,1677,4.332,1678,3.903,1679,2.178,1680,4.198,1681,4.198,1682,4.198,1683,4.198,1684,3.631,1685,4.198,1686,4.198,1687,2.807,1688,2.807,1689,2.807,1690,2.807,1691,2.807,1692,2.807,1693,2.807,1694,2.807,1695,2.807,1696,2.807,1697,2.807,1698,2.807,1699,2.807,1700,2.807]],["title/classes/LogEntry.html",[22,0.063,1701,2.727]],["body/classes/LogEntry.html",[3,0.183,4,0.129,5,0.082,6,0.133,10,0.413,11,0.859,12,0.755,15,1.58,16,0.834,17,0.017,18,0.468,21,0.209,22,0.081,23,0.724,25,1.684,32,1.703,34,2.04,36,0.892,38,1.565,42,1.03,43,0.968,46,1.015,50,3.029,85,2.654,99,1.197,126,1.359,127,0.007,128,0.01,129,0.007,149,1.561,170,1.421,171,1.228,172,1.043,192,1.2,197,2.41,202,1.151,207,0.37,245,0.755,302,1.303,314,1.776,322,1.009,336,1.359,345,1.648,359,1.724,360,1.724,366,2.418,372,4.165,386,1.724,419,2.04,445,1.724,516,2.04,534,1.639,592,3.532,595,1.639,827,3.113,837,2.754,868,1.359,910,2.33,1196,1.639,1228,5.757,1249,3.532,1500,2.519,1701,4.655,1702,2.519,1703,4.971,1704,4.971,1705,5.388,1706,5.388,1707,4.977,1708,5.091,1709,3.549,1710,3.549,1711,5.419,1712,5.674,1713,3.549,1714,3.549,1715,3.549,1716,3.549,1717,4.305,1718,3.549,1719,4.305,1720,1.421,1721,3.07,1722,3.07,1723,1.922,1724,2.519,1725,2.754,1726,2.519,1727,6.526,1728,4.305,1729,3.07,1730,3.07,1731,3.07,1732,3.07,1733,3.07,1734,3.07,1735,3.07,1736,3.07,1737,3.07,1738,2.754,1739,3.07,1740,3.07,1741,3.07,1742,3.07,1743,2.04,1744,3.07,1745,3.07,1746,3.07,1747,3.07,1748,2.33,1749,2.754,1750,2.754,1751,3.07,1752,3.07,1753,6.57,1754,6.04,1755,3.07,1756,5.388,1757,3.07,1758,5.388,1759,4.971,1760,4.971,1761,3.07,1762,5.388,1763,3.07,1764,3.07,1765,3.07,1766,4.305,1767,3.07,1768,3.07,1769,3.07,1770,3.07,1771,4.305,1772,3.07,1773,3.07,1774,4.305,1775,3.07,1776,3.07,1777,5.882,1778,3.07,1779,3.07,1780,3.07,1781,3.07,1782,3.07,1783,3.07,1784,3.07,1785,3.07,1786,3.07,1787,3.07,1788,3.07,1789,3.07,1790,3.07,1791,3.07,1792,4.305,1793,3.07]],["title/modules/LoggerModule.html",[281,1.139,868,1.471]],["body/modules/LoggerModule.html",[3,0.172,4,0.196,5,0.124,6,0.122,17,0.016,18,0.611,21,0.196,22,0.088,36,1.94,42,0.964,85,3.018,127,0.011,128,0.013,129,0.011,172,0.804,192,1.297,202,1.245,207,0.56,219,3.533,283,1.808,284,2.395,288,2.618,289,2.06,290,1.808,292,2.155,294,2.268,295,2.618,296,2.06,301,1.595,366,3.175,548,3.092,868,2.956,870,3.096,1569,3.42,1591,2.756,1720,2.155,1794,5.38,1795,5.38,1796,5.38,1797,5.464,1798,5.38,1799,6.536,1800,4.654,1801,5.38,1802,3.296,1803,5.38,1804,3.296,1805,5.38,1806,3.296,1807,3.818]],["title/injectables/LoggerService.html",[36,0.966,302,1.006]],["body/injectables/LoggerService.html",[3,0.196,4,0.11,5,0.069,6,0.14,10,0.351,11,0.784,12,1.527,15,1.617,16,0.914,17,0.017,18,0.427,21,0.191,22,0.072,23,0.616,25,1.707,30,0.495,32,1.826,34,1.735,36,1.113,38,1.453,42,0.941,43,0.824,46,0.904,50,3.152,85,1.394,99,1.104,126,1.156,127,0.006,128,0.009,129,0.006,149,1.327,171,1.083,172,1.113,192,1.068,197,2.425,202,1.638,203,1.824,207,0.314,232,3.833,245,1.527,302,1.16,304,1.546,314,2.152,322,2.041,328,3.439,336,2.01,345,1.453,359,1.466,360,1.466,366,2.55,372,3.944,386,2.55,419,2.546,445,2.152,516,2.546,534,1.394,592,3.144,595,1.394,827,2.843,837,2.343,868,1.156,910,2.909,1196,1.394,1228,5.822,1249,3.144,1500,2.142,1701,4.104,1702,2.142,1703,2.611,1704,2.611,1705,5.003,1706,2.611,1708,4.074,1711,5.691,1712,5.328,1717,2.611,1719,5.003,1720,1.209,1721,2.611,1722,2.611,1723,2.843,1724,2.142,1725,4.074,1726,2.142,1727,6.344,1728,3.833,1729,2.611,1730,2.611,1731,2.611,1732,2.611,1733,2.611,1734,2.611,1735,2.611,1736,2.611,1737,2.611,1738,2.343,1739,2.611,1740,2.611,1741,2.611,1742,2.611,1743,3.324,1744,3.833,1745,3.833,1746,2.611,1747,2.611,1748,1.982,1749,4.074,1750,2.343,1751,4.541,1752,3.833,1753,6.776,1754,5.756,1755,3.833,1756,5.003,1757,3.833,1758,5.003,1759,4.541,1760,4.541,1761,3.833,1762,5.003,1763,2.611,1764,2.611,1765,2.611,1766,3.833,1767,3.833,1768,3.833,1769,2.611,1770,3.833,1771,3.833,1772,3.833,1773,2.611,1774,3.833,1775,2.611,1776,2.611,1777,5.57,1778,2.611,1779,2.611,1780,2.611,1781,3.833,1782,2.611,1783,6.025,1784,2.611,1785,2.611,1786,2.611,1787,2.611,1788,2.611,1789,2.611,1790,2.611,1791,3.833,1792,3.833,1793,2.611,1808,4.431,1809,4.431,1810,4.431,1811,3.019,1812,3.019,1813,3.019,1814,3.019,1815,3.019,1816,3.019,1817,3.019,1818,3.019,1819,3.019,1820,3.019,1821,3.019,1822,3.019,1823,3.019,1824,3.019,1825,3.019,1826,3.019]],["title/interfaces/LuplinkConfig.html",[0,0.927,1827,2.727]],["body/interfaces/LuplinkConfig.html",[0,1.198,2,2.414,3,0.158,4,0.181,5,0.114,6,0.093,10,0.578,11,0.93,12,1.324,16,0.833,17,0.016,18,0.63,21,0.181,22,0.081,25,1.639,42,0.89,46,1.27,85,2.294,127,0.01,128,0.013,129,0.01,150,2.856,184,1.67,207,0.518,282,2.737,292,1.99,293,1.67,294,2.189,295,2.492,296,1.903,301,1.473,303,2.61,306,1.67,323,3.46,348,3.857,355,2.874,356,2.414,423,3.263,513,1.057,627,5.205,738,3.263,870,2.737,923,3.812,934,3.857,1241,3.044,1282,3.023,1294,3.044,1295,3.044,1367,3.527,1569,3.023,1572,3.857,1591,3.188,1720,1.99,1797,3.857,1827,4.823,1828,3.527,1829,6.161,1830,3.188,1831,5.384,1832,4.83,1833,4.83,1834,3.857,1835,3.044,1836,3.527,1837,3.527,1838,3.527,1839,3.857,1840,3.857,1841,4.298,1842,4.298,1843,4.298,1844,4.298,1845,4.417,1846,3.857,1847,4.087,1848,4.298,1849,4.298,1850,5.384,1851,4.298,1852,4.298,1853,4.298,1854,2.294,1855,4.298]],["title/modules/LuplinkModule.html",[281,1.139,1847,2.523]],["body/modules/LuplinkModule.html",[0,1.153,3,0.152,4,0.174,5,0.11,6,0.113,12,1.018,16,0.586,17,0.016,18,0.626,21,0.174,22,0.078,25,1.153,42,0.857,46,1.239,85,2.805,127,0.01,128,0.012,129,0.01,150,2.749,172,0.715,184,1.608,192,1.153,202,1.107,207,0.498,245,1.018,282,3.259,283,1.608,284,2.226,288,2.433,289,1.831,290,1.608,292,1.916,293,1.608,294,2.151,295,2.433,296,1.831,301,1.801,303,3.108,306,1.608,322,1.36,323,2.324,348,3.712,355,2.805,356,2.324,423,3.141,513,1.018,627,4.312,738,3.141,870,2.936,923,3.722,934,3.712,1241,2.93,1282,3.6,1294,2.93,1295,2.93,1367,3.395,1569,3.244,1572,3.712,1591,3.112,1720,1.916,1797,4.715,1827,4.985,1828,3.395,1829,4.138,1830,3.112,1831,5.256,1832,4.715,1833,4.715,1834,3.712,1835,2.93,1836,3.395,1837,3.395,1838,3.395,1839,3.712,1840,3.712,1841,4.138,1842,4.138,1843,4.138,1844,4.138,1845,4.312,1846,3.712,1847,5.122,1848,5.256,1849,4.138,1850,5.256,1851,4.138,1852,4.138,1853,4.138,1854,2.209,1855,4.138,1856,4.138,1857,4.783,1858,4.138,1859,4.783,1860,4.138]],["title/classes/MockComputeService.html",[22,0.063,1861,2.208]],["body/classes/MockComputeService.html",[3,0.194,4,0.175,5,0.11,6,0.09,8,2.332,17,0.016,18,0.591,21,0.264,22,0.119,23,1.57,30,0.787,32,1.423,36,1.207,38,1.531,42,1.091,46,1.364,127,0.012,128,0.012,129,0.01,170,1.923,197,2.014,203,1.257,207,0.5,281,1.423,293,1.614,294,1.962,301,1.423,302,1.595,303,2.014,320,1.257,329,2.959,332,3.844,336,1.838,345,1.768,350,2.111,366,2.959,386,2.332,409,3.81,445,2.332,513,1.022,544,2.459,595,2.812,662,2.332,673,2.959,827,2.601,870,2.111,883,3.5,885,2.941,889,2.601,1368,2.759,1591,2.459,1592,2.941,1720,1.923,1723,2.601,1743,2.759,1802,3.73,1804,2.941,1806,2.941,1854,2.217,1861,3.5,1862,2.759,1863,4.619,1864,3.153,1865,3.153,1866,3.153,1867,3.153,1868,3.153,1869,4.392,1870,3.153,1871,3.153,1872,3.153,1873,2.759,1874,3.153,1875,2.941,1876,3.153,1877,3.999,1878,3.999,1879,3.999,1880,3.153,1881,2.759,1882,3.5,1883,3.999,1884,3.153,1885,3.153,1886,3.153,1887,2.759,1888,2.941,1889,3.153,1890,2.759,1891,2.759,1892,2.601,1893,2.941,1894,2.941,1895,2.759]],["title/classes/MockFormService.html",[22,0.063,1873,2.208]],["body/classes/MockFormService.html",[3,0.185,4,0.162,5,0.102,6,0.136,8,2.162,10,0.518,11,0.866,16,0.546,17,0.016,18,0.577,21,0.258,22,0.116,23,1.616,30,0.729,32,1.319,36,1.118,38,1.458,42,1.039,46,1.316,99,0.994,127,0.014,128,0.012,129,0.009,170,1.782,171,1.086,172,1.059,192,1.399,197,1.866,202,1.493,203,1.519,207,0.464,281,1.319,293,1.496,294,1.869,301,1.319,302,1.519,303,1.866,320,1.165,329,3.135,332,4.075,336,1.704,345,1.827,350,1.957,366,2.818,386,2.162,409,3.703,445,2.162,513,0.947,544,2.28,595,2.678,662,2.47,673,3.135,827,2.41,870,1.957,883,4.315,885,4.188,889,3.495,1368,2.558,1591,2.28,1592,2.726,1720,1.782,1723,2.41,1743,2.558,1802,3.553,1804,2.726,1806,2.726,1854,2.055,1861,2.558,1862,2.558,1863,4.49,1864,2.922,1865,2.922,1866,2.922,1867,2.922,1868,2.922,1869,4.237,1870,2.922,1871,2.922,1872,2.922,1873,3.333,1874,2.922,1875,2.726,1876,2.922,1877,3.809,1878,3.809,1879,3.809,1880,2.922,1881,2.558,1882,3.333,1883,3.809,1884,2.922,1885,2.922,1886,2.922,1887,2.558,1888,2.726,1889,2.922,1890,2.558,1891,2.558,1892,2.41,1893,2.726,1894,2.726,1895,2.558,1896,4.451,1897,4.451,1898,4.451,1899,4.451,1900,4.451]],["title/injectables/MockToastPackage.html",[302,1.006,1882,2.208]],["body/injectables/MockToastPackage.html",[3,0.193,4,0.173,5,0.109,6,0.113,8,2.942,17,0.016,18,0.589,21,0.264,22,0.118,23,1.568,30,1.092,32,1.411,36,1.196,38,1.522,42,1.085,46,1.359,127,0.012,128,0.012,129,0.01,172,0.711,197,1.996,203,1.246,207,0.496,281,1.411,293,1.6,294,1.951,301,1.411,302,1.586,303,1.996,304,2.438,320,1.246,329,2.942,332,3.828,336,1.822,345,1.762,350,2.093,366,2.942,386,2.312,409,3.798,445,2.312,513,1.013,544,2.438,595,2.797,662,2.319,673,2.942,827,2.578,870,2.093,883,3.481,885,2.915,889,2.578,1368,2.735,1591,2.438,1592,2.915,1720,1.906,1723,2.578,1743,2.735,1802,3.71,1804,2.915,1806,2.915,1854,2.198,1861,2.735,1862,2.735,1863,4.604,1864,3.125,1865,3.125,1866,3.125,1867,3.125,1868,3.125,1869,4.604,1870,3.125,1871,3.125,1872,3.125,1873,2.735,1874,3.125,1875,2.915,1876,3.125,1877,3.977,1878,3.977,1879,3.977,1880,3.125,1881,2.735,1882,3.828,1883,3.977,1884,3.125,1885,3.125,1886,3.125,1887,2.735,1888,2.915,1889,3.125,1890,2.735,1891,2.735,1892,2.578,1893,2.915,1894,2.915,1895,2.735,1901,4.76]],["title/classes/MockupLoggerService.html",[22,0.063,1881,2.208]],["body/classes/MockupLoggerService.html",[3,0.226,4,0.163,5,0.103,6,0.136,8,2.175,10,0.521,17,0.016,18,0.578,21,0.259,22,0.116,23,1.625,30,0.734,32,1.327,36,1.125,38,1.463,42,1.043,46,1.32,127,0.012,128,0.012,129,0.009,170,1.793,172,1.061,192,1.404,197,1.877,202,1.643,203,1.907,207,0.466,281,1.327,293,1.505,294,1.876,301,1.327,302,1.525,303,1.877,320,1.172,329,2.828,332,3.719,336,2.623,345,1.722,350,1.968,366,2.828,386,3.329,409,3.711,445,2.175,513,0.953,544,2.293,595,2.688,662,2.229,673,2.828,827,2.425,870,1.968,883,3.346,885,2.742,889,2.425,1368,2.573,1591,2.293,1592,2.742,1720,1.793,1723,3.711,1743,3.938,1802,3.566,1804,2.742,1806,2.742,1854,2.067,1861,2.573,1862,2.573,1863,4.5,1864,2.94,1865,2.94,1866,2.94,1867,2.94,1868,2.94,1869,4.249,1870,2.94,1871,2.94,1872,2.94,1873,2.573,1874,2.94,1875,2.742,1876,2.94,1877,3.823,1878,3.823,1879,3.823,1880,2.94,1881,3.346,1882,3.346,1883,3.823,1884,2.94,1885,2.94,1886,2.94,1887,2.573,1888,2.742,1889,2.94,1890,2.573,1891,2.573,1892,2.425,1893,2.742,1894,2.742,1895,2.573,1902,4.476,1903,4.476,1904,4.476,1905,4.476,1906,4.476]],["title/components/NavbarComponent.html",[176,0.574,255,1.291]],["body/components/NavbarComponent.html",[3,0.082,4,0.093,5,0.059,6,0.142,10,0.298,11,0.585,12,1.288,15,0.522,16,0.86,17,0.017,18,0.584,21,0.093,22,0.042,23,1.553,25,1.606,26,0.644,30,0.642,32,2.048,35,2.408,36,1.443,38,1.339,42,0.702,43,1.298,46,0.799,61,1.312,64,1.074,71,1.682,88,1.026,99,1.142,127,0.008,128,0.008,129,0.005,141,1.183,143,1.244,162,0.869,164,1.643,171,1.366,172,1.128,176,0.711,177,0.861,178,1.026,179,1.026,180,1.026,182,0.981,183,2.815,184,2.471,186,1.569,188,1.569,192,0.945,197,1.995,202,1.457,203,1.744,207,0.267,208,1.569,209,1.387,210,1.387,211,1.569,219,1.682,222,3.388,229,1.818,230,4.471,235,1.682,236,2.78,239,1.026,240,1.569,241,1.435,242,1.026,243,2.134,244,1.026,245,1.288,246,1.026,247,0.861,248,1.569,249,0.861,250,1.774,251,0.791,252,1.026,253,0.861,254,1.026,255,1.791,256,1.026,257,0.861,258,0.791,259,1.569,260,0.898,261,1.026,262,0.861,263,0.861,264,1.821,265,1.026,266,0.861,267,1.026,268,0.861,269,1.026,270,0.861,271,1.161,272,1.026,273,0.861,274,0.861,275,0.861,276,1.026,277,0.861,278,1.026,279,1.026,280,1.026,281,0.759,303,2.408,306,2.323,312,4.074,314,1.774,318,1.569,320,1.78,322,1.515,323,2.311,345,1.521,347,1.387,353,1.126,354,1.074,355,1.183,356,1.244,367,1.569,386,1.903,410,1.569,411,1.569,412,1.569,413,1.387,484,2.196,513,0.545,631,2.572,660,1.988,662,2.318,680,1.569,707,1.988,708,2.215,719,1.988,721,1.988,736,3.692,774,2.215,788,1.387,848,1.988,849,1.682,912,2.215,956,2.572,968,2.215,1099,2.215,1164,3.859,1180,1.818,1270,2.576,1278,3.263,1282,3.06,1294,1.569,1295,1.569,1332,4.699,1333,1.818,1374,5.62,1481,1.988,1500,1.818,1533,1.682,1537,1.818,1541,2.215,1542,1.988,1548,1.818,1749,4.135,1750,1.988,1835,3.263,1836,1.818,1837,1.818,1892,2.576,1907,2.215,1908,6.139,1909,4.757,1910,3.917,1911,4.757,1912,4.757,1913,4.757,1914,4.757,1915,4.757,1916,4.115,1917,4.757,1918,4.757,1919,5.328,1920,3.917,1921,4.757,1922,3.917,1923,2.561,1924,2.561,1925,3.917,1926,3.376,1927,2.561,1928,2.78,1929,2.561,1930,3.917,1931,2.561,1932,2.561,1933,2.561,1934,4.757,1935,2.561,1936,2.561,1937,2.561,1938,2.561,1939,2.561,1940,2.561,1941,2.561,1942,2.561,1943,4.757,1944,2.561,1945,3.917,1946,2.561,1947,4.757,1948,1.988,1949,3.917,1950,2.561,1951,2.561,1952,2.561,1953,2.561,1954,2.561,1955,2.215,1956,3.692,1957,3.692,1958,2.561,1959,2.561,1960,5.449,1961,2.561,1962,2.561,1963,2.561,1964,2.561,1965,3.917,1966,2.561,1967,3.917,1968,2.561,1969,2.561,1970,2.561,1971,2.561,1972,2.561,1973,2.561,1974,2.215,1975,2.561,1976,3.917,1977,2.561,1978,2.561,1979,2.561,1980,2.561,1981,2.561,1982,2.561,1983,2.561,1984,2.561,1985,1.988,1986,1.988,1987,2.215,1988,2.561,1989,2.561,1990,2.561,1991,2.561,1992,2.561,1993,2.215,1994,2.561,1995,2.561,1996,2.561,1997,3.388,1998,2.561,1999,4.757,2000,2.561,2001,2.561,2002,2.561,2003,2.561,2004,2.561,2005,3.917,2006,3.04,2007,2.561,2008,3.388,2009,4.611,2010,3.917,2011,5.328,2012,5.328,2013,4.115,2014,2.215,2015,2.561,2016,2.561,2017,2.215,2018,2.561,2019,3.917,2020,2.561,2021,2.561,2022,2.561,2023,2.561,2024,3.917,2025,2.561,2026,2.561,2027,3.692,2028,2.215,2029,2.561]],["title/modules/NavbarModule.html",[281,1.139,2030,2.727]],["body/modules/NavbarModule.html",[3,0.171,4,0.195,5,0.123,6,0.1,17,0.016,18,0.634,21,0.195,22,0.088,127,0.011,128,0.013,129,0.011,207,0.558,255,2.675,283,1.801,284,2.388,288,2.611,289,2.051,290,1.801,292,2.611,293,2.191,294,2.101,295,2.611,296,2.051,297,3.167,298,2.474,299,2.474,301,1.932,320,1.403,354,2.247,479,2.474,513,1.14,868,2.918,873,2.744,1568,3.079,1569,2.603,1570,3.531,1589,3.079,1830,3.6,2030,5.566,2031,4.635,2032,4.635,2033,4.635,2034,5.358,2035,5.358,2036,5.358]],["title/components/NavigationSidebarComponent.html",[176,0.574,257,1.291]],["body/components/NavigationSidebarComponent.html",[3,0.084,4,0.096,5,0.06,6,0.132,10,0.465,11,0.597,12,0.851,15,1.185,16,0.78,17,0.017,18,0.473,21,0.096,22,0.043,23,1.496,25,1.58,26,0.661,30,0.431,32,1.601,38,1.357,43,1.788,57,2.836,75,3.183,88,1.936,89,2.881,95,2.047,99,1.123,126,1.851,127,0.008,128,0.008,129,0.01,135,1.846,162,0.887,168,1.53,171,1.226,172,1.039,176,0.722,177,0.884,178,1.053,179,1.053,180,1.053,182,1.007,183,2.827,184,2.482,186,1.601,188,1.601,190,4.182,191,5.291,192,0.964,194,2.297,202,0.925,203,1.266,206,1.676,207,0.274,208,1.611,209,3.146,210,1.424,211,1.611,212,4.672,217,2.961,219,2.625,225,2.275,229,4.122,230,5.117,235,1.727,236,2.836,239,1.053,240,1.601,241,1.464,242,1.053,243,2.163,244,1.053,245,1.302,246,1.053,247,0.884,248,1.601,249,0.884,250,1.795,251,0.813,252,1.053,253,0.884,254,1.053,255,0.884,256,1.053,257,1.815,258,2.024,259,1.601,260,0.922,261,1.053,262,0.884,263,0.884,264,1.007,265,1.053,266,0.884,267,1.053,268,0.884,269,1.053,270,0.884,271,1.185,272,1.053,273,0.884,274,0.884,275,0.884,276,1.053,277,0.884,278,1.936,279,1.053,280,1.053,290,1.343,306,1.625,314,0.813,318,1.611,322,1.137,323,2.972,340,4.192,347,1.424,355,1.214,356,1.277,382,2.836,383,4.672,440,3.457,467,2.041,531,2.836,548,1.511,566,2.448,595,1.214,668,3.102,691,2.925,738,1.727,848,2.041,856,2.275,857,4.747,1048,2.047,1063,3.833,1086,3.833,1091,4.192,1241,3.308,1445,2.275,1520,3.457,1521,5.5,1522,2.275,1523,3.175,1524,3.457,1527,2.836,1529,4.672,1532,2.275,1533,3.814,1534,2.836,1537,5.163,1540,2.041,1543,3.102,1548,1.866,1550,2.275,1579,3.612,1720,1.601,1807,2.836,1854,2.682,1908,2.275,2009,2.836,2013,4.672,2014,2.275,2027,2.041,2037,5.473,2038,2.041,2039,4.182,2040,3.457,2041,4.835,2042,4.835,2043,4.835,2044,4.835,2045,5.401,2046,3.997,2047,4.835,2048,3.997,2049,2.63,2050,3.997,2051,2.63,2052,2.63,2053,2.63,2054,2.63,2055,2.63,2056,4.835,2057,2.63,2058,2.63,2059,3.457,2060,2.63,2061,2.63,2062,3.457,2063,2.63,2064,2.275,2065,2.275,2066,2.275,2067,2.63,2068,2.63,2069,2.63,2070,3.997,2071,3.997,2072,2.275,2073,2.63,2074,2.63,2075,2.63,2076,3.997,2077,2.63,2078,2.63,2079,3.997,2080,3.997,2081,3.997,2082,3.997,2083,3.997,2084,3.997,2085,2.63,2086,3.997,2087,3.997,2088,3.997,2089,3.997,2090,3.997,2091,3.997,2092,3.997,2093,3.997,2094,3.997,2095,3.997,2096,3.997,2097,3.997,2098,3.997,2099,3.997,2100,3.997,2101,3.997,2102,3.997,2103,3.997,2104,2.63,2105,3.997,2106,2.63,2107,4.835,2108,3.997,2109,2.63,2110,4.835,2111,3.457,2112,3.997,2113,3.997,2114,2.63,2115,3.997,2116,2.63,2117,2.63,2118,2.63,2119,2.63,2120,2.63,2121,2.63,2122,2.63,2123,2.63,2124,2.63,2125,1.866,2126,2.63,2127,3.457,2128,5.401,2129,3.997,2130,3.997,2131,3.997,2132,5.401,2133,3.997,2134,3.997,2135,3.997,2136,5.809,2137,2.63,2138,2.63,2139,2.63,2140,2.63,2141,2.63,2142,2.63,2143,2.63,2144,2.63,2145,3.997,2146,2.63,2147,2.63,2148,2.63,2149,2.041,2150,2.63,2151,2.63]],["title/modules/NavigationSidebarModule.html",[281,1.139,1563,1.867]],["body/modules/NavigationSidebarModule.html",[3,0.178,4,0.203,5,0.128,6,0.104,17,0.016,18,0.626,21,0.203,22,0.091,127,0.011,128,0.013,129,0.011,207,0.581,257,2.688,258,1.723,283,1.874,284,2.447,288,2.675,289,2.135,290,1.874,292,2.675,293,2.245,294,2.152,295,2.675,296,2.135,297,3.244,298,2.575,299,2.575,301,1.653,479,2.575,513,1.187,1563,3.778,1570,3.617,1579,2.856,1830,3.421,2037,4.327,2152,4.823,2153,4.823,2154,4.823,2155,5.576,2156,4.823]],["title/interfaces/Point.html",[0,0.927,1595,2.354]],["body/interfaces/Point.html",[0,1.173,2,1.668,3,0.109,4,0.125,5,0.079,6,0.064,9,0.937,10,0.399,11,0.726,15,1.442,16,0.596,17,0.017,21,0.206,22,0.056,23,1.504,25,0.828,27,1.948,28,2.826,42,1.24,43,1.768,46,1.518,49,1.51,75,1.668,89,1.51,92,2.178,127,0.007,128,0.01,129,0.007,135,2.835,146,1.668,162,1.438,168,2.161,171,1.057,172,0.513,176,0.513,202,0.795,245,1.201,306,1.634,314,1.897,345,0.863,387,2.438,527,2.138,540,2.104,547,2.634,561,2.104,563,1.974,565,2.438,566,3.969,579,2.255,588,1.86,598,3.828,601,2.362,662,1.315,692,1.86,701,2.979,728,2.104,839,2.979,933,2.979,942,2.255,984,2.979,1048,1.759,1096,2.438,1113,2.795,1156,2.104,1196,2.245,1450,2.438,1593,2.438,1594,2.666,1595,4.403,1596,5.231,1597,5.231,1598,1.86,1599,2.438,1600,4.775,1601,2.666,1602,4.357,1603,4.032,1604,4.765,1605,2.666,1606,2.666,1607,4.382,1608,2.666,1609,2.438,1610,4.007,1611,2.666,1612,2.666,1613,2.666,1614,2.666,1615,2.666,1616,2.666,1617,3.774,1618,2.666,1619,2.666,1620,2.666,1621,2.666,1622,2.666,1623,3.774,1624,2.666,1625,2.666,1626,2.666,1627,2.666,1628,2.666,1629,2.666,1630,3.774,1631,2.666,1632,2.666,1633,2.438,1634,2.104,1635,2.666,1636,2.666,1637,2.666,1638,2.666,1639,2.666,1640,2.666,1641,2.666,1642,2.666,1643,2.666,1644,2.666,1645,2.438,1646,2.438,1647,2.666,1648,2.666,1649,2.666,1650,2.666,1651,3.774,1652,2.666,1653,2.666,1654,2.666,1655,2.666,1656,2.666,1657,2.666,1658,2.438,1659,2.438,1660,1.86,1661,2.438,1662,2.666,1663,2.438,1664,2.666,1665,4.765,1666,2.666,1667,5.485,1668,5.579,1669,2.666,1670,2.666,1671,3.774,1672,3.774,1673,3.774,1674,4.765,1675,4.765,1676,4.765,1677,4.765,1678,4.382,1679,2.666]],["title/components/ResultSidebarComponent.html",[176,0.574,262,1.291]],["body/components/ResultSidebarComponent.html",[3,0.152,4,0.173,5,0.109,6,0.124,10,0.554,11,0.905,12,1.013,16,0.743,17,0.016,18,0.493,21,0.173,22,0.078,23,1.235,26,1.196,30,0.78,127,0.015,128,0.012,129,0.01,162,1.344,172,0.905,176,0.995,177,1.6,178,1.906,179,1.906,180,1.906,182,1.822,183,3.053,184,2.68,186,2.426,188,2.426,207,0.496,239,1.906,240,2.426,241,2.219,242,1.906,243,2.808,244,1.906,245,1.418,246,1.906,247,1.6,248,2.426,249,1.6,250,1.471,251,1.471,252,1.906,253,1.6,254,1.906,255,1.6,256,1.906,257,1.6,258,1.471,259,2.426,260,1.67,261,1.906,262,2.357,263,1.6,264,1.822,265,1.906,266,1.6,267,1.906,268,1.6,269,1.906,270,1.6,271,1.795,272,1.906,273,1.6,274,1.6,275,1.6,276,1.906,277,1.6,278,1.906,279,1.906,280,1.906,303,3.036,306,1.6,312,4.976,322,1.354,340,4.701,1836,3.378,1837,3.378,2038,3.694,2039,5.762,2040,5.239,2157,5.762,2158,4.76,2159,4.76,2160,4.76,2161,4.76,2162,6.057]],["title/modules/ResultSidebarModule.html",[281,1.139,1564,2.523]],["body/modules/ResultSidebarModule.html",[3,0.157,4,0.179,5,0.113,6,0.092,17,0.016,18,0.641,21,0.179,22,0.08,127,0.01,128,0.012,129,0.01,207,0.512,258,1.52,260,2.761,262,2.645,271,1.458,282,3.282,283,1.653,284,2.265,288,2.476,289,1.883,290,1.653,292,2.476,293,2.078,294,1.992,295,2.476,296,1.883,297,3.004,298,2.271,299,2.271,301,1.833,320,1.288,354,2.063,479,2.271,513,1.047,868,2.8,873,2.519,874,3.013,1563,3.626,1564,5.264,1568,2.827,1569,2.389,1570,3.349,1579,2.519,1580,3.013,1589,2.827,1830,3.167,2156,4.254,2163,4.254,2164,4.254,2165,4.254,2166,4.254,2167,3.823,2168,4.918,2169,4.918,2170,4.918,2171,2.389,2172,3.23,2173,3.23]],["title/injectables/SaveLoadService.html",[302,1.006,1282,1.867]],["body/injectables/SaveLoadService.html",[3,0.079,4,0.09,5,0.172,6,0.123,9,0.673,10,0.287,11,0.569,12,1.323,15,1.217,16,0.808,17,0.017,18,0.557,21,0.09,22,0.04,23,1.5,30,0.624,35,1.949,36,1.313,38,0.62,42,1.206,46,1.418,49,2.823,51,1.751,52,1.751,61,1.264,64,2.763,65,1.279,88,0.988,95,1.264,99,0.423,126,1.457,127,0.005,128,0.008,129,0.013,141,1.139,143,1.199,144,1.418,146,1.199,151,1.264,171,0.87,172,0.959,182,2.161,192,0.918,197,2.607,202,1.38,203,1.368,206,1.035,207,0.257,241,1.394,245,1.366,250,1.176,251,1.614,301,1.128,302,0.997,304,1.264,306,0.829,314,1.614,318,1.511,320,1.628,322,1.768,323,1.849,329,3.02,330,2.517,336,2,345,1.499,347,2.062,350,1.085,353,1.085,354,1.035,355,1.139,356,1.199,359,1.199,360,1.199,361,2.517,367,1.511,368,2.134,372,1.511,378,2.134,396,2.332,397,2.134,408,1.915,417,2.5,433,2.5,434,3.293,484,3.162,513,0.525,527,2.043,534,1.139,538,2.5,562,1.199,673,2.538,674,1.511,675,1.915,676,1.751,691,1.336,692,1.336,695,2.188,701,2.332,703,1.915,710,1.915,719,1.915,721,2.954,760,2.134,788,1.336,825,2.701,852,2.134,889,2.517,910,2.5,943,2.954,950,2.954,951,1.915,956,1.62,978,2.134,987,4.055,1004,2.134,1085,1.62,1131,2.134,1156,3.654,1180,2.701,1196,1.758,1214,1.915,1215,1.751,1241,1.511,1249,1.751,1260,1.915,1282,1.849,1288,4.412,1289,3.607,1312,3.298,1313,2.701,1316,4.775,1319,3.708,1333,3.298,1335,2.134,1439,1.915,1441,2.134,1442,2.134,1443,2.134,1513,2.134,1534,3.298,1609,1.751,1634,3.2,1659,1.751,1708,1.915,1854,1.758,1860,4.883,1888,1.511,1916,3.293,1926,4.412,1928,4.675,1956,2.954,1957,1.915,1974,3.293,1985,1.915,1986,2.954,1993,2.134,2006,2.954,2009,1.751,2028,2.134,2059,3.293,2065,2.134,2066,2.134,2125,1.751,2174,5.112,2175,1.915,2176,4.647,2177,3.807,2178,3.807,2179,3.807,2180,3.807,2181,4.647,2182,3.807,2183,2.467,2184,3.807,2185,5.224,2186,3.293,2187,3.807,2188,3.807,2189,3.807,2190,3.807,2191,3.807,2192,3.807,2193,2.701,2194,3.807,2195,3.807,2196,2.467,2197,3.807,2198,2.467,2199,3.807,2200,2.467,2201,3.807,2202,2.467,2203,2.467,2204,2.467,2205,3.807,2206,2.467,2207,2.467,2208,1.915,2209,3.293,2210,2.134,2211,2.134,2212,4.883,2213,3.293,2214,2.134,2215,2.134,2216,2.954,2217,2.134,2218,2.134,2219,3.293,2220,2.134,2221,3.293,2222,2.134,2223,2.134,2224,2.134,2225,2.134,2226,3.293,2227,2.134,2228,2.134,2229,3.807,2230,3.807,2231,2.467,2232,2.467,2233,3.807,2234,2.467,2235,2.467,2236,3.807,2237,2.467,2238,2.467,2239,3.807,2240,2.467,2241,2.467,2242,2.467,2243,2.467,2244,2.467,2245,2.467,2246,3.807,2247,2.467,2248,3.293,2249,2.134,2250,2.467,2251,2.134,2252,2.467,2253,2.467,2254,3.807,2255,2.467,2256,2.467,2257,2.467,2258,2.467,2259,2.134,2260,2.134,2261,2.134,2262,2.467,2263,2.467,2264,2.467,2265,2.467,2266,3.807,2267,2.467,2268,2.134,2269,2.467,2270,2.467,2271,2.467,2272,2.467,2273,2.467,2274,2.467,2275,3.807,2276,2.467,2277,2.467,2278,2.467,2279,3.807,2280,2.467,2281,2.467,2282,2.467,2283,2.134,2284,2.467,2285,2.467,2286,2.467,2287,2.467,2288,2.467,2289,2.467,2290,3.293,2291,2.467,2292,2.467,2293,2.467,2294,2.467,2295,2.467,2296,2.467,2297,2.467,2298,2.467,2299,2.467,2300,2.467,2301,2.467,2302,2.467,2303,2.467,2304,2.134,2305,2.467,2306,2.467,2307,2.467,2308,2.467,2309,2.467,2310,2.467,2311,2.134,2312,3.807,2313,2.467,2314,2.467,2315,2.467,2316,2.467,2317,3.293,2318,2.467,2319,1.915,2320,2.467,2321,2.467,2322,2.467,2323,2.467,2324,2.467,2325,2.467,2326,2.467,2327,2.467,2328,2.467,2329,2.467,2330,3.807,2331,2.467,2332,2.467,2333,2.467,2334,3.807,2335,1.915,2336,2.467,2337,2.467,2338,2.467,2339,2.467,2340,2.467,2341,2.467,2342,2.467,2343,2.467,2344,2.467,2345,2.467]],["title/components/SimpleDocumentationComponent.html",[176,0.574,263,1.291]],["body/components/SimpleDocumentationComponent.html",[1,2.019,3,0.074,4,0.084,5,0.053,6,0.137,9,1.376,10,0.269,11,0.54,12,0.948,15,1.373,16,0.885,17,0.016,18,0.446,21,0.084,22,0.038,23,1.317,25,0.872,26,0.58,28,2.365,30,0.592,32,1.071,35,1.868,36,1.267,38,0.58,42,0.648,46,0.909,49,1.589,64,0.968,65,2.111,71,2.374,84,2.077,87,1.792,89,1.589,92,0.776,99,1.04,126,0.884,127,0.007,128,0.007,129,0.005,139,2.216,147,2.077,162,0.802,164,1.516,168,1.384,171,1.136,172,1.106,176,0.987,177,0.776,178,0.925,179,0.925,180,0.925,182,0.884,183,2.764,184,2.426,186,1.448,188,1.448,192,0.872,194,2.077,202,1.266,203,1.52,206,1.516,207,0.24,210,2.73,235,1.516,239,0.925,240,1.448,241,1.324,242,0.925,243,2.019,244,0.925,245,1.165,246,0.925,247,0.776,248,1.448,249,0.776,250,0.713,251,0.713,252,0.925,253,0.776,254,0.925,255,0.776,256,0.925,257,0.776,258,0.713,259,1.448,260,0.81,261,0.925,262,0.776,263,1.694,264,2.472,265,0.925,266,0.776,267,0.925,268,0.776,269,0.925,270,0.776,271,1.071,272,0.925,273,0.776,274,0.776,275,0.776,276,0.925,277,0.776,278,0.925,279,0.925,280,0.925,290,1.215,306,1.215,314,1.117,320,1.691,322,1.267,323,1.756,353,1.015,354,0.968,382,2.565,396,3.088,401,2.214,410,1.414,411,1.414,412,1.414,413,3.756,450,1.792,513,0.491,527,2.216,528,2.374,534,1.669,562,1.121,563,2.897,588,1.958,590,1.997,632,1.792,662,0.884,691,2.413,693,4.687,694,4.854,695,2.077,696,3.555,727,1.792,744,2.374,753,3.912,757,3.127,758,4.504,767,3.811,788,1.958,809,1.997,823,1.997,849,1.516,883,2.077,955,2.565,956,2.374,1051,2.805,1055,3.127,1056,3.127,1061,6.071,1063,4.456,1064,4.36,1082,5.021,1086,3.162,1093,4.36,1094,5.432,1102,3.127,1108,2.805,1113,3.336,1125,3.127,1130,3.912,1156,2.214,1164,3.088,1187,4.36,1225,5.248,1246,3.854,1270,2.413,1278,3.088,1288,2.565,1425,1.997,1428,1.997,1523,1.516,1527,1.638,1533,1.516,1542,2.805,1544,3.127,1575,5.227,1660,1.958,1875,2.729,1895,2.897,1985,1.792,2125,2.565,2149,4.504,2317,3.854,2335,3.457,2346,5.716,2347,1.997,2348,3.854,2349,3.615,2350,3.615,2351,3.127,2352,4.455,2353,3.615,2354,5.041,2355,4.455,2356,4.455,2357,4.455,2358,4.455,2359,4.455,2360,5.041,2361,4.36,2362,3.615,2363,4.455,2364,5.041,2365,2.309,2366,2.309,2367,2.309,2368,3.615,2369,2.309,2370,2.309,2371,2.309,2372,3.615,2373,2.309,2374,2.309,2375,2.309,2376,2.309,2377,2.309,2378,2.309,2379,2.309,2380,5.021,2381,5.041,2382,5.041,2383,3.615,2384,4.36,2385,3.615,2386,3.615,2387,4.455,2388,3.615,2389,5.041,2390,3.127,2391,3.615,2392,3.615,2393,3.615,2394,2.309,2395,2.309,2396,2.309,2397,2.309,2398,2.309,2399,3.615,2400,3.615,2401,3.615,2402,3.615,2403,3.615,2404,2.309,2405,2.805,2406,2.309,2407,1.997,2408,3.615,2409,2.309,2410,2.309,2411,1.792,2412,2.309,2413,2.309,2414,2.309,2415,3.127,2416,2.309,2417,2.309,2418,1.997,2419,1.997,2420,2.309,2421,1.997,2422,2.309,2423,1.997,2424,2.309,2425,4.455,2426,2.309,2427,3.615,2428,2.309,2429,2.309,2430,3.615,2431,2.309,2432,2.309,2433,2.309,2434,3.615,2435,2.309,2436,1.997,2437,1.997,2438,2.309,2439,2.309,2440,2.309,2441,2.309,2442,2.309,2443,2.309,2444,2.309,2445,2.309,2446,2.309,2447,2.309,2448,2.309,2449,2.309,2450,3.615,2451,2.309,2452,2.309,2453,2.309,2454,2.309,2455,2.309,2456,2.309,2457,2.309,2458,2.309,2459,2.309,2460,2.309,2461,2.309,2462,2.309,2463,2.309,2464,3.615,2465,5.041,2466,5.041,2467,3.615,2468,3.615,2469,5.041,2470,3.615,2471,3.615,2472,3.615,2473,3.615,2474,3.615,2475,3.615,2476,3.127,2477,3.615,2478,3.615,2479,3.615,2480,5.041,2481,5.804,2482,5.041,2483,3.615,2484,3.615,2485,3.615,2486,3.615,2487,3.615,2488,3.127,2489,3.615,2490,3.615,2491,3.615,2492,5.041,2493,3.615,2494,3.127,2495,3.615,2496,3.615,2497,3.615,2498,3.615,2499,3.615,2500,3.615,2501,3.615,2502,3.615,2503,3.615,2504,2.309,2505,2.309]],["title/modules/SimpleDocumentationModule.html",[281,1.139,1565,2.523]],["body/modules/SimpleDocumentationModule.html",[3,0.165,4,0.188,5,0.119,6,0.096,17,0.016,18,0.645,21,0.188,22,0.084,127,0.01,128,0.013,129,0.01,207,0.538,258,1.595,263,2.662,264,1.977,271,1.53,282,2.27,283,1.735,284,2.335,288,2.553,289,1.977,290,1.735,292,2.553,293,2.142,294,2.054,295,2.553,296,1.977,297,3.096,298,2.384,299,2.384,301,1.889,320,1.352,354,2.165,479,2.384,513,1.099,868,2.84,873,2.645,874,3.162,1563,2.508,1565,5.118,1568,2.967,1569,2.508,1570,2.796,1575,3.664,1579,2.645,1580,3.162,1589,2.967,1830,3.265,2167,2.645,2171,2.508,2172,3.39,2173,3.39,2346,4.007,2411,4.007,2506,4.466,2507,5.163,2508,4.466,2509,4.466,2510,5.163,2511,6.374,2512,3.664,2513,5.163]],["title/components/StepbarComponent.html",[176,0.574,266,1.291]],["body/components/StepbarComponent.html",[0,0.88,3,0.116,4,0.133,5,0.084,6,0.142,10,0.425,11,0.758,12,1.242,15,1.556,16,0.863,17,0.016,18,0.559,21,0.133,22,0.06,23,1.4,25,1.224,26,0.917,30,0.956,32,1.082,38,0.917,42,1.13,46,0.745,99,1,127,0.013,128,0.01,129,0.007,141,1.685,149,1.605,162,1.126,168,1.943,171,1.343,172,1.132,176,0.872,177,1.227,178,1.462,179,1.462,180,1.462,182,1.398,183,2.964,184,2.602,186,2.033,188,2.033,192,1.224,194,2.917,202,1.459,203,1.651,206,2.447,207,0.38,208,2.236,209,1.977,210,1.977,211,2.236,213,3.158,214,3.158,239,1.462,240,2.033,241,1.859,242,1.462,243,2.526,244,1.462,245,1.41,246,1.462,247,1.227,248,2.033,249,1.227,250,1.128,251,1.128,252,1.462,253,1.227,254,1.462,255,1.227,256,1.462,257,1.227,258,1.128,259,2.033,260,1.28,261,1.462,262,1.227,263,1.227,264,1.398,265,1.462,266,2.12,267,1.462,268,1.227,269,1.462,270,1.227,271,1.504,272,1.462,273,1.227,274,1.227,275,1.227,276,1.462,277,1.227,278,1.462,279,1.462,280,1.462,314,2.12,322,1.659,370,4.712,410,2.236,411,2.236,412,2.236,413,1.977,518,3.333,631,3.333,667,2.397,680,3.109,691,3.416,692,1.977,984,3.863,1048,2.6,1448,5.57,1454,3.158,1510,4.528,1661,2.591,2127,3.158,2193,2.591,2514,3.158,2515,5.075,2516,5.835,2517,5.075,2518,5.835,2519,5.835,2520,6.861,2521,6.861,2522,5.075,2523,6.306,2524,5.075,2525,5.075,2526,5.075,2527,5.075,2528,3.65,2529,3.65,2530,3.65,2531,3.65,2532,3.65,2533,3.65,2534,3.65,2535,3.65,2536,3.65,2537,3.65,2538,3.65,2539,5.075,2540,3.65,2541,5.075,2542,3.65,2543,3.65,2544,3.65,2545,3.65,2546,3.65,2547,3.65,2548,3.65,2549,3.65,2550,3.65,2551,3.65,2552,5.835,2553,4.39,2554,3.65,2555,3.65,2556,3.65]],["title/modules/StepbarModule.html",[281,1.139,1566,2.523]],["body/modules/StepbarModule.html",[3,0.167,4,0.191,5,0.121,6,0.098,17,0.016,18,0.643,21,0.191,22,0.086,127,0.011,128,0.013,129,0.011,207,0.546,258,1.619,266,2.667,271,1.553,282,2.304,283,1.761,284,2.356,288,2.576,289,2.006,290,1.761,292,2.576,293,2.162,294,2.072,295,2.576,296,2.006,297,3.125,298,2.42,299,2.42,301,1.906,320,1.372,354,2.198,479,2.42,513,1.115,868,2.852,873,2.684,874,3.21,1563,2.546,1566,5.131,1568,3.012,1569,2.546,1570,2.838,1579,2.684,1580,3.21,1589,3.012,1830,2.684,2167,2.684,2171,2.546,2172,3.441,2173,3.441,2557,4.533,2558,4.533,2559,5.241,2560,4.533,2561,5.241,2562,5.241]],["title/components/SynthesisComponent.html",[176,0.574,268,1.291]],["body/components/SynthesisComponent.html",[3,0.164,4,0.187,5,0.118,6,0.119,17,0.016,18,0.419,21,0.187,22,0.084,26,1.292,30,1.131,127,0.013,128,0.013,129,0.01,162,1.411,172,0.768,176,1.031,177,1.728,178,2.059,179,2.059,180,2.059,182,1.969,183,3.075,184,2.7,186,2.546,188,2.546,207,0.536,239,2.059,240,2.546,241,2.329,242,2.059,243,2.887,244,2.059,245,1.353,246,2.059,247,1.728,248,2.546,249,1.728,250,1.589,251,1.589,252,2.059,253,1.728,254,2.059,255,1.728,256,2.059,257,1.728,258,1.589,259,2.546,260,1.804,261,2.059,262,1.728,263,1.728,264,1.969,265,2.059,266,1.728,267,2.059,268,2.423,269,2.059,270,1.728,271,1.884,272,2.059,273,1.728,274,1.728,275,1.728,276,2.059,277,1.728,278,2.059,279,2.059,280,2.059,1270,2.785,2563,4.448,2564,6.358,2565,6.901,2566,6.358,2567,5.142]],["title/modules/SynthesisModule.html",[281,1.139,2568,2.727]],["body/modules/SynthesisModule.html",[3,0.163,4,0.187,5,0.118,6,0.096,17,0.016,18,0.641,21,0.187,22,0.084,127,0.01,128,0.013,129,0.01,207,0.534,258,1.585,268,2.66,271,1.52,282,3.316,283,1.724,284,2.325,288,2.542,289,1.964,290,1.724,292,2.542,293,2.133,294,2.045,295,2.542,296,1.964,297,3.083,298,2.368,299,2.368,301,1.881,320,1.343,354,2.151,479,2.368,513,1.091,868,2.834,873,2.627,874,3.141,1563,2.491,1568,2.947,1569,2.491,1570,2.778,1579,2.627,1580,3.141,1589,2.947,1830,2.627,2167,3.863,2171,2.491,2172,3.368,2173,3.368,2568,5.638,2569,4.436,2570,4.436,2571,5.129,2572,4.436,2573,5.129,2574,5.129]],["title/components/SyntheticDrawingComponent.html",[176,0.574,270,1.291]],["body/components/SyntheticDrawingComponent.html",[3,0.065,4,0.074,5,0.047,6,0.14,9,0.556,10,0.237,11,0.489,12,1.17,15,0.668,16,0.908,17,0.017,18,0.447,21,0.074,22,0.033,25,0.789,26,0.512,28,2.603,30,0.334,34,1.17,35,1.72,36,1.181,38,0.822,42,0.586,43,1.774,46,1.178,64,0.854,65,1.1,75,0.989,81,1.17,89,2.641,95,1.676,99,1.135,126,1.253,127,0.008,128,0.007,129,0.007,149,0.895,162,1.443,164,1.372,168,2.3,171,1.292,172,1.12,176,0.702,177,0.684,178,0.816,179,0.816,180,0.816,182,0.78,183,2.697,184,2.368,186,1.311,188,1.311,192,0.789,194,1.881,202,1.39,203,1.702,206,2.423,207,0.212,217,3.152,219,3.38,239,0.816,240,1.311,241,1.199,242,0.816,243,1.882,244,0.816,245,1.278,246,0.816,247,0.684,248,1.311,249,0.684,250,0.629,251,0.629,252,0.816,253,0.684,254,0.816,255,0.684,256,0.816,257,0.684,258,0.629,259,1.311,260,0.714,261,0.816,262,0.684,263,0.684,264,0.78,265,0.816,266,0.684,267,0.816,268,0.684,269,0.816,270,1.579,271,1.885,272,0.816,273,0.684,274,2.577,275,0.684,276,0.816,277,0.684,278,0.816,279,0.816,280,0.816,290,0.684,314,2.417,322,1.563,330,1.103,345,0.512,353,0.895,372,1.247,402,1.581,413,3.129,424,1.762,433,1.337,527,0.895,529,2.322,556,1.247,557,4.609,561,3.367,562,0.989,563,2.7,564,1.762,567,1.581,569,1.762,572,1.762,576,1.762,579,3.609,581,1.762,585,1.762,588,2.545,599,1.445,631,2.149,678,1.337,680,2.004,711,1.581,789,3.549,790,1.581,818,1.445,839,1.247,847,1.762,849,2.694,854,1.762,857,2.54,933,2.513,955,1.445,993,3.646,1048,2.636,1051,1.581,1113,1.881,1196,1.894,1234,1.762,1307,1.762,1318,1.762,1333,2.322,1366,2.54,1444,1.762,1515,1.762,1523,2.694,1527,1.445,1533,3.085,1540,1.581,1543,2.54,1545,1.762,1548,2.911,1595,2.878,1596,3.901,1597,3.901,1598,3.253,1599,2.911,1600,3.334,1603,2.149,1610,3.334,1658,1.445,1660,2.788,1748,1.337,1807,2.911,1948,1.581,1955,2.831,1986,1.581,2008,4.064,2027,1.581,2062,1.762,2149,3.646,2171,3.655,2335,2.54,2348,3.549,2361,4.064,2384,1.762,2405,3.994,2415,1.762,2418,2.831,2419,2.831,2421,1.762,2423,2.831,2488,5.196,2575,5.839,2576,1.762,2577,4.102,2578,3.272,2579,4.102,2580,4.102,2581,4.102,2582,4.102,2583,4.102,2584,4.102,2585,4.698,2586,3.272,2587,3.272,2588,2.831,2589,4.102,2590,5.496,2591,3.549,2592,2.037,2593,2.7,2594,3.272,2595,2.831,2596,3.272,2597,2.037,2598,2.037,2599,3.272,2600,2.037,2601,2.037,2602,2.037,2603,3.272,2604,2.037,2605,4.102,2606,3.272,2607,2.037,2608,3.272,2609,2.037,2610,2.831,2611,2.037,2612,2.037,2613,3.272,2614,2.037,2615,2.037,2616,2.037,2617,2.037,2618,2.037,2619,2.037,2620,2.037,2621,2.037,2622,2.037,2623,2.037,2624,2.037,2625,2.037,2626,2.037,2627,2.037,2628,2.037,2629,2.037,2630,1.581,2631,1.762,2632,2.037,2633,2.037,2634,2.037,2635,2.037,2636,3.272,2637,2.037,2638,2.037,2639,4.102,2640,3.272,2641,2.037,2642,3.272,2643,2.037,2644,2.037,2645,2.037,2646,1.762,2647,1.762,2648,2.037,2649,2.037,2650,2.037,2651,1.762,2652,1.581,2653,2.037,2654,2.037,2655,2.037,2656,2.037,2657,3.272,2658,2.037,2659,2.037,2660,2.037,2661,2.037,2662,4.102,2663,2.037,2664,3.272,2665,2.037,2666,5.496,2667,3.272,2668,5.147,2669,4.698,2670,5.496,2671,2.037,2672,5.147,2673,4.698,2674,2.037,2675,3.272,2676,2.037,2677,2.037,2678,3.272,2679,3.272,2680,4.698,2681,2.037,2682,2.037,2683,2.037,2684,2.037,2685,2.037,2686,2.037,2687,2.037,2688,2.037,2689,2.037,2690,2.037,2691,2.037,2692,3.272,2693,4.102,2694,4.102,2695,2.037,2696,2.037,2697,2.037,2698,2.037,2699,2.037,2700,2.037,2701,2.037,2702,2.037,2703,2.037,2704,2.037,2705,2.037,2706,2.037,2707,2.037,2708,2.037,2709,2.037,2710,2.037,2711,3.272,2712,2.037,2713,2.037,2714,2.037,2715,2.037,2716,2.037,2717,2.037,2718,2.037,2719,2.037,2720,4.102,2721,2.037,2722,2.037,2723,6.007,2724,2.037,2725,3.272,2726,2.037,2727,2.037,2728,2.037,2729,2.037,2730,2.037,2731,2.037,2732,2.037,2733,2.037,2734,2.037,2735,2.037,2736,3.272,2737,2.037,2738,3.272,2739,3.272,2740,3.272,2741,3.272,2742,3.272,2743,3.272,2744,3.272,2745,3.272,2746,2.037,2747,3.272,2748,2.037,2749,2.037,2750,4.698,2751,2.037,2752,2.037,2753,3.272,2754,2.037,2755,2.037,2756,2.037,2757,2.037,2758,2.037]],["title/components/SyntheticDrawingFormComponent.html",[176,0.574,273,1.291]],["body/components/SyntheticDrawingFormComponent.html",[1,2.42,3,0.106,4,0.121,5,0.076,6,0.137,9,1.815,10,0.386,11,0.709,12,0.706,15,1.129,16,0.815,17,0.016,18,0.521,21,0.121,22,0.054,26,0.833,27,2.42,30,0.543,34,1.906,46,1.397,64,1.391,66,2.031,92,1.115,99,0.949,127,0.01,128,0.01,129,0.007,139,2.657,151,1.699,162,1.229,164,1.989,171,0.888,172,1.08,176,0.903,177,1.115,178,1.328,179,1.328,180,1.328,182,1.27,183,2.927,184,2.57,186,1.899,188,1.899,192,1.144,194,2.726,202,1.398,203,1.674,206,1.989,207,0.345,209,2.569,239,1.328,240,1.899,241,1.737,242,1.328,243,2.42,244,1.328,245,1.178,246,1.328,247,1.115,248,1.899,249,1.115,250,1.025,251,1.025,252,1.328,253,1.115,254,1.328,255,1.115,256,1.328,257,1.115,258,1.025,259,1.899,260,1.163,261,1.328,262,1.115,263,1.115,264,1.27,265,1.328,266,1.115,267,1.328,268,1.115,269,1.328,270,1.115,271,2.144,272,1.328,273,2.031,274,2.668,275,1.115,276,1.328,277,1.115,278,1.328,279,1.328,280,1.328,314,1.025,322,0.943,345,0.833,365,2.573,400,2.868,412,2.905,513,0.706,527,1.458,541,2.905,556,2.031,557,4.484,563,3.674,575,4.103,588,3.463,598,2.569,599,2.353,601,2.69,606,4.79,607,4.103,662,2.12,673,3.231,678,2.177,818,2.353,994,2.868,1000,2.868,1005,2.868,1113,3.182,1270,2.999,1278,3.701,1366,4.297,1523,3.114,1537,3.366,1554,2.868,1598,2.569,1633,3.366,1645,3.366,1646,2.353,1660,2.569,1684,4.103,1807,2.353,2017,2.868,2111,4.103,2171,3.556,2193,2.353,2494,5.227,2512,3.93,2591,4.79,2593,3.182,2595,4.103,2630,2.573,2646,4.103,2652,2.573,2759,5.681,2760,2.868,2761,5.537,2762,5.537,2763,5.537,2764,5.537,2765,5.537,2766,6.043,2767,6.394,2768,6.043,2769,3.316,2770,4.743,2771,3.316,2772,3.316,2773,3.316,2774,3.316,2775,3.316,2776,3.316,2777,3.316,2778,3.316,2779,4.743,2780,3.316,2781,4.743,2782,2.868,2783,3.316,2784,3.316,2785,3.316,2786,4.743,2787,3.316,2788,3.316,2789,2.868,2790,3.316,2791,3.316,2792,3.316,2793,3.316,2794,3.316,2795,3.316,2796,3.316,2797,3.316,2798,3.316,2799,3.316,2800,3.316,2801,3.316,2802,6.043,2803,4.743,2804,3.316,2805,4.743,2806,3.316,2807,3.316,2808,3.316,2809,3.316,2810,3.316,2811,3.316,2812,4.743,2813,3.316,2814,3.316,2815,3.316,2816,3.316,2817,3.316,2818,3.316,2819,3.316,2820,3.316,2821,3.316]],["title/injectables/SyntheticDrawingFormService.html",[302,1.006,2593,2.208]],["body/injectables/SyntheticDrawingFormService.html",[3,0.124,4,0.142,5,0.09,6,0.138,9,1.45,10,0.454,11,0.794,12,1.286,15,1.562,16,0.925,17,0.017,18,0.528,21,0.142,22,0.099,23,1.428,28,1.947,30,0.99,42,0.952,49,1.716,65,2.031,88,2.598,92,2.354,99,1.163,127,0.008,128,0.011,129,0.008,143,2.582,149,1.716,162,1.44,168,2.314,171,1.271,172,1.089,176,0.583,192,1.281,202,1.398,203,1.022,206,2.229,207,0.407,245,1.286,274,2.485,302,1.392,304,1.999,322,1.845,345,1.76,350,1.716,359,1.896,360,1.896,401,3.255,402,3.029,410,2.391,411,2.391,412,2.391,413,2.114,417,3.49,450,3.029,548,3.054,556,2.391,557,4.529,561,3.974,562,2.935,598,2.878,599,2.77,601,2.582,660,3.029,737,3.029,788,2.114,836,3.376,1008,3.376,1048,2.722,1180,2.77,1356,6.468,1440,4.124,1598,3.881,1602,2.77,1603,2.563,1660,3.793,2171,3.592,2311,3.376,2407,3.376,2436,3.376,2437,3.376,2588,4.597,2593,3.054,2610,4.597,2630,3.029,2651,3.376,2652,5.561,2789,4.597,2822,3.376,2823,6.487,2824,5.314,2825,5.314,2826,3.903,2827,5.314,2828,3.903,2829,5.314,2830,6.487,2831,3.903,2832,3.903,2833,3.903,2834,4.597,2835,3.903,2836,3.903,2837,3.903,2838,3.903,2839,3.903,2840,3.903,2841,3.903,2842,3.903,2843,3.903,2844,3.903,2845,3.903,2846,3.903,2847,3.903,2848,3.903,2849,3.903,2850,3.903,2851,3.903,2852,3.903,2853,5.314,2854,3.903,2855,3.903,2856,3.903,2857,3.903,2858,3.903,2859,3.903]],["title/modules/SyntheticDrawingModule.html",[281,1.139,2167,1.968]],["body/modules/SyntheticDrawingModule.html",[3,0.164,4,0.188,5,0.119,6,0.096,17,0.016,18,0.623,21,0.188,22,0.084,127,0.01,128,0.013,129,0.01,207,0.537,270,2.662,271,2.048,273,2.662,274,2.425,283,1.733,284,2.333,288,2.55,289,1.974,290,1.733,292,2.55,293,2.14,294,2.052,295,2.55,296,1.974,301,1.887,513,1.097,557,3.158,678,3.386,868,2.891,870,2.8,871,4.519,873,2.641,2167,4.085,2171,2.505,2575,4.002,2593,4.34,2759,4.002,2860,4.46,2861,4.46,2862,4.46,2863,4.46,2864,5.156,2865,5.156,2866,5.156,2867,5.156]],["title/interfaces/Template.html",[0,0.927,26,0.966]],["body/interfaces/Template.html",[0,1.733,1,2.04,2,2.475,3,0.162,4,0.186,5,0.117,6,0.095,9,2.055,10,0.593,11,0.944,12,1.084,15,1.619,16,0.775,17,0.016,19,3.525,21,0.269,22,0.083,25,1.229,26,1.588,27,2.04,28,1.866,30,0.835,50,2.919,65,2.125,67,2.24,88,2.04,90,2.759,91,3.071,92,2.31,94,2.759,96,3.238,99,1.178,105,2.475,107,2.759,127,0.01,128,0.013,129,0.01,130,2.759,131,3.12,132,3.345,133,3.345,134,3.345,135,2.919,136,3.872,137,3.345,138,3.345,139,2.779,140,3.345,141,2.352,142,3.12,143,2.475,144,2.928,145,3.345,146,2.475,147,2.928,148,2.928,149,2.24,150,2.928,151,2.61,152,3.345,153,3.12,154,3.345,155,3.345,156,3.345,157,3.345,158,3.872,159,3.12,160,3.12,161,3.345,162,1.595,163,2.61,164,2.137,165,3.12,166,2.759,167,3.345,168,1.951,169,3.345]],["title/modules/ToastrTestingModule.html",[281,1.139,1887,2.208]],["body/modules/ToastrTestingModule.html",[3,0.192,4,0.172,5,0.138,6,0.088,8,2.289,17,0.017,18,0.588,21,0.263,22,0.121,23,1.565,30,0.772,32,1.397,36,1.184,38,1.513,42,1.079,46,1.353,95,2.414,127,0.012,128,0.012,129,0.009,170,1.887,192,1.136,197,1.976,203,1.234,207,0.491,281,1.397,283,1.584,293,1.584,294,1.939,301,1.397,302,1.576,303,1.976,320,1.234,329,2.924,332,3.811,336,1.804,345,1.756,350,2.072,366,2.924,386,2.289,409,3.784,410,3.686,411,3.686,445,2.289,513,1.003,544,2.414,595,2.779,662,2.304,673,2.924,788,2.553,827,2.553,870,2.072,883,3.459,885,2.887,889,2.553,1368,2.708,1591,2.414,1592,2.887,1720,1.887,1723,2.553,1743,2.708,1802,3.686,1804,2.887,1806,2.887,1854,2.176,1861,2.708,1862,2.708,1863,4.588,1864,3.095,1865,3.095,1866,3.095,1867,3.095,1868,3.095,1869,4.354,1870,3.095,1871,3.095,1872,3.095,1873,2.708,1874,3.095,1875,2.887,1876,3.095,1877,3.952,1878,3.952,1879,3.952,1880,3.095,1881,2.708,1882,3.459,1883,3.952,1884,3.095,1885,3.095,1886,3.095,1887,3.459,1888,2.887,1889,3.095,1890,2.708,1891,2.708,1892,2.553,1893,2.887,1894,2.887,1895,2.708,2868,4.713]],["title/components/ViewComponent.html",[176,0.574,275,1.291]],["body/components/ViewComponent.html",[3,0.164,4,0.188,5,0.118,6,0.119,17,0.016,18,0.419,21,0.188,22,0.084,26,1.294,30,1.132,127,0.013,128,0.013,129,0.01,162,1.412,172,0.769,176,1.032,177,1.731,178,2.062,179,2.062,180,2.062,182,1.971,183,3.076,184,2.7,186,2.548,188,2.548,207,0.536,239,2.062,240,2.548,241,2.331,242,2.062,243,2.889,244,2.062,245,1.354,246,2.062,247,1.731,248,2.548,249,1.731,250,1.591,251,1.591,252,2.062,253,1.731,254,2.062,255,1.731,256,2.062,257,1.731,258,1.591,259,2.548,260,1.806,261,2.062,262,1.731,263,1.731,264,1.971,265,2.062,266,1.731,267,2.062,268,1.731,269,2.062,270,1.731,271,1.886,272,2.062,273,1.731,274,1.731,275,2.424,276,2.062,277,1.731,278,2.062,279,2.062,280,2.062,1270,2.789,2647,5.504,2869,4.454,2870,6.906,2871,6.363,2872,5.149]],["title/interfaces/WarnFn.html",[0,0.927,522,2.523]],["body/interfaces/WarnFn.html",[0,1.159,2,2.335,3,0.153,4,0.175,5,0.111,6,0.09,8,3.251,17,0.017,18,0.496,21,0.244,22,0.1,23,1.365,30,0.788,42,1.301,43,1.826,46,0.981,83,2.763,127,0.012,128,0.012,129,0.01,139,2.114,171,1.317,207,0.501,302,1.596,336,2.78,359,2.335,360,2.335,361,2.604,376,3.733,401,2.945,419,2.763,484,3.426,497,2.945,498,3.412,499,3.412,500,3.731,501,3.731,503,3.731,505,5.759,510,4.995,511,3.733,512,5.462,513,1.023,514,3.731,515,3.731,516,2.763,517,3.157,518,3.157,519,3.731,520,2.763,521,3.731,522,4.002,523,5.266,524,3.731,525,3.731,526,3.731,527,2.68,528,3.157,529,4.326,530,4.73,531,4.326,532,4.326,533,3.412,534,2.22,535,3.731,536,2.763,537,3.731,538,3.157,539,3.731,540,2.945,541,2.945,542,3.157,543,3.731,544,3.122,545,3.731,546,3.731,547,2.604,548,2.763,549,3.731,550,4.73,551,3.731,552,4.73,553,3.731,554,3.731,555,3.731]],["title/components/WelcomeComponent.html",[176,0.574,277,1.291]],["body/components/WelcomeComponent.html",[3,0.093,4,0.106,5,0.131,6,0.135,9,0.796,10,0.339,11,0.645,12,1.095,15,0.595,16,0.829,17,0.016,18,0.625,21,0.106,22,0.048,23,1.471,26,1.086,30,0.478,35,2.158,36,1.43,42,0.922,46,1.239,64,2.76,99,1.09,126,1.654,127,0.009,128,0.009,129,0.006,136,1.787,162,0.959,164,1.812,166,1.58,171,1.232,172,1.064,176,0.769,177,0.981,178,1.168,179,1.168,180,1.168,182,1.117,183,2.874,184,2.523,186,1.73,188,1.73,192,1.042,197,2.547,202,1.316,203,1.49,207,0.304,239,1.168,240,1.73,241,1.583,242,1.168,243,2.278,244,1.168,245,1.292,246,1.168,247,0.981,248,1.73,249,0.981,250,1.59,251,2.034,252,1.168,253,0.981,254,1.168,255,0.981,256,1.168,257,0.981,258,0.901,259,1.73,260,1.023,261,1.168,262,0.981,263,0.981,264,1.117,265,1.168,266,0.981,267,1.168,268,0.981,269,1.168,270,0.981,271,1.281,272,1.168,273,0.981,274,0.981,275,0.981,276,1.168,277,1.912,278,2.432,279,1.168,280,1.168,306,1.452,314,1.758,318,1.787,320,1.724,322,1.463,323,2.764,330,3.081,345,1.598,347,1.58,353,1.283,354,1.224,355,1.347,356,1.417,367,1.787,396,3.485,433,2.837,484,2.376,511,3.72,513,0.621,517,1.916,562,1.417,662,2.325,673,2.5,674,1.787,675,2.264,676,2.071,691,2.34,695,3.655,696,2.647,767,4.177,788,2.34,889,2.34,950,3.353,959,2.524,1085,3.736,1164,2.647,1215,3.066,1260,3.353,1270,2.787,1274,4.415,1278,3.485,1282,3.198,1288,4.984,1289,4.936,1294,1.787,1295,1.787,1297,4.415,1312,4.037,1313,3.652,1316,4.899,1319,4.671,1330,4.921,1331,4.921,1332,3.353,1360,3.738,1452,2.524,1481,4.714,1634,1.787,1835,2.647,1892,2.787,1926,3.652,1928,2.071,1948,2.264,1987,2.524,1997,2.524,2009,3.066,2072,2.524,2125,3.066,2216,2.264,2251,3.738,2268,2.524,2304,2.524,2380,3.738,2631,3.738,2834,2.524,2873,2.524,2874,5.146,2875,4.321,2876,5.146,2877,6.074,2878,6.074,2879,4.321,2880,4.321,2881,5.689,2882,2.918,2883,6.36,2884,4.321,2885,4.321,2886,4.321,2887,2.918,2888,4.321,2889,2.918,2890,2.918,2891,2.918,2892,2.918,2893,2.918,2894,2.918,2895,2.918,2896,2.918,2897,2.918,2898,4.321,2899,2.918,2900,2.918,2901,4.321,2902,2.918,2903,2.918,2904,4.321,2905,2.918,2906,2.918,2907,2.918,2908,2.918,2909,5.146,2910,2.918,2911,2.918,2912,2.918,2913,2.918,2914,2.918,2915,2.918,2916,2.918,2917,2.918,2918,2.918,2919,5.146,2920,2.918,2921,5.146,2922,2.918,2923,2.918,2924,4.321,2925,4.321,2926,3.738,2927,4.321,2928,4.321,2929,4.321,2930,4.321,2931,4.321,2932,4.321,2933,4.321,2934,4.321,2935,4.321,2936,4.321,2937,4.321,2938,4.321,2939,4.321,2940,4.321]],["title/modules/WelcomeModule.html",[281,1.139,2941,2.727]],["body/modules/WelcomeModule.html",[3,0.157,4,0.179,5,0.113,6,0.092,17,0.016,18,0.643,21,0.179,22,0.08,127,0.01,128,0.012,129,0.01,184,1.651,207,0.512,258,1.518,271,1.456,277,2.645,282,3.281,283,1.651,284,2.263,288,2.474,289,1.881,290,1.651,292,2.474,293,2.077,294,1.991,295,2.474,296,1.881,297,3.001,298,2.268,299,2.268,301,1.831,320,1.286,354,2.06,423,3.225,479,2.268,513,1.045,862,4.57,868,2.798,870,2.16,871,4.385,873,2.516,874,3.009,1563,3.624,1568,2.823,1569,2.386,1570,2.66,1573,4.249,1579,2.516,1580,3.009,1589,2.823,1720,1.967,1830,2.516,1832,4.795,1833,4.795,1834,4.795,1835,3.009,2167,2.516,2171,2.386,2172,3.225,2173,3.225,2941,5.647,2942,4.249,2943,4.912,2944,4.249,2945,4.249,2946,4.912,2947,4.912]],["title/coverage.html",[2948,4.548]],["body/coverage.html",[0,1.772,1,1.518,5,0.087,6,0.152,7,4.224,9,1.035,16,0.465,17,0.016,19,1.75,22,0.124,26,0.953,36,0.953,43,2.212,47,2.69,75,1.842,84,2.179,127,0.008,128,0.01,129,0.008,130,2.053,131,4.115,163,1.942,176,1.152,177,1.274,181,3.279,247,1.274,249,1.274,251,1.839,253,1.274,255,1.274,257,1.274,260,1.33,262,1.274,263,1.274,266,1.274,268,1.274,270,1.274,273,1.274,274,2.154,275,1.274,277,1.274,302,1.897,303,1.59,305,3.279,306,1.274,307,3.279,320,0.993,345,0.953,355,1.75,447,2.69,448,3.279,497,2.322,498,4.224,499,4.224,520,2.179,522,2.489,556,2.322,557,3.925,558,3.279,595,1.75,598,2.053,605,3.279,611,2.322,674,2.322,875,3.279,923,2.322,1029,3.279,1087,2.69,1185,3.279,1186,3.279,1267,4.043,1268,2.942,1269,3.279,1280,2.322,1282,1.842,1337,2.942,1338,2.942,1339,2.942,1384,3.279,1385,3.279,1482,6.265,1575,2.69,1579,1.942,1593,4.224,1595,2.322,1598,2.053,1701,2.69,1702,3.697,1726,2.69,1827,2.69,1828,4.224,1838,2.69,1845,2.69,1861,2.179,1862,3.861,1873,2.179,1881,2.179,1882,2.179,1890,2.179,1907,3.279,2037,2.942,2038,4.043,2157,3.279,2171,2.891,2174,4.043,2175,4.043,2208,2.942,2346,2.942,2347,3.279,2351,3.279,2514,3.279,2563,3.279,2575,2.942,2576,3.279,2593,2.179,2759,2.942,2760,3.279,2822,3.279,2869,3.279,2873,3.279,2948,3.279,2949,3.791,2950,3.791,2951,3.791,2952,3.791,2953,5.952,2954,3.791,2955,3.791,2956,5.952,2957,3.791,2958,3.791,2959,6.718,2960,6.409,2961,3.791,2962,5.21,2963,5.21,2964,3.791,2965,3.279,2966,3.791,2967,3.791,2968,3.791,2969,5.952,2970,7.349,2971,3.791,2972,6.409,2973,3.279,2974,3.791,2975,4.506,2976,3.279,2977,3.791,2978,3.791,2979,3.791,2980,3.791,2981,5.21,2982,3.791,2983,3.791,2984,3.791]],["title/dependencies.html",[284,1.694,2985,3.202]],["body/dependencies.html",[17,0.016,127,0.011,128,0.013,129,0.011,184,1.829,207,0.567,208,3.333,209,2.947,210,3.565,211,3.333,250,2.033,284,1.993,296,2.083,298,2.512,299,2.512,350,2.393,366,2.643,423,3.573,479,2.512,513,1.158,1510,4.223,1720,2.834,1800,5.693,1835,3.333,1956,4.223,1957,4.223,2064,4.707,2319,5.108,2405,4.223,2411,4.223,2512,4.671,2553,4.707,2986,5.693,2987,7.65,2988,5.441,2989,5.441,2990,5.441,2991,5.441,2992,5.441,2993,5.441,2994,5.441,2995,5.441,2996,5.441,2997,5.441,2998,5.441,2999,5.441,3000,5.441,3001,5.441,3002,6.581,3003,5.441,3004,5.441,3005,6.581,3006,5.441,3007,5.441,3008,5.441,3009,5.441,3010,5.441,3011,5.441,3012,5.441,3013,5.441,3014,5.441,3015,5.441,3016,5.441,3017,5.441]],["title/miscellaneous/enumerations.html",[1202,1.84,3018,4.001]],["body/miscellaneous/enumerations.html",[3,0.191,6,0.112,10,0.698,17,0.016,43,1.638,126,2.298,127,0.012,128,0.014,129,0.012,171,1.477,336,2.298,386,2.916,534,2.772,595,2.772,1196,2.772,1202,3.45,1702,4.26,1711,5.414,1723,3.251,1724,4.26,1725,4.659,1726,4.26,3018,5.193,3019,6.003]],["title/index.html",[10,0.372,1372,2.77,3020,3.202]],["body/index.html",[5,0.12,17,0.015,58,5.138,99,0.892,127,0.01,128,0.013,129,0.01,162,1.155,176,1.037,245,1.108,250,2.45,283,1.749,290,1.749,345,1.308,362,3.694,409,2.819,432,4.503,442,4.503,516,3.988,536,3.681,788,3.758,803,6.002,816,4.04,817,4.04,924,4.04,944,5.541,997,4.04,1167,4.503,1169,5.541,1241,3.188,1439,4.971,1440,4.04,1663,4.546,1720,3.126,1738,5.77,1854,2.403,1891,2.991,1960,4.503,2186,4.503,2193,3.694,2283,4.503,2290,4.503,2476,4.503,2512,5.372,2782,4.503,2926,6.43,2986,4.503,3021,5.205,3022,5.205,3023,5.205,3024,5.205,3025,5.205,3026,5.205,3027,5.205,3028,5.205,3029,6.939,3030,5.205,3031,7.24,3032,5.205,3033,5.205,3034,5.205,3035,5.205,3036,6.405,3037,5.205,3038,5.205,3039,5.205,3040,5.205,3041,5.205,3042,5.205,3043,5.205,3044,5.205,3045,5.205,3046,5.205,3047,5.205,3048,5.205,3049,6.939,3050,4.04,3051,5.205]],["title/modules.html",[283,1.767]],["body/modules.html",[17,0.014,127,0.011,128,0.014,129,0.011,210,4.353,282,2.499,283,1.91,408,4.411,862,3.481,868,2.176,1557,4.033,1563,2.761,1564,3.732,1565,3.732,1566,3.732,1660,3.078,1847,3.732,1887,3.266,2030,4.033,2167,2.911,2319,6.238,2568,4.033,2941,4.033,3052,8.038,3053,8.058]],["title/overview.html",[3050,4.081]],["body/overview.html",[2,1.854,17,0.016,36,1.615,127,0.008,128,0.011,129,0.008,162,0.847,170,1.529,177,2.394,247,2.394,249,2.394,253,2.394,255,2.394,257,2.394,260,2.499,262,2.394,263,2.394,266,2.394,268,2.394,270,2.394,273,2.394,275,2.394,277,2.394,282,3.274,283,1.283,284,1.918,285,3.302,286,3.302,287,3.302,288,2.096,289,1.462,290,1.283,303,2.505,304,1.955,320,1.564,567,2.963,862,4.675,863,3.302,864,3.302,865,3.302,866,3.302,867,3.302,868,2.922,993,2.963,1087,2.709,1280,3.659,1282,2.902,1557,5.661,1558,3.302,1559,3.302,1560,3.302,1561,3.302,1562,3.302,1563,3.524,1564,5.112,1565,4.764,1566,4.764,1847,4.764,1856,3.302,1858,3.302,2030,5.055,2031,3.302,2032,3.302,2033,3.302,2152,3.302,2153,3.302,2154,3.302,2163,3.302,2164,3.302,2165,3.302,2166,3.302,2167,3.933,2506,3.302,2508,3.302,2509,3.302,2557,3.302,2558,3.302,2560,3.302,2568,5.335,2569,3.302,2570,3.302,2572,3.302,2593,3.433,2860,3.302,2861,3.302,2862,3.302,2863,3.302,2941,5.416,2942,3.302,2944,3.302,2945,3.302,2965,3.302,2976,3.302,3050,2.963]],["title/miscellaneous/typealiases.html",[1202,1.84,3054,4.625]],["body/miscellaneous/typealiases.html",[6,0.114,10,0.713,16,0.937,17,0.014,127,0.015,128,0.014,129,0.012,241,2.586,357,6.107,562,3.612,1202,3.522,3055,6.128,3056,7.436,3057,6.128]],["title/miscellaneous/variables.html",[1202,1.84,1748,3.037]],["body/miscellaneous/variables.html",[5,0.154,6,0.129,7,2.656,10,0.435,16,0.869,17,0.017,27,1.499,28,2.166,29,3.665,32,1.109,38,1.486,42,1.142,43,1.97,46,1.364,47,3.665,48,2.905,49,3.04,50,3.193,51,3.665,52,2.656,53,2.905,54,4.947,55,2.656,56,2.293,57,2.656,58,2.656,59,2.293,60,3.665,61,1.917,62,2.905,63,2.905,64,1.57,65,1.736,66,2.293,67,1.646,68,2.905,69,4.589,70,4.589,71,4.392,72,4.589,73,2.905,74,4.008,75,3.359,76,2.905,77,2.905,78,2.905,79,2.905,80,2.905,81,2.968,82,2.905,99,1.256,126,2.84,127,0.008,128,0.01,129,0.008,151,1.917,171,1.352,216,3.238,245,1.423,250,1.156,251,1.596,306,1.258,329,1.818,336,1.433,345,1.602,355,2.384,484,1.728,592,4.524,695,2.968,696,3.163,710,2.905,716,2.905,923,3.163,943,2.905,1002,2.905,1196,2.73,1202,2.151,1214,2.905,1215,2.656,1312,3.665,1316,2.656,1319,2.656,1338,2.905,1339,4.008,1367,2.656,1368,2.151,1448,2.905,1534,2.656,1634,3.163,1724,3.665,1748,2.458,1828,2.656,1838,3.665,1839,2.905,1840,2.905,1845,3.665,1846,2.905,1854,1.728,1862,2.151,1890,2.968,1891,2.151,1892,2.797,1893,2.293,1894,2.293,1895,2.151,1926,2.656,1928,3.665,2006,4.008,2174,2.905,2175,4.008,2208,4.008,2209,3.238,2210,3.238,2211,3.238,2212,3.238,2213,4.467,2214,3.238,2215,3.238,2216,4.008,2217,3.238,2218,3.238,2219,4.467,2220,3.238,2221,4.467,2222,3.238,2223,3.238,2224,3.238,2225,3.238,2226,3.238,2227,3.238,2228,3.238,2248,4.467,2249,3.238,2259,3.238,2260,3.238,2261,3.238,2390,3.238,2973,3.238,2975,3.238,3058,3.743,3059,5.164,3060,3.743,3061,3.743,3062,5.164,3063,3.743,3064,3.743,3065,3.743,3066,5.164,3067,3.743,3068,3.743,3069,5.164,3070,5.164,3071,3.743,3072,3.743,3073,3.743,3074,3.743,3075,3.743,3076,3.743,3077,3.743,3078,3.743,3079,5.164,3080,3.743,3081,5.164,3082,3.743,3083,3.743,3084,3.743,3085,5.164,3086,5.164,3087,3.743,3088,3.743,3089,5.164,3090,3.743,3091,3.743,3092,3.743,3093,3.743,3094,3.743,3095,3.743,3096,3.743,3097,3.743,3098,3.743,3099,3.743,3100,3.743,3101,3.743,3102,3.743,3103,3.743,3104,3.743,3105,3.743,3106,3.743,3107,3.743,3108,3.743,3109,3.743,3110,3.743,3111,5.164,3112,5.164,3113,3.743,3114,3.743,3115,3.743]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":43,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"interfaces/WarnFn.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["0.0",{"_index":1895,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/variables.html":{}}}],["0.005",{"_index":1160,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["0.11.3",{"_index":3017,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":1855,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["0.2.1.tgz",{"_index":3000,"title":{},"body":{"dependencies.html":{}}}],["0.25",{"_index":124,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["0.2665",{"_index":74,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["0.2s",{"_index":2133,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["0.4",{"_index":114,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["0.4.2",{"_index":3010,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1126,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["0.8",{"_index":1650,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["0.87",{"_index":1100,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["0.9",{"_index":1052,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["0.9.0",{"_index":2993,"title":{},"body":{"dependencies.html":{}}}],["0.9.3",{"_index":3006,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2970,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2958,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2964,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2953,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2981,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2959,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2957,"title":{},"body":{"coverage.html":{}}}],["0/21",{"_index":2952,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2982,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2961,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":2967,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2955,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2956,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2960,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2980,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2972,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2951,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2978,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2969,"title":{},"body":{"coverage.html":{}}}],["00000",{"_index":3086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00000048",{"_index":3085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0019554",{"_index":3105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0071394",{"_index":3093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00902",{"_index":3102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00902u",{"_index":3097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00b89c",{"_index":2018,"title":{},"body":{"components/NavbarComponent.html":{}}}],["01520",{"_index":3090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["01520u",{"_index":3082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["07",{"_index":3070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0px",{"_index":857,"title":{},"body":{"components/FormComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["1",{"_index":126,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/LayoutComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/WelcomeComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["1+selectedsatellite.ecc)*selectedsatellite.sma).toprecision(3",{"_index":2938,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["1.1",{"_index":1059,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["1.1.0",{"_index":3007,"title":{},"body":{"dependencies.html":{}}}],["1.2.0",{"_index":2992,"title":{},"body":{"dependencies.html":{}}}],["1.2.35",{"_index":2996,"title":{},"body":{"dependencies.html":{}}}],["1.6.3",{"_index":3013,"title":{},"body":{"dependencies.html":{}}}],["1.7",{"_index":1176,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["1/1",{"_index":2974,"title":{},"body":{"coverage.html":{}}}],["1/12",{"_index":2966,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":2979,"title":{},"body":{"coverage.html":{}}}],["1/17",{"_index":2968,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2971,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2977,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2963,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":81,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/DrawingDefault.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/SyntheticDrawingComponent.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":3003,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":75,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":1266,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["100px",{"_index":2731,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["100vh",{"_index":2117,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["10e",{"_index":1195,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["10e3",{"_index":1194,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["10px",{"_index":1543,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["11",{"_index":2962,"title":{},"body":{"coverage.html":{}}}],["11.2.1",{"_index":2987,"title":{},"body":{"dependencies.html":{}}}],["11.2.14",{"_index":2986,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["111111",{"_index":2726,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["12",{"_index":2976,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["120.1784",{"_index":3094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1200",{"_index":1074,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["125",{"_index":594,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["12px",{"_index":2113,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["13.35847446723246",{"_index":3096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["13.52697507613817",{"_index":3108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["130.0589",{"_index":3092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["138",{"_index":1111,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["14",{"_index":1087,"title":{},"body":{"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"coverage.html":{},"overview.html":{}}}],["14.0",{"_index":100,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["14.0.0",{"_index":3011,"title":{},"body":{"dependencies.html":{}}}],["146",{"_index":1069,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["15",{"_index":567,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{},"overview.html":{}}}],["150",{"_index":2709,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["157.63.2.17:87",{"_index":1369,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["15px",{"_index":1549,"title":{},"body":{"components/LayoutComponent.html":{}}}],["180",{"_index":764,"title":{},"body":{"components/FormComponent.html":{},"classes/HelperFunctions.html":{}}}],["1mw",{"_index":853,"title":{},"body":{"components/FormComponent.html":{}}}],["1px",{"_index":2115,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["2",{"_index":1196,"title":{},"body":{"classes/HelperFunctions.html":{},"injectables/JSatOrbLinkService.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":3015,"title":{},"body":{"dependencies.html":{}}}],["2.0.3",{"_index":3009,"title":{},"body":{"dependencies.html":{}}}],["2.15",{"_index":1110,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["2.79",{"_index":1175,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["20",{"_index":1103,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["20).attr('text",{"_index":2429,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["200px",{"_index":2121,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["2021",{"_index":3069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2045",{"_index":1133,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["20px",{"_index":220,"title":{},"body":{"components/CardComponent.html":{}}}],["21200.78530898",{"_index":3084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["21200.88552299",{"_index":3099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22t01:53:36",{"_index":3071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["23.2",{"_index":1078,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["230.4",{"_index":1097,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["233.15",{"_index":1163,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["238",{"_index":1173,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["23t01:53:41",{"_index":3073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24",{"_index":593,"title":{},"body":{"classes/DrawingDefault.html":{},"classes/HelperFunctions.html":{}}}],["240",{"_index":2671,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["24px",{"_index":856,"title":{},"body":{"components/FormComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["25",{"_index":574,"title":{},"body":{"classes/DrawingDefault.html":{},"components/LayoutComponent.html":{}}}],["255",{"_index":238,"title":{},"body":{"components/CardComponent.html":{}}}],["25px",{"_index":1517,"title":{},"body":{"components/LayoutComponent.html":{}}}],["280",{"_index":1168,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["29.0114",{"_index":3107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["294.1357",{"_index":3095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2mb",{"_index":2320,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["2px",{"_index":1538,"title":{},"body":{"components/LayoutComponent.html":{}}}],["3",{"_index":534,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/FormControlWarn.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"interfaces/WarnFn.html":{},"miscellaneous/enumerations.html":{}}}],["3.0",{"_index":1056,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["3.14159265358979323846",{"_index":1879,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["3.149",{"_index":78,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["3.986004418",{"_index":1198,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["30",{"_index":579,"title":{},"body":{"classes/DrawingDefault.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["30px",{"_index":1532,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["31m",{"_index":2095,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["320px",{"_index":2505,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["3273dc",{"_index":2128,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["33",{"_index":1254,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["35",{"_index":578,"title":{},"body":{"classes/DrawingDefault.html":{},"classes/FormsTemplate.html":{}}}],["35.0",{"_index":104,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["3600",{"_index":1259,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["361.2px",{"_index":226,"title":{},"body":{"components/CardComponent.html":{}}}],["37.8678",{"_index":3104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38.2840",{"_index":3106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["396px",{"_index":2141,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["4",{"_index":1724,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["4.5",{"_index":1121,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["40px",{"_index":2144,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["42).attr('text",{"_index":2433,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["42).attr('y",{"_index":2432,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["464646be",{"_index":2109,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["4a",{"_index":3080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4a4a4a",{"_index":2020,"title":{},"body":{"components/NavbarComponent.html":{}}}],["4px",{"_index":2425,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["5",{"_index":595,"title":{},"body":{"classes/DrawingDefault.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavigationSidebarComponent.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["5).attr('y",{"_index":2428,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["5,5",{"_index":2744,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["5.0.2",{"_index":3004,"title":{},"body":{"dependencies.html":{}}}],["5.15.3",{"_index":2997,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1545,"title":{},"body":{"components/LayoutComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["508750488",{"_index":1867,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["55b776",{"_index":1556,"title":{},"body":{"components/LayoutComponent.html":{}}}],["58478",{"_index":3100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["59",{"_index":2422,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["5f05",{"_index":519,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["5px",{"_index":2111,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["6",{"_index":1726,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["6.6.0",{"_index":3012,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2685,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["60)px",{"_index":2732,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["600",{"_index":3074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["60px",{"_index":2147,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["63",{"_index":1258,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["6378.137",{"_index":1200,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["64063e",{"_index":3098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["640px",{"_index":2142,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["65",{"_index":583,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["650",{"_index":1129,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["65065h",{"_index":3083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["66.78",{"_index":1105,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["670551280",{"_index":1844,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["7.0.0",{"_index":3008,"title":{},"body":{"dependencies.html":{}}}],["7000000",{"_index":3076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["73",{"_index":2420,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["74357",{"_index":3087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["75",{"_index":587,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["7d7d7d",{"_index":1539,"title":{},"body":{"components/LayoutComponent.html":{}}}],["8",{"_index":2965,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["8,${encodeuricomponent",{"_index":2332,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["80",{"_index":1516,"title":{},"body":{"components/LayoutComponent.html":{}}}],["800px",{"_index":2751,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["8080802e",{"_index":2120,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["85",{"_index":590,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SimpleDocumentationComponent.html":{}}}],["888888",{"_index":2745,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["9",{"_index":993,"title":{},"body":{"injectables/FormService.html":{},"components/SyntheticDrawingComponent.html":{},"overview.html":{}}}],["90.0154",{"_index":3091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90.1726",{"_index":3103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["90px",{"_index":850,"title":{},"body":{"components/FormComponent.html":{}}}],["960",{"_index":2667,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["97.8736",{"_index":3077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9991",{"_index":3101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9995",{"_index":3088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]+([,][0",{"_index":991,"title":{},"body":{"injectables/FormService.html":{}}}],["9]+)*([.][0",{"_index":992,"title":{},"body":{"injectables/FormService.html":{}}}],["_blank",{"_index":2339,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["_components",{"_index":2579,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["_formtemplate",{"_index":608,"title":{},"body":{"components/FormComponent.html":{}}}],["_isinitialized",{"_index":876,"title":{},"body":{"injectables/FormService.html":{}}}],["_isnanospaceenabled",{"_index":1911,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_powerin",{"_index":2580,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["_step",{"_index":2518,"title":{},"body":{"components/StepbarComponent.html":{}}}],["_validity",{"_index":2519,"title":{},"body":{"components/StepbarComponent.html":{}}}],["a:hover",{"_index":2104,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["a:not([href]):not([tabindex",{"_index":2029,"title":{},"body":{"components/NavbarComponent.html":{}}}],["aaa",{"_index":3110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["above",{"_index":1979,"title":{},"body":{"components/NavbarComponent.html":{}}}],["abscissa",{"_index":1673,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["absolute",{"_index":1547,"title":{},"body":{"components/LayoutComponent.html":{}}}],["absolutely",{"_index":2857,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["abstract",{"_index":83,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/FormControlWarn.html":{},"classes/FormsTemplate.html":{},"interfaces/WarnFn.html":{}}}],["abstractcontrol",{"_index":510,"title":{},"body":{"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["abstractcontroloptions",{"_index":2779,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["acceptable",{"_index":2381,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["access",{"_index":403,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/LayoutComponent.html":{}}}],["accessors",{"_index":631,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"components/NavbarComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["activatedroute",{"_index":1400,"title":{},"body":{"components/LayoutComponent.html":{}}}],["activatedroutesnapshot",{"_index":465,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["active",{"_index":2127,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"components/StepbarComponent.html":{}}}],["actual_component",{"_index":280,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["actually",{"_index":2483,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["adapt",{"_index":2124,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["add",{"_index":816,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"index.html":{}}}],["addcomponent",{"_index":1680,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["addcomponent(id",{"_index":1622,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["addcomponents",{"_index":1681,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["addcomponents(components",{"_index":1624,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["added",{"_index":3033,"title":{},"body":{"index.html":{}}}],["addform",{"_index":880,"title":{},"body":{"injectables/FormService.html":{}}}],["addform(formgroup",{"_index":891,"title":{},"body":{"injectables/FormService.html":{}}}],["adding",{"_index":933,"title":{},"body":{"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["adds",{"_index":387,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["adimensional",{"_index":120,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["afterviewinit",{"_index":2348,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["again",{"_index":775,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{}}}],["agpl",{"_index":2087,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["algebraic",{"_index":526,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["aliases",{"_index":3055,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1541,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavbarComponent.html":{}}}],["align:center",{"_index":1528,"title":{},"body":{"components/LayoutComponent.html":{}}}],["allow",{"_index":223,"title":{},"body":{"components/CardComponent.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"modules/LayoutModule.html":{}}}],["allowing",{"_index":785,"title":{},"body":{"components/FormComponent.html":{}}}],["allows",{"_index":943,"title":{},"body":{"injectables/FormService.html":{},"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["already",{"_index":802,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{}}}],["alt",{"_index":2354,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["alternative",{"_index":156,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["altitude",{"_index":695,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["altitude.unit",{"_index":779,"title":{},"body":{"components/FormComponent.html":{}}}],["altitude.value",{"_index":777,"title":{},"body":{"components/FormComponent.html":{}}}],["altitude/elevation",{"_index":745,"title":{},"body":{"components/FormComponent.html":{}}}],["altitudefromsrelev",{"_index":1190,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["altitudefromsrelev(sr",{"_index":1205,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["altitue",{"_index":766,"title":{},"body":{"components/FormComponent.html":{}}}],["always",{"_index":87,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/SimpleDocumentationComponent.html":{}}}],["amplitude",{"_index":1651,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["amsat",{"_index":51,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["anchor",{"_index":2335,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["anchor.click",{"_index":2342,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["anchor.download",{"_index":2340,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["anchor.href",{"_index":2337,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["anchor.remove",{"_index":2344,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["anchor.target",{"_index":2338,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["angle",{"_index":1130,"title":{},"body":{"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{}}}],["angleleft",{"_index":1912,"title":{},"body":{"components/NavbarComponent.html":{}}}],["angular",{"_index":516,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/WarnFn.html":{},"index.html":{}}}],["angular.json",{"_index":3034,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2064,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":296,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":348,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["angular/compiler",{"_index":2988,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":207,"title":{},"body":{"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":513,"title":{},"body":{"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1800,"title":{},"body":{"modules/LoggerModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":479,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["animate",{"_index":2061,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["animate(100",{"_index":2071,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["animation",{"_index":2131,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["animations",{"_index":2067,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["antbeamwidth",{"_index":101,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["antena",{"_index":2502,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["antenna",{"_index":1,"title":{"interfaces/Antenna.html":{}},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["antennafield",{"_index":130,"title":{"interfaces/AntennaField.html":{}},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["antennaid",{"_index":132,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["antennaname",{"_index":1389,"title":{},"body":{"components/LayoutComponent.html":{}}}],["antennas",{"_index":84,"title":{"classes/Antennas.html":{}},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/SimpleDocumentationComponent.html":{},"coverage.html":{}}}],["antennas.genericantenna",{"_index":1415,"title":{},"body":{"components/LayoutComponent.html":{}}}],["antennas.helixantenna",{"_index":1044,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["antennas.yagiantenna",{"_index":1043,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["antennasutilsfunctions",{"_index":47,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["antennavalues",{"_index":133,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["antmaxgain",{"_index":93,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["antrx",{"_index":580,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["anttx",{"_index":571,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["api",{"_index":67,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"injectables/JSatOrbLinkService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["apiresult",{"_index":357,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"miscellaneous/typealiases.html":{}}}],["app",{"_index":1439,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{},"index.html":{}}}],["app.routes",{"_index":1582,"title":{},"body":{"modules/LayoutModule.html":{}}}],["app/src/environments/environment",{"_index":1959,"title":{},"body":{"components/NavbarComponent.html":{}}}],["append('line",{"_index":2736,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["append('path",{"_index":2686,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["append('svg",{"_index":2682,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["append('text",{"_index":2418,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["applications",{"_index":1745,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["appropriate",{"_index":140,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["appropriately",{"_index":1119,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["architecture",{"_index":2479,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["archived",{"_index":808,"title":{},"body":{"components/FormComponent.html":{}}}],["archives",{"_index":826,"title":{},"body":{"components/FormComponent.html":{}}}],["aren't",{"_index":793,"title":{},"body":{"components/FormComponent.html":{}}}],["array",{"_index":837,"title":{},"body":{"components/FormComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["arrowless)::after",{"_index":2023,"title":{},"body":{"components/NavbarComponent.html":{}}}],["artifacts",{"_index":3035,"title":{},"body":{"index.html":{}}}],["asfield",{"_index":617,"title":{},"body":{"components/FormComponent.html":{}}}],["asfield(field",{"_index":640,"title":{},"body":{"components/FormComponent.html":{}}}],["asfield(field).desc",{"_index":841,"title":{},"body":{"components/FormComponent.html":{}}}],["asfield(field).units[0",{"_index":842,"title":{},"body":{"components/FormComponent.html":{}}}],["asformwarn",{"_index":618,"title":{},"body":{"components/FormComponent.html":{}}}],["asformwarn(control",{"_index":642,"title":{},"body":{"components/FormComponent.html":{}}}],["assets/antennas/helix.jpg",{"_index":118,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["assets/antennas/yagi.jpg",{"_index":108,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["assets/antennestls.jpg",{"_index":1109,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["associated",{"_index":1611,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["assume",{"_index":153,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"interfaces/Template.html":{}}}],["atm",{"_index":1449,"title":{},"body":{"components/LayoutComponent.html":{}}}],["atm_gas",{"_index":1057,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["atmosphere",{"_index":1047,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["atmospheric",{"_index":2468,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["attach",{"_index":949,"title":{},"body":{"injectables/FormService.html":{}}}],["attr",{"_index":2684,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('class",{"_index":2720,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('d",{"_index":2722,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('fill",{"_index":2724,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('height",{"_index":2688,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('id",{"_index":2683,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('stroke",{"_index":2723,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('text",{"_index":2423,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["attr('width",{"_index":2687,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('x",{"_index":2419,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["attr('x1",{"_index":2738,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('x2",{"_index":2741,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('y",{"_index":2421,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["attr('y1",{"_index":2740,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('y2",{"_index":2742,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attribute",{"_index":1636,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["auto",{"_index":235,"title":{},"body":{"components/CardComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["automatically",{"_index":968,"title":{},"body":{"injectables/FormService.html":{},"components/NavbarComponent.html":{}}}],["available",{"_index":408,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/SaveLoadService.html":{},"modules.html":{}}}],["availableantennas",{"_index":1030,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["avoid",{"_index":738,"title":{},"body":{"components/FormComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavigationSidebarComponent.html":{}}}],["axis",{"_index":2631,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/WelcomeComponent.html":{}}}],["backend",{"_index":440,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/NavigationSidebarComponent.html":{}}}],["background",{"_index":229,"title":{},"body":{"components/CardComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["backward",{"_index":1664,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["bandwidth",{"_index":1070,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["bar",{"_index":2550,"title":{},"body":{"components/StepbarComponent.html":{}}}],["based",{"_index":1489,"title":{},"body":{"components/LayoutComponent.html":{}}}],["basis",{"_index":2840,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["bbb",{"_index":3113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beamwidth",{"_index":29,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{},"miscellaneous/variables.html":{}}}],["beamwidthcalculation",{"_index":13,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["before",{"_index":406,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["behaviorsubject",{"_index":332,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["being",{"_index":150,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"interfaces/Template.html":{}}}],["belongs",{"_index":2801,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["ber",{"_index":1158,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["best",{"_index":434,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/SaveLoadService.html":{}}}],["better",{"_index":2324,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["between",{"_index":744,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"modules/LayoutModule.html":{},"components/SimpleDocumentationComponent.html":{}}}],["binding",{"_index":399,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["bit",{"_index":746,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{}}}],["bit_rate",{"_index":1071,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["black",{"_index":2754,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["blob",{"_index":2312,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["block",{"_index":1540,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["blur",{"_index":1005,"title":{},"body":{"injectables/FormService.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["blurring",{"_index":999,"title":{},"body":{"injectables/FormService.html":{}}}],["bold",{"_index":2130,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["boolean",{"_index":25,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"interfaces/Template.html":{}}}],["boom",{"_index":110,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["boomlength",{"_index":109,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["bootstrap",{"_index":3002,"title":{},"body":{"dependencies.html":{}}}],["bootstrap/ng",{"_index":3001,"title":{},"body":{"dependencies.html":{}}}],["bootstraps",{"_index":3027,"title":{},"body":{"index.html":{}}}],["border",{"_index":1537,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["both",{"_index":987,"title":{},"body":{"injectables/FormService.html":{},"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{}}}],["bottom",{"_index":219,"title":{},"body":{"components/CardComponent.html":{},"modules/LoggerModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["bottom:0",{"_index":218,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{}}}],["bounds",{"_index":549,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["bps",{"_index":1073,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["break",{"_index":1777,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["browse",{"_index":3053,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2319,"title":{},"body":{"injectables/SaveLoadService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":1801,"title":{},"body":{"modules/LoggerModule.html":{}}}],["browseranimationsmodule",{"_index":1799,"title":{},"body":{"modules/LoggerModule.html":{}}}],["budget",{"_index":2009,"title":{},"body":{"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["budget.service",{"_index":1837,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/ResultSidebarComponent.html":{}}}],["budget.service.ts",{"_index":307,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"coverage.html":{}}}],["budget.service.ts:15",{"_index":343,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:16",{"_index":344,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:17",{"_index":342,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:21",{"_index":346,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:23",{"_index":321,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:32",{"_index":326,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:78",{"_index":337,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:82",{"_index":339,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:86",{"_index":331,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:90",{"_index":335,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget/layout.component",{"_index":1571,"title":{},"body":{"modules/LayoutModule.html":{}}}],["budget/layout.component.ts",{"_index":1385,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["budget/layout.component.ts:143",{"_index":1403,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:152",{"_index":1406,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:16",{"_index":1401,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:168",{"_index":1409,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:20",{"_index":1420,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:22",{"_index":1431,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:74",{"_index":1430,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:80",{"_index":1434,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:83",{"_index":1421,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:84",{"_index":1432,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:86",{"_index":1414,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:87",{"_index":1413,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:88",{"_index":1417,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:90",{"_index":1419,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:91",{"_index":1416,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:92",{"_index":1412,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:93",{"_index":1410,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:94",{"_index":1422,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:95",{"_index":1423,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:96",{"_index":1433,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:98",{"_index":1404,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budgettext",{"_index":2581,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["bug",{"_index":2845,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["build",{"_index":1738,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"index.html":{}}}],["buildform",{"_index":2879,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["buildform(data",{"_index":2886,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["building",{"_index":3039,"title":{},"body":{"index.html":{}}}],["buildlogstring",{"_index":1706,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["builds",{"_index":2911,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["built",{"_index":2096,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["bulma",{"_index":3005,"title":{},"body":{"dependencies.html":{}}}],["bulma/bulma.sass",{"_index":215,"title":{},"body":{"components/CardComponent.html":{}}}],["bulma/sass/utilities/derived",{"_index":213,"title":{},"body":{"components/CardComponent.html":{},"components/StepbarComponent.html":{}}}],["button.is",{"_index":2025,"title":{},"body":{"components/NavbarComponent.html":{}}}],["buttons",{"_index":2028,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["c",{"_index":1096,"title":{},"body":{"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["c.label",{"_index":1619,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["c.position",{"_index":1620,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["c.width",{"_index":1621,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["cable",{"_index":2494,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["cablerx",{"_index":584,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["cabletx",{"_index":568,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["calc(100vh",{"_index":2143,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["calculate",{"_index":757,"title":{},"body":{"components/FormComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["calculated",{"_index":2383,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["calculation",{"_index":382,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/FormService.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["calculations",{"_index":60,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/HelperFunctions.html":{},"miscellaneous/variables.html":{}}}],["call",{"_index":66,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"miscellaneous/variables.html":{}}}],["callback",{"_index":2212,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["callbackfn",{"_index":2286,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["callbackfn(json.parse(value",{"_index":2303,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["callbackfn(result",{"_index":2241,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["callbackfn(results",{"_index":2246,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["called",{"_index":934,"title":{},"body":{"injectables/FormService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["calsphere",{"_index":3079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["can't",{"_index":2307,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["card",{"_index":185,"title":{},"body":{"components/CardComponent.html":{}}}],["card'},{'name",{"_index":246,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["card.component",{"_index":300,"title":{},"body":{"modules/CardModule.html":{}}}],["card.component.html",{"_index":189,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":187,"title":{},"body":{"components/CardComponent.html":{}}}],["card.is",{"_index":227,"title":{},"body":{"components/CardComponent.html":{}}}],["card/card.module",{"_index":2173,"title":{},"body":{"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["cardcomponent",{"_index":177,"title":{"components/CardComponent.html":{}},"body":{"components/CardComponent.html":{},"modules/CardModule.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cardmodule",{"_index":282,"title":{"modules/CardModule.html":{}},"body":{"modules/CardModule.html":{},"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{},"modules.html":{},"overview.html":{}}}],["careful",{"_index":2702,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["carrier",{"_index":1063,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["case",{"_index":372,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{}}}],["cases",{"_index":1318,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["casting",{"_index":715,"title":{},"body":{"components/FormComponent.html":{}}}],["casts",{"_index":712,"title":{},"body":{"components/FormComponent.html":{}}}],["catcherror",{"_index":351,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["catcherror(this.handleerror.bind(this",{"_index":398,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["caused",{"_index":729,"title":{},"body":{"components/FormComponent.html":{}}}],["cc",{"_index":2474,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["cd",{"_index":3041,"title":{},"body":{"index.html":{}}}],["celestial",{"_index":1203,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["celestialbody",{"_index":3067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["center",{"_index":1542,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["centered",{"_index":2690,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["cf",{"_index":823,"title":{},"body":{"components/FormComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["chain",{"_index":981,"title":{},"body":{"injectables/FormService.html":{}}}],["change",{"_index":786,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"modules/LayoutModule.html":{}}}],["changecomponent",{"_index":619,"title":{},"body":{"components/FormComponent.html":{}}}],["changecomponent(componenttemplate",{"_index":644,"title":{},"body":{"components/FormComponent.html":{}}}],["changed",{"_index":774,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{}}}],["changedetection",{"_index":2349,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["changedetectionstrategy",{"_index":2406,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":2350,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["changedetector",{"_index":2363,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["changedetectorref",{"_index":2364,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["changes",{"_index":728,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["changing",{"_index":958,"title":{},"body":{"injectables/FormService.html":{}}}],["characteristics",{"_index":2930,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["characters",{"_index":1973,"title":{},"body":{"components/NavbarComponent.html":{}}}],["check",{"_index":362,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"index.html":{}}}],["checking",{"_index":698,"title":{},"body":{"components/FormComponent.html":{}}}],["checks",{"_index":1311,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["child:after",{"_index":1552,"title":{},"body":{"components/LayoutComponent.html":{}}}],["choice",{"_index":2188,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["choices",{"_index":1018,"title":{},"body":{"injectables/FormService.html":{}}}],["choose",{"_index":433,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{},"components/WelcomeComponent.html":{}}}],["chrome",{"_index":2321,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["circumference",{"_index":125,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["class",{"_index":22,"title":{"classes/Antennas.html":{},"classes/CustomRouteReuseStrategy.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"classes/FormControlWarn.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"classes/MockupLoggerService.html":{}},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{}}}],["classes",{"_index":170,"title":{},"body":{"classes/Antennas.html":{},"classes/CustomRouteReuseStrategy.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"classes/FormControlWarn.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"overview.html":{}}}],["clean",{"_index":489,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["cli",{"_index":3029,"title":{},"body":{"index.html":{}}}],["client",{"_index":423,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["cluster_cardmodule",{"_index":285,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_declarations",{"_index":287,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_exports",{"_index":286,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":863,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declarations",{"_index":864,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_exports",{"_index":866,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_imports",{"_index":867,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_providers",{"_index":865,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_layoutmodule",{"_index":1558,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_declarations",{"_index":1560,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_exports",{"_index":1562,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_imports",{"_index":1559,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_providers",{"_index":1561,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1794,"title":{},"body":{"modules/LoggerModule.html":{}}}],["cluster_loggermodule_providers",{"_index":1795,"title":{},"body":{"modules/LoggerModule.html":{}}}],["cluster_luplinkmodule",{"_index":1856,"title":{},"body":{"modules/LuplinkModule.html":{},"overview.html":{}}}],["cluster_luplinkmodule_imports",{"_index":1857,"title":{},"body":{"modules/LuplinkModule.html":{}}}],["cluster_luplinkmodule_providers",{"_index":1858,"title":{},"body":{"modules/LuplinkModule.html":{},"overview.html":{}}}],["cluster_navbarmodule",{"_index":2031,"title":{},"body":{"modules/NavbarModule.html":{},"overview.html":{}}}],["cluster_navbarmodule_declarations",{"_index":2033,"title":{},"body":{"modules/NavbarModule.html":{},"overview.html":{}}}],["cluster_navbarmodule_exports",{"_index":2032,"title":{},"body":{"modules/NavbarModule.html":{},"overview.html":{}}}],["cluster_navbarmodule_imports",{"_index":2034,"title":{},"body":{"modules/NavbarModule.html":{}}}],["cluster_navigationsidebarmodule",{"_index":2152,"title":{},"body":{"modules/NavigationSidebarModule.html":{},"overview.html":{}}}],["cluster_navigationsidebarmodule_declarations",{"_index":2153,"title":{},"body":{"modules/NavigationSidebarModule.html":{},"overview.html":{}}}],["cluster_navigationsidebarmodule_exports",{"_index":2154,"title":{},"body":{"modules/NavigationSidebarModule.html":{},"overview.html":{}}}],["cluster_resultsidebarmodule",{"_index":2163,"title":{},"body":{"modules/ResultSidebarModule.html":{},"overview.html":{}}}],["cluster_resultsidebarmodule_declarations",{"_index":2165,"title":{},"body":{"modules/ResultSidebarModule.html":{},"overview.html":{}}}],["cluster_resultsidebarmodule_exports",{"_index":2164,"title":{},"body":{"modules/ResultSidebarModule.html":{},"overview.html":{}}}],["cluster_resultsidebarmodule_imports",{"_index":2166,"title":{},"body":{"modules/ResultSidebarModule.html":{},"overview.html":{}}}],["cluster_simpledocumentationmodule",{"_index":2506,"title":{},"body":{"modules/SimpleDocumentationModule.html":{},"overview.html":{}}}],["cluster_simpledocumentationmodule_declarations",{"_index":2509,"title":{},"body":{"modules/SimpleDocumentationModule.html":{},"overview.html":{}}}],["cluster_simpledocumentationmodule_exports",{"_index":2508,"title":{},"body":{"modules/SimpleDocumentationModule.html":{},"overview.html":{}}}],["cluster_simpledocumentationmodule_imports",{"_index":2507,"title":{},"body":{"modules/SimpleDocumentationModule.html":{}}}],["cluster_stepbarmodule",{"_index":2557,"title":{},"body":{"modules/StepbarModule.html":{},"overview.html":{}}}],["cluster_stepbarmodule_declarations",{"_index":2560,"title":{},"body":{"modules/StepbarModule.html":{},"overview.html":{}}}],["cluster_stepbarmodule_exports",{"_index":2558,"title":{},"body":{"modules/StepbarModule.html":{},"overview.html":{}}}],["cluster_stepbarmodule_imports",{"_index":2559,"title":{},"body":{"modules/StepbarModule.html":{}}}],["cluster_synthesismodule",{"_index":2569,"title":{},"body":{"modules/SynthesisModule.html":{},"overview.html":{}}}],["cluster_synthesismodule_declarations",{"_index":2570,"title":{},"body":{"modules/SynthesisModule.html":{},"overview.html":{}}}],["cluster_synthesismodule_exports",{"_index":2572,"title":{},"body":{"modules/SynthesisModule.html":{},"overview.html":{}}}],["cluster_synthesismodule_imports",{"_index":2571,"title":{},"body":{"modules/SynthesisModule.html":{}}}],["cluster_syntheticdrawingmodule",{"_index":2860,"title":{},"body":{"modules/SyntheticDrawingModule.html":{},"overview.html":{}}}],["cluster_syntheticdrawingmodule_declarations",{"_index":2863,"title":{},"body":{"modules/SyntheticDrawingModule.html":{},"overview.html":{}}}],["cluster_syntheticdrawingmodule_exports",{"_index":2861,"title":{},"body":{"modules/SyntheticDrawingModule.html":{},"overview.html":{}}}],["cluster_syntheticdrawingmodule_imports",{"_index":2864,"title":{},"body":{"modules/SyntheticDrawingModule.html":{}}}],["cluster_syntheticdrawingmodule_providers",{"_index":2862,"title":{},"body":{"modules/SyntheticDrawingModule.html":{},"overview.html":{}}}],["cluster_welcomemodule",{"_index":2942,"title":{},"body":{"modules/WelcomeModule.html":{},"overview.html":{}}}],["cluster_welcomemodule_declarations",{"_index":2945,"title":{},"body":{"modules/WelcomeModule.html":{},"overview.html":{}}}],["cluster_welcomemodule_exports",{"_index":2944,"title":{},"body":{"modules/WelcomeModule.html":{},"overview.html":{}}}],["cluster_welcomemodule_imports",{"_index":2943,"title":{},"body":{"modules/WelcomeModule.html":{}}}],["cm",{"_index":112,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/HelperFunctions.html":{}}}],["code",{"_index":442,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"index.html":{}}}],["collapse",{"_index":2103,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["collapsecard",{"_index":193,"title":{},"body":{"components/CardComponent.html":{}}}],["collapsed",{"_index":190,"title":{},"body":{"components/CardComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["collapsedownlink",{"_index":2041,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["collapsesidebar",{"_index":2045,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["collapseuplink",{"_index":2042,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["collapsing",{"_index":2123,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["color",{"_index":230,"title":{},"body":{"components/CardComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["color:#8080802e",{"_index":2116,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["color:white",{"_index":2139,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["column",{"_index":2504,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["comma",{"_index":1739,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["command",{"_index":3051,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":295,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{}}}],["commons",{"_index":2478,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["complete",{"_index":1452,"title":{},"body":{"components/LayoutComponent.html":{},"components/WelcomeComponent.html":{}}}],["complex",{"_index":68,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["component",{"_index":176,"title":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}},"body":{"components/CardComponent.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"index.html":{}}}],["component/form.component",{"_index":872,"title":{},"body":{"modules/FormModule.html":{}}}],["component_template",{"_index":244,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["componentid",{"_index":91,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"interfaces/Template.html":{}}}],["componentname",{"_index":105,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"interfaces/Template.html":{}}}],["components",{"_index":162,"title":{},"body":{"interfaces/AntennaField.html":{},"components/CardComponent.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"index.html":{},"overview.html":{}}}],["components(value",{"_index":2641,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["components.foreach((s",{"_index":1626,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["components/card/card.module",{"_index":1572,"title":{},"body":{"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["components/navigation",{"_index":1578,"title":{},"body":{"modules/LayoutModule.html":{}}}],["components/results/results.component",{"_index":2170,"title":{},"body":{"modules/ResultSidebarModule.html":{}}}],["components/results/results.module",{"_index":1581,"title":{},"body":{"modules/LayoutModule.html":{}}}],["components/sidebar/result",{"_index":2169,"title":{},"body":{"modules/ResultSidebarModule.html":{}}}],["components/simple",{"_index":1574,"title":{},"body":{"modules/LayoutModule.html":{}}}],["components/stepbar/stepbar.module",{"_index":1577,"title":{},"body":{"modules/LayoutModule.html":{}}}],["componenttemplate",{"_index":646,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{}}}],["componenttemplate.componentid",{"_index":795,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{}}}],["componenttemplate.image",{"_index":797,"title":{},"body":{"components/FormComponent.html":{}}}],["componenttemplate.params.foreach((element",{"_index":983,"title":{},"body":{"injectables/FormService.html":{}}}],["componenttemplate.parentcomponent",{"_index":794,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{}}}],["componenttype",{"_index":90,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{}}}],["componenttype:'path",{"_index":1046,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["componenttype:string",{"_index":157,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["composed",{"_index":1020,"title":{},"body":{"injectables/FormService.html":{}}}],["compromise",{"_index":1009,"title":{},"body":{"injectables/FormService.html":{}}}],["computation",{"_index":54,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["compute",{"_index":1164,"title":{},"body":{"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"classes/LinkBudgetScenario.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["compute(link",{"_index":1656,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["computebeamwidth",{"_index":44,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["computefn",{"_index":161,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["computegain",{"_index":39,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["computelayout",{"_index":308,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["computelinkbudget",{"_index":312,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/FormService.html":{},"components/NavbarComponent.html":{},"components/ResultSidebarComponent.html":{}}}],["computelinkbudget(datain",{"_index":324,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["computelinkbudgetservice",{"_index":303,"title":{"injectables/ComputeLinkBudgetService.html":{}},"body":{"injectables/ComputeLinkBudgetService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/ResultSidebarComponent.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{},"overview.html":{}}}],["computes",{"_index":1223,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["concatenation",{"_index":925,"title":{},"body":{"injectables/FormService.html":{}}}],["config",{"_index":1860,"title":{},"body":{"modules/LuplinkModule.html":{},"injectables/SaveLoadService.html":{}}}],["config.defaultform",{"_index":1851,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["config.environment",{"_index":1852,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["config.isstandalone",{"_index":1853,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["configdata",{"_index":2328,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["configdata.metadata.title}.json",{"_index":2341,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["configuration",{"_index":2185,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["configurl",{"_index":2330,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["connector",{"_index":1123,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["consider",{"_index":2503,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["considering",{"_index":2189,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["consistent",{"_index":414,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["console.debug(`altitude",{"_index":1233,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["console.debug(entry.buildlogstring",{"_index":1789,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["console.error('warning",{"_index":1231,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["console.error(entry.buildlogstring",{"_index":1788,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["console.log('form",{"_index":1377,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["console.log('import",{"_index":959,"title":{},"body":{"injectables/FormService.html":{},"components/WelcomeComponent.html":{}}}],["console.log('refreshing",{"_index":1381,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["console.log('save",{"_index":1382,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["console.log(`attach",{"_index":486,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["console.log(`detach",{"_index":480,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["console.log(`reuse",{"_index":491,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["console.log(config",{"_index":1849,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["console.log(ecc",{"_index":1255,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["console.log(entry.buildlogstring",{"_index":1790,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["console.log(environment",{"_index":2073,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["console.log(gains.keys",{"_index":1637,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["console.log(helperfunctions.converttletokeplearian(satellite.line1",{"_index":2257,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["console.log(obs.geometry",{"_index":2442,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["console.log(obs.getrawvalue().geometry",{"_index":2441,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["console.log(results",{"_index":2233,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["console.log(results.data",{"_index":960,"title":{},"body":{"injectables/FormService.html":{}}}],["console.log(satellites",{"_index":2256,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["console.log(this.formservice.globalform.value",{"_index":2281,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["console.log(this.jsodata",{"_index":2908,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["console.log(this.step",{"_index":723,"title":{},"body":{"components/FormComponent.html":{}}}],["console.log(tle1",{"_index":1251,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["console.log(tle2.split",{"_index":1252,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["console.log(tle2.substring(52",{"_index":1264,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["console.log(typeof",{"_index":1763,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["console.warn('unknown",{"_index":2454,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["console.warn('yagi",{"_index":69,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["console.warn(entry.buildlogstring",{"_index":1787,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["const",{"_index":46,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["constellations",{"_index":3109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["constrained",{"_index":1017,"title":{},"body":{"injectables/FormService.html":{}}}],["constructed",{"_index":705,"title":{},"body":{"components/FormComponent.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LinkBudgetScenario.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{}}}],["constructor(@inject(environment_token",{"_index":2072,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"components/WelcomeComponent.html":{}}}],["constructor(computelinkbudget",{"_index":2158,"title":{},"body":{"components/ResultSidebarComponent.html":{}}}],["constructor(drawingservice",{"_index":2592,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["constructor(environment",{"_index":318,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["constructor(formbuilder",{"_index":2769,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["constructor(formservice",{"_index":632,"title":{},"body":{"components/FormComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/SimpleDocumentationComponent.html":{}}}],["constructor(linkservice",{"_index":1279,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["constructor(power",{"_index":1601,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["constructor(private",{"_index":34,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/FormComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["constructor(public",{"_index":2161,"title":{},"body":{"components/ResultSidebarComponent.html":{}}}],["constructor(template",{"_index":888,"title":{},"body":{"injectables/FormService.html":{}}}],["constructor(toastr",{"_index":1811,"title":{},"body":{"injectables/LoggerService.html":{}}}],["contact",{"_index":2099,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["contain",{"_index":2298,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["container",{"_index":1515,"title":{},"body":{"components/LayoutComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["containing",{"_index":2283,"title":{},"body":{"injectables/SaveLoadService.html":{},"index.html":{}}}],["contains",{"_index":924,"title":{},"body":{"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"index.html":{}}}],["content",{"_index":1534,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":400,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["continue",{"_index":2551,"title":{},"body":{"components/StepbarComponent.html":{}}}],["control",{"_index":523,"title":{},"body":{"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["control).warnings",{"_index":524,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["control.errors",{"_index":530,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["control.get('unit",{"_index":537,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["control.get('value",{"_index":535,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["control.get('value')?.errors?.pattern",{"_index":833,"title":{},"body":{"components/FormComponent.html":{}}}],["control.get('value')?.value",{"_index":525,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["control.warnings",{"_index":828,"title":{},"body":{"components/FormComponent.html":{}}}],["controloptions",{"_index":2786,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["controls",{"_index":2074,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["conversion",{"_index":711,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"components/SyntheticDrawingComponent.html":{}}}],["convert",{"_index":760,"title":{},"body":{"components/FormComponent.html":{},"injectables/SaveLoadService.html":{}}}],["convertangle(value",{"_index":1222,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["convertdistance",{"_index":1191,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["convertdistance(value",{"_index":1208,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["converted",{"_index":1262,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["converts",{"_index":2247,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["converttletokeplearian",{"_index":1192,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["converttletokeplearian(tle1",{"_index":1210,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["copy",{"_index":2408,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["core",{"_index":2995,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":483,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"classes/FormsTemplate.html":{}}}],["corresponding",{"_index":703,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"injectables/SaveLoadService.html":{}}}],["cos^2{\\\\delta",{"_index":2386,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["cos{2\\\\delta",{"_index":2414,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["counter",{"_index":1519,"title":{},"body":{"components/LayoutComponent.html":{}}}],["counter(step",{"_index":1535,"title":{},"body":{"components/LayoutComponent.html":{}}}],["coverage",{"_index":2948,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crash",{"_index":2914,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["create",{"_index":701,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{}}}],["created",{"_index":1373,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["createformgroup",{"_index":881,"title":{},"body":{"injectables/FormService.html":{}}}],["createformgroup(componenttemplate",{"_index":893,"title":{},"body":{"injectables/FormService.html":{}}}],["creativebulma/bulma",{"_index":2990,"title":{},"body":{"dependencies.html":{}}}],["cross",{"_index":1054,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["curr",{"_index":474,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["curr.data.noreuse",{"_index":496,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["curr.routeconfig",{"_index":495,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["curr.url",{"_index":492,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["current",{"_index":1986,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{}}}],["currentantenna",{"_index":1390,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currentcomponent",{"_index":2047,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["currentcomponenttemplate",{"_index":1465,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currentcomponenttemplate.antenna",{"_index":1474,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currentcomponenttemplate.atm",{"_index":1478,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currentcomponenttemplate.form",{"_index":1471,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currentcomponenttemplate.name",{"_index":1469,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currentcomponenttemplate.step",{"_index":1468,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currentformvalidity",{"_index":722,"title":{},"body":{"components/FormComponent.html":{}}}],["currently",{"_index":1371,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["currentscenario",{"_index":2762,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["currentstep",{"_index":1391,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currenttemplate",{"_index":1392,"title":{},"body":{"components/LayoutComponent.html":{}}}],["custom",{"_index":445,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["customroutereusestrategy",{"_index":447,"title":{"classes/CustomRouteReuseStrategy.html":{}},"body":{"classes/CustomRouteReuseStrategy.html":{},"modules/LayoutModule.html":{},"coverage.html":{}}}],["customvalidators",{"_index":497,"title":{"injectables/CustomValidators.html":{}},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/WarnFn.html":{},"coverage.html":{}}}],["d",{"_index":2662,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["d.name",{"_index":2661,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["d.position",{"_index":2663,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["d.x",{"_index":2739,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["d3",{"_index":2405,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"dependencies.html":{}}}],["d3.extent(points",{"_index":2707,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["d3.scalelinear().range([0",{"_index":2675,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["d3.select('#sr').select('svg",{"_index":2416,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["d:any",{"_index":2747,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["danger",{"_index":228,"title":{},"body":{"components/CardComponent.html":{}}}],["darkslategray",{"_index":233,"title":{},"body":{"components/CardComponent.html":{}}}],["dasharray",{"_index":2743,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["data",{"_index":64,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["data(labels",{"_index":2659,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["data(points",{"_index":2735,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["data:application/json;charset=utf",{"_index":2331,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["datain",{"_index":327,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["datainput",{"_index":685,"title":{},"body":{"components/FormComponent.html":{}}}],["date",{"_index":1708,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"injectables/SaveLoadService.html":{}}}],["date.now",{"_index":2306,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["datum(points",{"_index":2719,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["db",{"_index":1051,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["dbi",{"_index":97,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["dbm",{"_index":1116,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["dbw",{"_index":1114,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["debug",{"_index":386,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/enumerations.html":{}}}],["debug(msg",{"_index":1752,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["debugging",{"_index":1747,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["debugmode",{"_index":1892,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["decimals",{"_index":1229,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["declarations",{"_index":292,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{}}}],["decoration",{"_index":2105,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["decorators",{"_index":1948,"title":{},"body":{"components/NavbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/WelcomeComponent.html":{}}}],["default",{"_index":99,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockFormService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["defaultcomponents",{"_index":559,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["defaultform",{"_index":1829,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["defaultgains",{"_index":560,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["defaultlbscenario",{"_index":2802,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["defaultlbscenario.compute",{"_index":2812,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["defaultlbscenario.editgains(formvalues",{"_index":2817,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["defaultlbscenario.randomize",{"_index":2804,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["defaultlbscenario.setpowerin",{"_index":2813,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["defaultlbscenario:linkbudgetscenario",{"_index":2632,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["define",{"_index":2465,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["defined",{"_index":172,"title":{},"body":{"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"modules/LuplinkModule.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["defining",{"_index":2229,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["degrees",{"_index":1226,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["delay",{"_index":388,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["delimited",{"_index":1740,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["delivered",{"_index":2484,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["delta",{"_index":1225,"title":{},"body":{"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{}}}],["depend",{"_index":2469,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["dependencies",{"_index":284,"title":{"dependencies.html":{}},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1492,"title":{},"body":{"components/LayoutComponent.html":{}}}],["depending",{"_index":1661,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/StepbarComponent.html":{}}}],["depends",{"_index":2318,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["depointing",{"_index":1050,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["depointing_loss",{"_index":1049,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["depointingangle",{"_index":1088,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["depth",{"_index":945,"title":{},"body":{"injectables/FormService.html":{}}}],["desc",{"_index":94,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{}}}],["desc:'value",{"_index":1171,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["description",{"_index":449,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["destructuring",{"_index":838,"title":{},"body":{"components/FormComponent.html":{}}}],["detachedroutehandle",{"_index":468,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["determine",{"_index":2482,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["determines",{"_index":2543,"title":{},"body":{"components/StepbarComponent.html":{}}}],["developer",{"_index":1749,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{}}}],["development",{"_index":3028,"title":{},"body":{"index.html":{}}}],["developper",{"_index":439,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["diagram",{"_index":2008,"title":{},"body":{"components/NavbarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["different",{"_index":1609,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{}}}],["dimension",{"_index":113,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["dimension:\"angle",{"_index":103,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["dimension:\"iso_gain",{"_index":98,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["dimension:\"length",{"_index":1132,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["directive",{"_index":242,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["directives",{"_index":279,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":3032,"title":{},"body":{"index.html":{}}}],["directly",{"_index":3115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["directory",{"_index":3037,"title":{},"body":{"index.html":{}}}],["disable",{"_index":411,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{}}}],["disabled",{"_index":222,"title":{},"body":{"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["disables",{"_index":1961,"title":{},"body":{"components/NavbarComponent.html":{}}}],["discontinuity",{"_index":1672,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["discontinuitypoint",{"_index":1669,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["discontinuitypoint.x",{"_index":1674,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["discontinuitypoint.y",{"_index":1675,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["display",{"_index":88,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{}}}],["display/synthetic",{"_index":2575,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"modules/SyntheticDrawingModule.html":{},"coverage.html":{}}}],["display:inline",{"_index":847,"title":{},"body":{"components/FormComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["displayed",{"_index":136,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{}}}],["displayedimage",{"_index":609,"title":{},"body":{"components/FormComponent.html":{}}}],["displayfooter",{"_index":309,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["displaygraph",{"_index":2589,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["displaying",{"_index":430,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["displayingresults",{"_index":310,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["dist",{"_index":3036,"title":{},"body":{"index.html":{}}}],["dist/ngx",{"_index":3042,"title":{},"body":{"index.html":{}}}],["distance",{"_index":1187,"title":{},"body":{"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{}}}],["distracting",{"_index":1007,"title":{},"body":{"injectables/FormService.html":{}}}],["div",{"_index":2679,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["dl_atmosphere",{"_index":1031,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["dl_carrier",{"_index":1032,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["dl_gs_rx_antenna",{"_index":1033,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["dl_receiver_gs",{"_index":1034,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["dl_sc_tx_antenna",{"_index":1035,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["dl_transmitter_sc",{"_index":1036,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["dlcarrier",{"_index":1427,"title":{},"body":{"components/LayoutComponent.html":{}}}],["dlreceiver",{"_index":1429,"title":{},"body":{"components/LayoutComponent.html":{}}}],["dltransmitter",{"_index":1428,"title":{},"body":{"components/LayoutComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["document.createelement('a",{"_index":2336,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["documentation",{"_index":2351,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"coverage.html":{}}}],["documentation'},{'name",{"_index":265,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["documentation.component",{"_index":2513,"title":{},"body":{"modules/SimpleDocumentationModule.html":{}}}],["documentation.component.html",{"_index":2353,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.scss",{"_index":2352,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts",{"_index":2347,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"coverage.html":{}}}],["documentation.component.ts:15",{"_index":2366,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:16",{"_index":2379,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:17",{"_index":2377,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:18",{"_index":2395,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:19",{"_index":2396,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:20",{"_index":2376,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:21",{"_index":2394,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:33",{"_index":2404,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:35",{"_index":2365,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:38",{"_index":2378,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:47",{"_index":2398,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:48",{"_index":2375,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:49",{"_index":2374,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:50",{"_index":2397,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:52",{"_index":2367,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:76",{"_index":2370,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:82",{"_index":2371,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:89",{"_index":2369,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:99",{"_index":2373,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts::getformdata",{"_index":2455,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.module",{"_index":1576,"title":{},"body":{"modules/LayoutModule.html":{}}}],["documentation.module.ts",{"_index":2510,"title":{},"body":{"modules/SimpleDocumentationModule.html":{}}}],["documentation/simple",{"_index":1575,"title":{},"body":{"modules/LayoutModule.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"coverage.html":{}}}],["doesn't",{"_index":825,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{}}}],["doing",{"_index":714,"title":{},"body":{"components/FormComponent.html":{}}}],["dom",{"_index":179,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["domain",{"_index":2703,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["don't",{"_index":2193,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"index.html":{}}}],["down",{"_index":2705,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["downlink",{"_index":1048,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["draw",{"_index":2445,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["drawgeometry",{"_index":2360,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["drawing",{"_index":274,"title":{},"body":{"components/CardComponent.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{}}}],["drawing'},{'name",{"_index":272,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["drawing.component",{"_index":2867,"title":{},"body":{"modules/SyntheticDrawingModule.html":{}}}],["drawing.component.html",{"_index":2578,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.scss",{"_index":2577,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts",{"_index":2576,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"coverage.html":{}}}],["drawing.component.ts:138",{"_index":2604,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:14",{"_index":2616,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:15",{"_index":2621,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:16",{"_index":2619,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:24",{"_index":2622,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:25",{"_index":2623,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:27",{"_index":2614,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:28",{"_index":2615,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:30",{"_index":2612,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:31",{"_index":2618,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:32",{"_index":2617,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:33",{"_index":2620,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:39",{"_index":2598,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:40",{"_index":2600,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:41",{"_index":2597,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:44",{"_index":2599,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:47",{"_index":2626,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:51",{"_index":2611,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:53",{"_index":2596,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:56",{"_index":2629,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:60",{"_index":2594,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:64",{"_index":2609,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:71",{"_index":2602,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:86",{"_index":2607,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:98",{"_index":2601,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.module",{"_index":2172,"title":{},"body":{"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["drawing.module.ts",{"_index":2865,"title":{},"body":{"modules/SyntheticDrawingModule.html":{}}}],["drawing/models/default.ts",{"_index":558,"title":{},"body":{"classes/DrawingDefault.html":{},"coverage.html":{}}}],["drawing/models/default.ts:13",{"_index":591,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawing/models/default.ts:5",{"_index":597,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawing/models/default.ts:6",{"_index":596,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawing/synthetic",{"_index":2171,"title":{},"body":{"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"coverage.html":{}}}],["drawingdefault",{"_index":556,"title":{"classes/DrawingDefault.html":{}},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"coverage.html":{}}}],["drawingdefault.defaultcomponents",{"_index":2610,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["drawingdefault.defaultgains.antrx",{"_index":582,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawingdefault.defaultgains.anttx",{"_index":573,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawingdefault.defaultgains.cablerx",{"_index":586,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawingdefault.defaultgains.cabletx",{"_index":570,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawingdefault.defaultgains.fsl",{"_index":577,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawingdefault.powerin",{"_index":2789,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["drawingform",{"_index":2763,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["drawingformservice",{"_index":2839,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["drawingformsub",{"_index":2764,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["drawingservice",{"_index":2595,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["drawingservice:syntheticdrawingformservice",{"_index":2784,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["drawn",{"_index":2444,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["dropdown",{"_index":2019,"title":{},"body":{"components/NavbarComponent.html":{}}}],["due",{"_index":2471,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["dummy",{"_index":2925,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["duration(1000",{"_index":2721,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["dynamic",{"_index":2989,"title":{},"body":{"dependencies.html":{}}}],["dynamics",{"_index":1204,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["e.g",{"_index":142,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"injectables/JSatOrbLinkService.html":{},"interfaces/Template.html":{}}}],["each",{"_index":1446,"title":{},"body":{"components/LayoutComponent.html":{},"modules/LayoutModule.html":{}}}],["earth",{"_index":2390,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"miscellaneous/variables.html":{}}}],["earth's",{"_index":2393,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["earthmu",{"_index":1188,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["earthradius",{"_index":1189,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["ease",{"_index":2134,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["easily",{"_index":927,"title":{},"body":{"injectables/FormService.html":{}}}],["eb/n0",{"_index":1076,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ebno_threshold",{"_index":1075,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ecc",{"_index":1214,"title":{},"body":{"classes/HelperFunctions.html":{},"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["ececec",{"_index":2107,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["edit",{"_index":1632,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["edited",{"_index":756,"title":{},"body":{"components/FormComponent.html":{}}}],["editgain",{"_index":1682,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["editgain(id",{"_index":1629,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["editgains",{"_index":1683,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["editgains(gains",{"_index":1631,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["edittitle",{"_index":1919,"title":{},"body":{"components/NavbarComponent.html":{}}}],["eg",{"_index":953,"title":{},"body":{"injectables/FormService.html":{},"classes/FormsTemplate.html":{}}}],["eirp",{"_index":2355,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["element",{"_index":241,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"miscellaneous/typealiases.html":{}}}],["element.alternative",{"_index":1024,"title":{},"body":{"injectables/FormService.html":{}}}],["element.type",{"_index":1022,"title":{},"body":{"injectables/FormService.html":{}}}],["element.units.length",{"_index":1014,"title":{},"body":{"injectables/FormService.html":{}}}],["elementref",{"_index":1947,"title":{},"body":{"components/NavbarComponent.html":{}}}],["elements",{"_index":115,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["elev",{"_index":780,"title":{},"body":{"components/FormComponent.html":{}}}],["elevation",{"_index":696,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["elevation.unit",{"_index":763,"title":{},"body":{"components/FormComponent.html":{}}}],["elevation.value",{"_index":762,"title":{},"body":{"components/FormComponent.html":{}}}],["elsewhere",{"_index":1443,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{}}}],["emit",{"_index":734,"title":{},"body":{"components/FormComponent.html":{}}}],["emitevent",{"_index":742,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{}}}],["empty",{"_index":166,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"components/JSatOrbLinkComponent.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{}}}],["emptyform",{"_index":163,"title":{"classes/EmptyForm.html":{}},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["enable",{"_index":2011,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enabled",{"_index":1982,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enablenanospace",{"_index":1893,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1750,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{}}}],["endpoint",{"_index":1367,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"miscellaneous/variables.html":{}}}],["enough",{"_index":852,"title":{},"body":{"components/FormComponent.html":{},"injectables/SaveLoadService.html":{}}}],["enter",{"_index":529,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"components/SyntheticDrawingComponent.html":{},"interfaces/WarnFn.html":{}}}],["entered",{"_index":377,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["entry",{"_index":1766,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["entry.extrainfo",{"_index":1785,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["entry.level",{"_index":1784,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["entry.logwithdate",{"_index":1786,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["entry.message",{"_index":1782,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["entrydate",{"_index":1703,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["enum",{"_index":1722,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["enumerations",{"_index":3018,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env",{"_index":1363,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["environment",{"_index":323,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["environment_token",{"_index":355,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["equator",{"_index":1219,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["equivalent",{"_index":2269,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["err",{"_index":2006,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["errlist",{"_index":554,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["erroneoussection",{"_index":877,"title":{},"body":{"injectables/FormService.html":{}}}],["error",{"_index":336,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"injectables/SaveLoadService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('cannot",{"_index":2218,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["error(msg",{"_index":1761,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["error.error",{"_index":421,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["error.error.stack",{"_index":429,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["error.message",{"_index":428,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["error:any",{"_index":2910,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["errorhandler",{"_index":446,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["errors",{"_index":419,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/WarnFn.html":{}}}],["errors.error",{"_index":840,"title":{},"body":{"components/FormComponent.html":{}}}],["eslint",{"_index":410,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{}}}],["eslint/no",{"_index":2437,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["even",{"_index":971,"title":{},"body":{"injectables/FormService.html":{}}}],["evenly",{"_index":2150,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["event",{"_index":736,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{}}}],["event.id",{"_index":1483,"title":{},"body":{"components/LayoutComponent.html":{}}}],["event.preventdefault",{"_index":1989,"title":{},"body":{"components/NavbarComponent.html":{}}}],["event.returnvalue",{"_index":1992,"title":{},"body":{"components/NavbarComponent.html":{}}}],["event.validity",{"_index":1485,"title":{},"body":{"components/LayoutComponent.html":{}}}],["eventemitter",{"_index":638,"title":{},"body":{"components/FormComponent.html":{}}}],["everything",{"_index":912,"title":{},"body":{"injectables/FormService.html":{},"components/NavbarComponent.html":{}}}],["ex",{"_index":1495,"title":{},"body":{"components/LayoutComponent.html":{}}}],["exactly",{"_index":2836,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["excentricity",{"_index":2935,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["excluded",{"_index":1646,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["excluded.includes(id",{"_index":1648,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["excluded.includes(key",{"_index":2808,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["execute",{"_index":3046,"title":{},"body":{"index.html":{}}}],["execution",{"_index":1978,"title":{},"body":{"components/NavbarComponent.html":{}}}],["exist",{"_index":56,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"miscellaneous/variables.html":{}}}],["existed",{"_index":820,"title":{},"body":{"components/FormComponent.html":{}}}],["existing",{"_index":1315,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["exists",{"_index":812,"title":{},"body":{"components/FormComponent.html":{},"injectables/JSatOrbLinkService.html":{}}}],["expects",{"_index":2704,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["experiments",{"_index":2081,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["explained",{"_index":2730,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["export",{"_index":21,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{}}}],["exportconfigfile",{"_index":2177,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["exportconfigfile(data",{"_index":2195,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["exports",{"_index":293,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"modules/WelcomeModule.html":{}}}],["expressions",{"_index":2438,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["extends",{"_index":8,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{}}}],["extra",{"_index":1732,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["extracted",{"_index":2267,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["extrainfo",{"_index":1704,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["faangledown",{"_index":191,"title":{},"body":{"components/CardComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["faangleleft",{"_index":1934,"title":{},"body":{"components/NavbarComponent.html":{}}}],["facheck",{"_index":2520,"title":{},"body":{"components/StepbarComponent.html":{}}}],["factor",{"_index":1234,"title":{},"body":{"classes/HelperFunctions.html":{},"components/SyntheticDrawingComponent.html":{}}}],["faenvelope",{"_index":2056,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["faexclamation",{"_index":2521,"title":{},"body":{"components/StepbarComponent.html":{}}}],["fainterrogation",{"_index":610,"title":{},"body":{"components/FormComponent.html":{}}}],["false",{"_index":32,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/variables.html":{}}}],["fapencilalt",{"_index":1943,"title":{},"body":{"components/NavbarComponent.html":{}}}],["faquestioncircle",{"_index":657,"title":{},"body":{"components/FormComponent.html":{}}}],["far",{"_index":2190,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["faster",{"_index":1590,"title":{},"body":{"modules/LayoutModule.html":{}}}],["fatal",{"_index":1725,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["fatal(msg",{"_index":1768,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["fb",{"_index":889,"title":{},"body":{"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"injectables/SaveLoadService.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{}}}],["fb:formbuilder",{"_index":2900,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["fbfbfb",{"_index":2119,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["feed",{"_index":2230,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["fetch",{"_index":2409,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["fff",{"_index":2024,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ffffff",{"_index":2725,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["fg",{"_index":975,"title":{},"body":{"injectables/FormService.html":{}}}],["field",{"_index":19,"title":{"interfaces/Field.html":{}},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["field.ts",{"_index":499,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{},"coverage.html":{}}}],["field.ts:16",{"_index":504,"title":{},"body":{"injectables/CustomValidators.html":{}}}],["field.ts:19",{"_index":507,"title":{},"body":{"injectables/CustomValidators.html":{}}}],["field.ts:25",{"_index":508,"title":{},"body":{"injectables/CustomValidators.html":{}}}],["field.ts:34",{"_index":509,"title":{},"body":{"injectables/CustomValidators.html":{}}}],["field.ts:49",{"_index":506,"title":{},"body":{"injectables/CustomValidators.html":{}}}],["field.ts:8",{"_index":861,"title":{},"body":{"classes/FormControlWarn.html":{}}}],["fields",{"_index":749,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{}}}],["fields.ts",{"_index":831,"title":{},"body":{"components/FormComponent.html":{}}}],["fieldvalidator",{"_index":500,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["figure",{"_index":1165,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["file:luplink",{"_index":2999,"title":{},"body":{"dependencies.html":{}}}],["filelist",{"_index":1926,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":1957,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"dependencies.html":{}}}],["filereader",{"_index":2219,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["filereader.onabort",{"_index":2222,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["filereader.onerror",{"_index":2220,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["filereader.onload",{"_index":2223,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["filereader.onloadend",{"_index":2225,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["filereader.readastext(file",{"_index":2227,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":1928,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["files.item(0",{"_index":2213,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["fill",{"_index":2752,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["filter",{"_index":2480,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["fine",{"_index":1972,"title":{},"body":{"components/NavbarComponent.html":{}}}],["finished",{"_index":70,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["firefox",{"_index":2323,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["first",{"_index":148,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"interfaces/Template.html":{}}}],["fixed",{"_index":2110,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["fixme",{"_index":1441,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{}}}],["flex",{"_index":848,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["float",{"_index":1522,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["float:left",{"_index":2755,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["float:right",{"_index":2758,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["folder",{"_index":3040,"title":{},"body":{"index.html":{}}}],["following",{"_index":753,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["font",{"_index":1524,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["fontawesome",{"_index":299,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":297,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["footer",{"_index":341,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["for(let",{"_index":555,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["forget",{"_index":2782,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{},"index.html":{}}}],["form",{"_index":9,"title":{"interfaces/Form.html":{}},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{},"coverage.html":{}}}],["form'},{'name",{"_index":248,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["form.component",{"_index":2866,"title":{},"body":{"modules/SyntheticDrawingModule.html":{}}}],["form.component.html",{"_index":607,"title":{},"body":{"components/FormComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.scss",{"_index":606,"title":{},"body":{"components/FormComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts",{"_index":2760,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:17",{"_index":2776,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:18",{"_index":2775,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:19",{"_index":2777,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:20",{"_index":2778,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:22",{"_index":2770,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:33",{"_index":2772,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:43",{"_index":2771,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:48",{"_index":2774,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:65",{"_index":2773,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.model",{"_index":20,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["form.service",{"_index":678,"title":{},"body":{"components/FormComponent.html":{},"modules/FormModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/SyntheticDrawingModule.html":{}}}],["form.service.ts",{"_index":2822,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{},"coverage.html":{}}}],["form.service.ts:18",{"_index":2833,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["form.service.ts:19",{"_index":2835,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["form.service.ts:21",{"_index":2832,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["form.service.ts:22",{"_index":2824,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["form.service.ts:40",{"_index":2831,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["form.service.ts:45",{"_index":2828,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["form.service.ts:49",{"_index":2826,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["form/form.module",{"_index":1573,"title":{},"body":{"modules/LayoutModule.html":{},"modules/WelcomeModule.html":{}}}],["form/form.service",{"_index":354,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{}}}],["form/synthetic",{"_index":2759,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{},"modules/SyntheticDrawingModule.html":{},"coverage.html":{}}}],["form_template_token",{"_index":923,"title":{},"body":{"injectables/FormService.html":{},"components/LayoutComponent.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formatjsodata",{"_index":2178,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["formatjsodata(satellites",{"_index":2197,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["formatparams",{"_index":1707,"title":{},"body":{"classes/LogEntry.html":{}}}],["formatparams(params",{"_index":1717,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["formbuilder",{"_index":673,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{}}}],["formbuilder().group",{"_index":1877,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["formcomponent",{"_index":247,"title":{"components/FormComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"modules/FormModule.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formcontrol",{"_index":511,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{}}}],["formcontrol(element.units[0",{"_index":1016,"title":{},"body":{"injectables/FormService.html":{}}}],["formcontrols",{"_index":986,"title":{},"body":{"injectables/FormService.html":{}}}],["formcontrolwarn",{"_index":520,"title":{"classes/FormControlWarn.html":{}},"body":{"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/WarnFn.html":{},"coverage.html":{}}}],["formcontrolwarn(element.default",{"_index":989,"title":{},"body":{"injectables/FormService.html":{}}}],["formfragments",{"_index":1490,"title":{},"body":{"components/LayoutComponent.html":{}}}],["formgroup",{"_index":662,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{}}}],["formgroup.formvalues",{"_index":1635,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["formmodule",{"_index":862,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/WelcomeModule.html":{},"modules.html":{},"overview.html":{}}}],["forms",{"_index":518,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/StepbarComponent.html":{},"interfaces/WarnFn.html":{}}}],["formsdata",{"_index":1182,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["formservice",{"_index":320,"title":{"injectables/FormService.html":{}},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"overview.html":{}}}],["formservice.globalform.value",{"_index":1511,"title":{},"body":{"components/LayoutComponent.html":{}}}],["formslabel",{"_index":1181,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["formsmodule",{"_index":1830,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["formstatus",{"_index":630,"title":{},"body":{"components/FormComponent.html":{}}}],["formstemplate",{"_index":611,"title":{"classes/FormsTemplate.html":{}},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"coverage.html":{}}}],["formstemplate.dl_atmosphere",{"_index":1150,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.dl_carrier",{"_index":1151,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.dl_gs_rx_antenna",{"_index":1152,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.dl_receiver_gs",{"_index":1153,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.dl_sc_tx_antenna",{"_index":1149,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.dl_transmitter_sc",{"_index":1148,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.geometry",{"_index":1141,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.ul_atmosphere",{"_index":1145,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.ul_carrier",{"_index":1144,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.ul_gs_tx_antenna",{"_index":1143,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.ul_receiver_sc",{"_index":1147,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.ul_sc_rx_antenna",{"_index":1146,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.ul_transmitter_gs",{"_index":1142,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formtemplate",{"_index":625,"title":{},"body":{"components/FormComponent.html":{}}}],["formtemplate(value",{"_index":681,"title":{},"body":{"components/FormComponent.html":{}}}],["formula",{"_index":2384,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["formulas",{"_index":2356,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["formvalidity",{"_index":1393,"title":{},"body":{"components/LayoutComponent.html":{}}}],["formvalues",{"_index":2815,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["forroot",{"_index":1797,"title":{},"body":{"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["forroot(config",{"_index":1848,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["fortawesome/angular",{"_index":298,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":2994,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":208,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/StepbarComponent.html":{},"dependencies.html":{}}}],["found",{"_index":985,"title":{},"body":{"injectables/FormService.html":{}}}],["frac{t_2}{g_1",{"_index":2402,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["frac{t_3}{g_1g_2",{"_index":2403,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["free",{"_index":2466,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["freq",{"_index":1068,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["frequency",{"_index":1064,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["friis",{"_index":2500,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["fsl",{"_index":575,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["fspl",{"_index":2467,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["full",{"_index":2010,"title":{},"body":{"components/NavbarComponent.html":{}}}],["function",{"_index":49,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"miscellaneous/variables.html":{}}}],["functionnalities",{"_index":3114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["functions",{"_index":676,"title":{},"body":{"components/FormComponent.html":{},"classes/HelperFunctions.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["functions.ts",{"_index":1186,"title":{},"body":{"classes/HelperFunctions.html":{},"coverage.html":{}}}],["functions.ts:15",{"_index":1209,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["functions.ts:21",{"_index":1218,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["functions.ts:40",{"_index":1207,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["functions.ts:49",{"_index":1212,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["functions.ts:6",{"_index":1201,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["functions.ts:7",{"_index":1199,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["functions.ts:8",{"_index":1197,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["further",{"_index":3048,"title":{},"body":{"index.html":{}}}],["future",{"_index":476,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["future.routeconfig",{"_index":494,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["future.url",{"_index":493,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["g/t",{"_index":2501,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["gain",{"_index":27,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["gaincalculation",{"_index":14,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["gains",{"_index":1633,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["gains[key",{"_index":1640,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["gases",{"_index":1058,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["gateau",{"_index":2102,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["gathers",{"_index":829,"title":{},"body":{"components/FormComponent.html":{}}}],["generalized",{"_index":748,"title":{},"body":{"components/FormComponent.html":{}}}],["generate",{"_index":803,"title":{},"body":{"components/FormComponent.html":{},"index.html":{}}}],["generateconfig",{"_index":2179,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["generateconfig(data",{"_index":2199,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["generated",{"_index":2290,"title":{},"body":{"injectables/SaveLoadService.html":{},"index.html":{}}}],["generates",{"_index":969,"title":{},"body":{"injectables/FormService.html":{}}}],["genericantenna",{"_index":86,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["geo",{"_index":1875,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/ToastrTestingModule.html":{}}}],["geo.altitude.unit",{"_index":2461,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["geo.elevation.unit",{"_index":2459,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["geo.slantrange.unit",{"_index":2463,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["geometry",{"_index":691,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["geometry.altitude.value",{"_index":2271,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["geometry.elevation.value",{"_index":2274,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["geometry.slantrange.value",{"_index":2276,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["geometrysubscribe",{"_index":620,"title":{},"body":{"components/FormComponent.html":{}}}],["getcomponents",{"_index":2627,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["getcomponentvalues",{"_index":882,"title":{},"body":{"injectables/FormService.html":{}}}],["getcomponentvalues(componentid",{"_index":895,"title":{},"body":{"injectables/FormService.html":{}}}],["geterrormessage",{"_index":621,"title":{},"body":{"components/FormComponent.html":{}}}],["geterrormessage(control",{"_index":648,"title":{},"body":{"components/FormComponent.html":{}}}],["geterrormessage(this.localform.get(field.id)).error",{"_index":843,"title":{},"body":{"components/FormComponent.html":{}}}],["getformdata",{"_index":883,"title":{},"body":{"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/ToastrTestingModule.html":{}}}],["getformdata(component",{"_index":2368,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["getformtemplate",{"_index":670,"title":{},"body":{"components/FormComponent.html":{}}}],["getisinitialized",{"_index":918,"title":{},"body":{"injectables/FormService.html":{}}}],["getisnanospaceenabled",{"_index":1951,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getjsodata",{"_index":1305,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{}}}],["getlabels",{"_index":1608,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["getlbscenario",{"_index":2823,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["getlbscenario$(id",{"_index":2827,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["getlbscenario(id",{"_index":2825,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["getpoints",{"_index":1643,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["getpowerin",{"_index":2624,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["getpowerout",{"_index":1606,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["getresult",{"_index":313,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["getstep",{"_index":2536,"title":{},"body":{"components/StepbarComponent.html":{}}}],["getter",{"_index":2634,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["getting",{"_index":3020,"title":{"index.html":{}},"body":{}}],["getvalidity",{"_index":2533,"title":{},"body":{"components/StepbarComponent.html":{}}}],["getwarningmessage",{"_index":622,"title":{},"body":{"components/FormComponent.html":{}}}],["getwarningmessage(asformwarn(this.localform.get(field.id",{"_index":844,"title":{},"body":{"components/FormComponent.html":{}}}],["getwarningmessage(control",{"_index":650,"title":{},"body":{"components/FormComponent.html":{}}}],["gitlab",{"_index":2089,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["given",{"_index":2266,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["gives",{"_index":1450,"title":{},"body":{"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["global",{"_index":727,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"components/SimpleDocumentationComponent.html":{}}}],["globalform",{"_index":804,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{}}}],["globalformvalue",{"_index":1913,"title":{},"body":{"components/NavbarComponent.html":{}}}],["globalsubscription",{"_index":612,"title":{},"body":{"components/FormComponent.html":{}}}],["go",{"_index":1663,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"index.html":{}}}],["goes",{"_index":452,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["good",{"_index":1008,"title":{},"body":{"injectables/FormService.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["graph",{"_index":1660,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules.html":{}}}],["graphpoints",{"_index":2582,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["green",{"_index":1554,"title":{},"body":{"components/LayoutComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["ground",{"_index":2750,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["groundstation",{"_index":1085,"title":{},"body":{"classes/FormsTemplate.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["groundstations",{"_index":1319,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["group",{"_index":818,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["group.addcontrol(groupname",{"_index":947,"title":{},"body":{"injectables/FormService.html":{}}}],["group.setcontrol(name",{"_index":936,"title":{},"body":{"injectables/FormService.html":{}}}],["group.setcontrol(this.componentname",{"_index":821,"title":{},"body":{"components/FormComponent.html":{}}}],["group[element.alternative.componentid",{"_index":1027,"title":{},"body":{"injectables/FormService.html":{}}}],["group[element.id",{"_index":1019,"title":{},"body":{"injectables/FormService.html":{}}}],["groupid",{"_index":626,"title":{},"body":{"components/FormComponent.html":{}}}],["groupname",{"_index":904,"title":{},"body":{"injectables/FormService.html":{}}}],["grx",{"_index":581,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{}}}],["gs",{"_index":1317,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["gtx",{"_index":572,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{}}}],["handle",{"_index":59,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"miscellaneous/variables.html":{}}}],["handled",{"_index":1138,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["handleerror",{"_index":315,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/LayoutComponent.html":{}}}],["handleerror(error",{"_index":333,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["handleerror(event",{"_index":1402,"title":{},"body":{"components/LayoutComponent.html":{}}}],["handles",{"_index":417,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"injectables/JSatOrbLinkService.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["handling",{"_index":515,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["hardcoded",{"_index":384,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["hasantenna",{"_index":159,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{}}}],["hasantennacard",{"_index":1394,"title":{},"body":{"components/LayoutComponent.html":{}}}],["hasatmcard",{"_index":1395,"title":{},"body":{"components/LayoutComponent.html":{}}}],["hasgeometrybeendrawn",{"_index":2357,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["hasimage",{"_index":613,"title":{},"body":{"components/FormComponent.html":{}}}],["hasn't",{"_index":1985,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{}}}],["haven't",{"_index":972,"title":{},"body":{"injectables/FormService.html":{}}}],["header",{"_index":216,"title":{},"body":{"components/CardComponent.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":1533,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["helicoidal",{"_index":117,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["helixantenna",{"_index":116,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["help",{"_index":3049,"title":{},"body":{"index.html":{}}}],["helper",{"_index":710,"title":{},"body":{"components/FormComponent.html":{},"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["helperfunctions",{"_index":674,"title":{"classes/HelperFunctions.html":{}},"body":{"components/FormComponent.html":{},"classes/HelperFunctions.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{}}}],["helperfunctions.convertdistance(parsefloat(altitude.value",{"_index":778,"title":{},"body":{"components/FormComponent.html":{}}}],["helperfunctions.convertdistance(parsefloat(value.value",{"_index":768,"title":{},"body":{"components/FormComponent.html":{}}}],["helperfunctions.converttletokeplearian",{"_index":2255,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["helperfunctions.converttletokeplearian(satellite.line1",{"_index":2253,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["helperfunctions.slantrangefromaltelev(altitude",{"_index":771,"title":{},"body":{"components/FormComponent.html":{}}}],["helperfunctions.slantrangefromaltelev(altitude.value",{"_index":782,"title":{},"body":{"components/FormComponent.html":{}}}],["helperfunctions.slantrangefromaltelev(satellite.sma",{"_index":2277,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["here",{"_index":527,"title":{},"body":{"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/WarnFn.html":{}}}],["hidden",{"_index":2114,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["hiding",{"_index":2447,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["horizon",{"_index":2464,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["horz",{"_index":2746,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["html",{"_index":240,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["http",{"_index":418,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["http://localhost:8001",{"_index":1368,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":319,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["httpclientmodule",{"_index":1831,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["httperrorresponse",{"_index":334,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["https://blog.hardinglabs.com/tle",{"_index":1242,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["https://dcas",{"_index":1839,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"miscellaneous/variables.html":{}}}],["https://dev.to/vishesh/custom",{"_index":514,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["https://github.com/angular/angular/issues/38376#issuecomment",{"_index":1843,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["https://github.com/garciparedes/ng",{"_index":2410,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["https://github.com/scttcper/ngx",{"_index":1865,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["https://gitlab.com/librecube/lib/python",{"_index":2091,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["https://stackoverflow.com/questions/695151/data",{"_index":2325,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["https://www.codemag.com/article/1711021/logging",{"_index":1744,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["human",{"_index":137,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["hz",{"_index":1067,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["icons",{"_index":211,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/StepbarComponent.html":{},"dependencies.html":{}}}],["id",{"_index":92,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{}}}],["id:string]:number",{"_index":2806,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["identifier",{"_index":2949,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":107,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{}}}],["img",{"_index":2146,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["impl_loss",{"_index":1079,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["implement",{"_index":385,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["implementation",{"_index":1080,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["implemented",{"_index":41,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["implements",{"_index":164,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/CustomRouteReuseStrategy.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{}}}],["import",{"_index":18,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{}}}],["import'},{'name",{"_index":252,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["import.component",{"_index":1584,"title":{},"body":{"modules/LayoutModule.html":{}}}],["import.component.html",{"_index":1272,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.scss",{"_index":1271,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts",{"_index":1269,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"coverage.html":{}}}],["import.component.ts:12",{"_index":1283,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts:14",{"_index":1293,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts:18",{"_index":1292,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts:19",{"_index":1291,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts:21",{"_index":1290,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts:26",{"_index":1287,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts:42",{"_index":1286,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts:65",{"_index":1284,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import/jsatorb",{"_index":1337,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"modules/LayoutModule.html":{},"coverage.html":{}}}],["import/luplink",{"_index":1268,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"modules/LayoutModule.html":{},"coverage.html":{}}}],["importance",{"_index":543,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["important",{"_index":236,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["importconfigfile",{"_index":2180,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["importconfigfile(files",{"_index":2201,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["imported",{"_index":1312,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["importform",{"_index":884,"title":{},"body":{"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{}}}],["importform(results",{"_index":900,"title":{},"body":{"injectables/FormService.html":{}}}],["importing",{"_index":950,"title":{},"body":{"injectables/FormService.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["importjsatorbconfigfile",{"_index":2181,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["importjsatorbconfigfile(files",{"_index":2203,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["importjsatorbdata",{"_index":2880,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["importjsatorbdata(files",{"_index":2888,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["importjso",{"_index":1276,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["importjsodata",{"_index":2182,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["importjsodata(title",{"_index":2205,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["imports",{"_index":301,"title":{},"body":{"modules/CardModule.html":{},"components/FormComponent.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"modules/WelcomeModule.html":{}}}],["inc",{"_index":2259,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["include",{"_index":2783,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["increment",{"_index":1536,"title":{},"body":{"components/LayoutComponent.html":{}}}],["independant",{"_index":2191,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"classes/MockFormService.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["individualconfig",{"_index":1868,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["infinite",{"_index":739,"title":{},"body":{"components/FormComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"miscellaneous/enumerations.html":{}}}],["info(msg",{"_index":1755,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["information",{"_index":432,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"index.html":{}}}],["init",{"_index":1307,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["initforms",{"_index":885,"title":{},"body":{"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["initgraph",{"_index":2585,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["initial",{"_index":2027,"title":{},"body":{"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["initialize",{"_index":706,"title":{},"body":{"components/FormComponent.html":{}}}],["initialized",{"_index":929,"title":{},"body":{"injectables/FormService.html":{}}}],["initlbscenario(id",{"_index":2852,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["initservice",{"_index":1341,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["inject",{"_index":347,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["inject(environment_token",{"_index":367,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["inject(form_template_token",{"_index":932,"title":{},"body":{"injectables/FormService.html":{},"components/LayoutComponent.html":{}}}],["injectable",{"_index":302,"title":{"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"injectables/LoggerService.html":{},"injectables/MockToastPackage.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{}},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{},"coverage.html":{}}}],["injectables",{"_index":304,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"injectables/LoggerService.html":{},"injectables/MockToastPackage.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{},"overview.html":{}}}],["injection",{"_index":1888,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"injectables/SaveLoadService.html":{},"modules/ToastrTestingModule.html":{}}}],["injectiontoken",{"_index":1568,"title":{},"body":{"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["injectiontoken('environment",{"_index":3064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('formtemplate",{"_index":3065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":1099,"title":{},"body":{"classes/FormsTemplate.html":{},"components/NavbarComponent.html":{}}}],["inner",{"_index":787,"title":{},"body":{"components/FormComponent.html":{}}}],["input",{"_index":206,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["inputcontrol",{"_index":988,"title":{},"body":{"injectables/FormService.html":{}}}],["inputed",{"_index":375,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["inputs",{"_index":194,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["inside",{"_index":716,"title":{},"body":{"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"miscellaneous/variables.html":{}}}],["instanceof",{"_index":422,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["instantiated",{"_index":973,"title":{},"body":{"injectables/FormService.html":{}}}],["integer",{"_index":1654,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["integration",{"_index":454,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["intercept",{"_index":834,"title":{},"body":{"components/FormComponent.html":{}}}],["interested",{"_index":2649,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["interesting",{"_index":1304,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/LinkBudgetComponent.html":{},"interfaces/LuplinkConfig.html":{},"interfaces/Point.html":{},"interfaces/Template.html":{},"interfaces/WarnFn.html":{}},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"injectables/CustomValidators.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormControlWarn.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"interfaces/Point.html":{},"components/StepbarComponent.html":{},"interfaces/Template.html":{},"interfaces/WarnFn.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/LinkBudgetComponent.html":{},"interfaces/LuplinkConfig.html":{},"interfaces/Point.html":{},"interfaces/Template.html":{},"interfaces/WarnFn.html":{},"overview.html":{}}}],["internal",{"_index":832,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{}}}],["interpolating",{"_index":63,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["invalid",{"_index":373,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{}}}],["invalid:not(form",{"_index":2820,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["inventory",{"_index":1396,"title":{},"body":{"components/LayoutComponent.html":{}}}],["involved",{"_index":704,"title":{},"body":{"components/FormComponent.html":{}}}],["involves",{"_index":791,"title":{},"body":{"components/FormComponent.html":{}}}],["ionospheric",{"_index":1060,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["isactive",{"_index":2522,"title":{},"body":{"components/StepbarComponent.html":{}}}],["isactive(step",{"_index":2527,"title":{},"body":{"components/StepbarComponent.html":{}}}],["iscurrentformsaved",{"_index":878,"title":{},"body":{"injectables/FormService.html":{}}}],["iseditingtitle",{"_index":1914,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isempty",{"_index":1273,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["isinitialized",{"_index":887,"title":{},"body":{"injectables/FormService.html":{}}}],["isinitialized(value",{"_index":931,"title":{},"body":{"injectables/FormService.html":{}}}],["isinterlink",{"_index":879,"title":{},"body":{"injectables/FormService.html":{}}}],["isjsovalid",{"_index":1277,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["isjsovalid(jsodata",{"_index":1285,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["ismenubarvisible",{"_index":1915,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isn't",{"_index":751,"title":{},"body":{"components/FormComponent.html":{}}}],["isnanospaceenabled",{"_index":1921,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isnanospaceenabled(value",{"_index":1966,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isstandalone",{"_index":627,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["issubform",{"_index":628,"title":{},"body":{"components/FormComponent.html":{}}}],["issue",{"_index":546,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["issued",{"_index":1248,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["issues",{"_index":2122,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["isup",{"_index":1665,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["iswide",{"_index":195,"title":{},"body":{"components/CardComponent.html":{}}}],["it's",{"_index":154,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["item",{"_index":1500,"title":{},"body":{"components/LayoutComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{}}}],["items",{"_index":2021,"title":{},"body":{"components/NavbarComponent.html":{}}}],["jarring",{"_index":545,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["javascript",{"_index":2308,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["john",{"_index":2092,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["johnsmith",{"_index":2094,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["jsatorb",{"_index":251,"title":{},"body":{"components/CardComponent.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jsatorb.luplink",{"_index":1334,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["jsatorblinkcomponent",{"_index":249,"title":{"components/JSatOrbLinkComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["jsatorblinkservice",{"_index":1280,"title":{"injectables/JSatOrbLinkService.html":{}},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"modules/LayoutModule.html":{},"coverage.html":{},"overview.html":{}}}],["jso",{"_index":1313,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["jsodata",{"_index":1274,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/WelcomeComponent.html":{}}}],["jsodata.groundstations",{"_index":1320,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["jsodata.groundstations.length",{"_index":1322,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["jsodata.satellites",{"_index":1321,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["jsodata.satellites.length",{"_index":1323,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["jsoform",{"_index":2876,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["jsomockdata",{"_index":1339,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["json",{"_index":396,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["json.stringify(configdata",{"_index":2333,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["json.stringify(item",{"_index":1742,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["json.stringify(value",{"_index":1379,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["julien",{"_index":2097,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["justify",{"_index":2148,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["k",{"_index":1095,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["karma",{"_index":3047,"title":{},"body":{"index.html":{}}}],["katex",{"_index":2411,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"dependencies.html":{}}}],["katexmodule",{"_index":2511,"title":{},"body":{"modules/SimpleDocumentationModule.html":{}}}],["keep",{"_index":1308,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["keeping",{"_index":2407,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["keeps",{"_index":600,"title":{},"body":{"classes/DrawingDefault.html":{},"injectables/FormService.html":{}}}],["kep.html",{"_index":1243,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["keplerian",{"_index":2249,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":984,"title":{},"body":{"injectables/FormService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/StepbarComponent.html":{}}}],["keyframes",{"_index":2135,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["khz",{"_index":1066,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["kilometer",{"_index":1224,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["kind",{"_index":1662,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["km",{"_index":767,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["know",{"_index":1438,"title":{},"body":{"components/LayoutComponent.html":{}}}],["label",{"_index":135,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"interfaces/Template.html":{}}}],["labels",{"_index":1610,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["labels').attr('transform",{"_index":2695,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["labels.push(label",{"_index":1617,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["lacking",{"_index":1245,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["large",{"_index":2310,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["last",{"_index":2838,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["lastpoint",{"_index":1666,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["lastpoint.x",{"_index":1667,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["lastpoint.y",{"_index":1668,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["later",{"_index":435,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["latitude",{"_index":3111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["layout",{"_index":1386,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout'},{'name",{"_index":254,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["layout.component.html",{"_index":1388,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout.component.scss",{"_index":1387,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layoutcomponent",{"_index":253,"title":{"components/LayoutComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layoutmodule",{"_index":1557,"title":{"modules/LayoutModule.html":{}},"body":{"modules/LayoutModule.html":{},"modules.html":{},"overview.html":{}}}],["lb",{"_index":1659,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{}}}],["lbscenario",{"_index":2652,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["lbscenariosub",{"_index":2765,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["left",{"_index":1523,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["left').style('font",{"_index":2430,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["legend",{"_index":239,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["length",{"_index":71,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"miscellaneous/variables.html":{}}}],["less",{"_index":1006,"title":{},"body":{"injectables/FormService.html":{}}}],["level",{"_index":1228,"title":{},"body":{"classes/HelperFunctions.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["li",{"_index":1520,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["li.active",{"_index":1553,"title":{},"body":{"components/LayoutComponent.html":{}}}],["li.active:before",{"_index":1555,"title":{},"body":{"components/LayoutComponent.html":{}}}],["li:after",{"_index":1546,"title":{},"body":{"components/LayoutComponent.html":{}}}],["li:before",{"_index":1531,"title":{},"body":{"components/LayoutComponent.html":{}}}],["li:first",{"_index":1551,"title":{},"body":{"components/LayoutComponent.html":{}}}],["lib",{"_index":184,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["library",{"_index":58,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":2086,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["limitations",{"_index":2327,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["line",{"_index":413,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["line1",{"_index":3081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["line2",{"_index":3089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linear",{"_index":565,"title":{},"body":{"classes/DrawingDefault.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["linelosses",{"_index":2358,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["lines",{"_index":2729,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["link",{"_index":306,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["link.service",{"_index":1296,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"modules/LayoutModule.html":{}}}],["link.service.ts",{"_index":1338,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["link.service.ts:14",{"_index":1355,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["link.service.ts:15",{"_index":1357,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["link.service.ts:16",{"_index":1358,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["link.service.ts:17",{"_index":1345,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["link.service.ts:28",{"_index":1351,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["link.service.ts:36",{"_index":1354,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["link.service.ts:44",{"_index":1346,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["link.service.ts:51",{"_index":1347,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["link.service.ts:57",{"_index":1348,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["link.service.ts:67",{"_index":1349,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["link:focus",{"_index":2016,"title":{},"body":{"components/NavbarComponent.html":{}}}],["link:not(.is",{"_index":2022,"title":{},"body":{"components/NavbarComponent.html":{}}}],["linkbudgetcomponent",{"_index":598,"title":{"interfaces/LinkBudgetComponent.html":{}},"body":{"classes/DrawingDefault.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"coverage.html":{}}}],["linkbudgetcomponent.gain",{"_index":1676,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["linkbudgetcomponent.linear",{"_index":1671,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["linkbudgetcomponent.width",{"_index":1678,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["linkbudgetscenario",{"_index":1598,"title":{"classes/LinkBudgetScenario.html":{}},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"coverage.html":{}}}],["linkbudgetscenario(power",{"_index":2643,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["linkbudgetsynthesis",{"_index":311,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["linkpredict",{"_index":383,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/NavigationSidebarComponent.html":{}}}],["links",{"_index":1445,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["linkservice",{"_index":1275,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["linktype",{"_index":2590,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["list",{"_index":146,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"interfaces/Template.html":{}}}],["listens",{"_index":913,"title":{},"body":{"injectables/FormService.html":{}}}],["literal",{"_index":562,"title":{},"body":{"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"components/LayoutComponent.html":{},"classes/LinkBudgetScenario.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/typealiases.html":{}}}],["lna",{"_index":1102,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["lna_gain",{"_index":1101,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["lnanoisetemp",{"_index":1104,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["load",{"_index":1332,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["load(files",{"_index":1925,"title":{},"body":{"components/NavbarComponent.html":{}}}],["load.service",{"_index":1295,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["load.service.ts",{"_index":2175,"title":{},"body":{"injectables/SaveLoadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["load.service.ts:119",{"_index":2206,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["load.service.ts:143",{"_index":2202,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["load.service.ts:177",{"_index":2200,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["load.service.ts:185",{"_index":2196,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["load.service.ts:35",{"_index":2183,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["load.service.ts:48",{"_index":2207,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["load.service.ts:66",{"_index":2204,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["load.service.ts:99",{"_index":2198,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["loaded",{"_index":2297,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["loading",{"_index":1916,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["loadservice",{"_index":1281,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{}}}],["local",{"_index":733,"title":{},"body":{"components/FormComponent.html":{}}}],["localform",{"_index":614,"title":{},"body":{"components/FormComponent.html":{}}}],["localfrom",{"_index":807,"title":{},"body":{"components/FormComponent.html":{}}}],["localsubscription",{"_index":615,"title":{},"body":{"components/FormComponent.html":{}}}],["log",{"_index":1743,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["log(msg",{"_index":1770,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["logentry",{"_index":1701,"title":{"classes/LogEntry.html":{}},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logentry.formatparams(optionalparams",{"_index":1760,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["logentry.formatparams(this.extrainfo",{"_index":1733,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["logger",{"_index":35,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/WelcomeComponent.html":{}}}],["logger.module",{"_index":1721,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["logger.service",{"_index":1803,"title":{},"body":{"modules/LoggerModule.html":{}}}],["loggermodule",{"_index":868,"title":{"modules/LoggerModule.html":{}},"body":{"modules/FormModule.html":{},"modules/LayoutModule.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"modules/NavbarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"modules.html":{},"overview.html":{}}}],["loggermodule.forroot",{"_index":874,"title":{},"body":{"modules/FormModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["loggerservice",{"_index":36,"title":{"injectables/LoggerService.html":{}},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loglevel",{"_index":1711,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.all",{"_index":1771,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["loglevel.debug",{"_index":1712,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["loglevel.error",{"_index":1762,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["loglevel.fatal",{"_index":1769,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["loglevel.info",{"_index":1756,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["loglevel.off",{"_index":1793,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["loglevel.warn",{"_index":1758,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["loglevel[this.level",{"_index":1729,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["logos",{"_index":2145,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["logwithdate",{"_index":1705,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["logwithtoast",{"_index":1751,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["longitude",{"_index":3112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["look",{"_index":2301,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["loop",{"_index":740,"title":{},"body":{"components/FormComponent.html":{}}}],["losing",{"_index":1984,"title":{},"body":{"components/NavbarComponent.html":{}}}],["loss",{"_index":139,"title":{},"body":{"interfaces/AntennaField.html":{},"injectables/CustomValidators.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Template.html":{},"interfaces/WarnFn.html":{}}}],["losses",{"_index":1061,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["lost",{"_index":1012,"title":{},"body":{"injectables/FormService.html":{}}}],["lot",{"_index":792,"title":{},"body":{"components/FormComponent.html":{}}}],["lp",{"_index":1136,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["lpath",{"_index":576,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{}}}],["lrx",{"_index":585,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{}}}],["ltx",{"_index":569,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{}}}],["luplink",{"_index":250,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["luplink's",{"_index":3025,"title":{},"body":{"index.html":{}}}],["luplink/ngx",{"_index":2998,"title":{},"body":{"dependencies.html":{}}}],["luplink/src/lib/components/card/card.component.ts",{"_index":181,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/components/card/card.component.ts:10",{"_index":199,"title":{},"body":{"components/CardComponent.html":{}}}],["luplink/src/lib/components/card/card.component.ts:12",{"_index":200,"title":{},"body":{"components/CardComponent.html":{}}}],["luplink/src/lib/components/card/card.component.ts:14",{"_index":198,"title":{},"body":{"components/CardComponent.html":{}}}],["luplink/src/lib/components/card/card.component.ts:16",{"_index":205,"title":{},"body":{"components/CardComponent.html":{}}}],["luplink/src/lib/components/card/card.component.ts:18",{"_index":204,"title":{},"body":{"components/CardComponent.html":{}}}],["luplink/src/lib/components/card/card.component.ts:20",{"_index":201,"title":{},"body":{"components/CardComponent.html":{}}}],["luplink/src/lib/components/card/card.module.ts",{"_index":291,"title":{},"body":{"modules/CardModule.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts",{"_index":1907,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:18",{"_index":1950,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:20",{"_index":1946,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:22",{"_index":1937,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:23",{"_index":1940,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:24",{"_index":1933,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:25",{"_index":1952,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:28",{"_index":1954,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:32",{"_index":1935,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:33",{"_index":1939,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:34",{"_index":1944,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:35",{"_index":1941,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:36",{"_index":1922,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:40",{"_index":1936,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:41",{"_index":1938,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:42",{"_index":1942,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:50",{"_index":1931,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:56",{"_index":1924,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:64",{"_index":1929,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:78",{"_index":1932,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:82",{"_index":1927,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:87",{"_index":1923,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.module.ts",{"_index":2035,"title":{},"body":{"modules/NavbarModule.html":{}}}],["luplink/src/lib/components/navigation",{"_index":2037,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"coverage.html":{}}}],["luplink/src/lib/components/results/components/results/results.component.ts",{"_index":2954,"title":{},"body":{"coverage.html":{}}}],["luplink/src/lib/components/results/components/sidebar/result",{"_index":2157,"title":{},"body":{"components/ResultSidebarComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/components/results/results.module.ts",{"_index":2168,"title":{},"body":{"modules/ResultSidebarModule.html":{}}}],["luplink/src/lib/components/simple",{"_index":2346,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"coverage.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts",{"_index":2514,"title":{},"body":{"components/StepbarComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:16",{"_index":2526,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:19",{"_index":2535,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:26",{"_index":2525,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:29",{"_index":2538,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:32",{"_index":2530,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:34",{"_index":2531,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:35",{"_index":2532,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:37",{"_index":2524,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:40",{"_index":2529,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:41",{"_index":2528,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.module.ts",{"_index":2561,"title":{},"body":{"modules/StepbarModule.html":{}}}],["luplink/src/lib/components/synthesis/synthesis.component.ts",{"_index":2563,"title":{},"body":{"components/SynthesisComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/components/synthesis/synthesis.component.ts:8",{"_index":2567,"title":{},"body":{"components/SynthesisComponent.html":{}}}],["luplink/src/lib/components/synthesis/synthesis.module.ts",{"_index":2573,"title":{},"body":{"modules/SynthesisModule.html":{}}}],["luplink/src/lib/components/synthetic",{"_index":557,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"coverage.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts",{"_index":2873,"title":{},"body":{"components/WelcomeComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:15",{"_index":2882,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:19",{"_index":2893,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:20",{"_index":2896,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:21",{"_index":2897,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:22",{"_index":2894,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:23",{"_index":2892,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:25",{"_index":2895,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:30",{"_index":2890,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:41",{"_index":2889,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:61",{"_index":2887,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:71",{"_index":2891,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.module.ts",{"_index":2946,"title":{},"body":{"modules/WelcomeModule.html":{}}}],["luplink/src/lib/form/component/form.component.ts",{"_index":605,"title":{},"body":{"components/FormComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/form/component/form.component.ts:111",{"_index":653,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:115",{"_index":647,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:151",{"_index":645,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:18",{"_index":634,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:200",{"_index":651,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:207",{"_index":649,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:35",{"_index":671,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:38",{"_index":654,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:40",{"_index":635,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:41",{"_index":637,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:42",{"_index":636,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:44",{"_index":639,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:46",{"_index":659,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:48",{"_index":663,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:50",{"_index":658,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:51",{"_index":655,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:52",{"_index":666,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:53",{"_index":656,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:54",{"_index":661,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:55",{"_index":669,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:57",{"_index":664,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:58",{"_index":633,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:60",{"_index":665,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:66",{"_index":641,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:72",{"_index":643,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:80",{"_index":652,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/form.module.ts",{"_index":869,"title":{},"body":{"modules/FormModule.html":{}}}],["luplink/src/lib/form/form.service.ts",{"_index":875,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["luplink/src/lib/form/form.service.ts:101",{"_index":898,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:105",{"_index":902,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:120",{"_index":894,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:15",{"_index":908,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:22",{"_index":909,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:23",{"_index":907,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:24",{"_index":917,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:25",{"_index":915,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:26",{"_index":914,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:29",{"_index":906,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:30",{"_index":919,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:33",{"_index":921,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:35",{"_index":890,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:44",{"_index":892,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:61",{"_index":897,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:69",{"_index":905,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:81",{"_index":901,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:97",{"_index":899,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/luplink",{"_index":1267,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"coverage.html":{}}}],["luplink/src/lib/luplink.module.ts",{"_index":1828,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["luplink/src/lib/luplink.module.ts:30",{"_index":1859,"title":{},"body":{"modules/LuplinkModule.html":{}}}],["luplink/src/lib/services/compute",{"_index":305,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"coverage.html":{}}}],["luplink/src/lib/services/save",{"_index":2174,"title":{},"body":{"injectables/SaveLoadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["luplink/src/lib/shared/custom",{"_index":498,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{},"coverage.html":{}}}],["luplink/src/lib/shared/customroutereusestrategy.ts",{"_index":448,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"coverage.html":{}}}],["luplink/src/lib/shared/customroutereusestrategy.ts:14",{"_index":478,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["luplink/src/lib/shared/customroutereusestrategy.ts:20",{"_index":470,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["luplink/src/lib/shared/customroutereusestrategy.ts:25",{"_index":466,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["luplink/src/lib/shared/customroutereusestrategy.ts:29",{"_index":475,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["luplink/src/lib/shared/customroutereusestrategy.ts:7",{"_index":463,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["luplink/src/lib/shared/customroutereusestrategy.ts:9",{"_index":472,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["luplink/src/lib/shared/data.mock.ts",{"_index":2973,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["luplink/src/lib/shared/dependencies.ts",{"_index":2975,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["luplink/src/lib/shared/helper",{"_index":1185,"title":{},"body":{"classes/HelperFunctions.html":{},"coverage.html":{}}}],["luplink/src/lib/shared/logger/logger.module.ts",{"_index":1796,"title":{},"body":{"modules/LoggerModule.html":{}}}],["luplink/src/lib/shared/logger/logger.module.ts:23",{"_index":1798,"title":{},"body":{"modules/LoggerModule.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts",{"_index":1702,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:103",{"_index":1814,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:111",{"_index":1820,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:116",{"_index":1815,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:120",{"_index":1817,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:124",{"_index":1818,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:142",{"_index":1822,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:158",{"_index":1819,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:24",{"_index":1709,"title":{},"body":{"classes/LogEntry.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:26",{"_index":1715,"title":{},"body":{"classes/LogEntry.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:28",{"_index":1713,"title":{},"body":{"classes/LogEntry.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:30",{"_index":1710,"title":{},"body":{"classes/LogEntry.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:32",{"_index":1714,"title":{},"body":{"classes/LogEntry.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:34",{"_index":1716,"title":{},"body":{"classes/LogEntry.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:50",{"_index":1718,"title":{},"body":{"classes/LogEntry.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:73",{"_index":1812,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:80",{"_index":1823,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:84",{"_index":1824,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:86",{"_index":1825,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:88",{"_index":1826,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:90",{"_index":1813,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:94",{"_index":1816,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:98",{"_index":1821,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/models/antennas.ts",{"_index":7,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["luplink/src/lib/shared/models/antennas.ts:110",{"_index":174,"title":{},"body":{"classes/Antennas.html":{}}}],["luplink/src/lib/shared/models/antennas.ts:66",{"_index":173,"title":{},"body":{"classes/Antennas.html":{}}}],["luplink/src/lib/shared/models/antennas.ts:86",{"_index":175,"title":{},"body":{"classes/Antennas.html":{}}}],["luplink/src/lib/shared/models/form.model.ts",{"_index":131,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"coverage.html":{}}}],["luplink/src/lib/shared/models/form.model.ts:38",{"_index":603,"title":{},"body":{"classes/EmptyForm.html":{}}}],["luplink/src/lib/shared/models/form.model.ts:39",{"_index":604,"title":{},"body":{"classes/EmptyForm.html":{}}}],["luplink/src/lib/shared/models/form.model.ts:40",{"_index":602,"title":{},"body":{"classes/EmptyForm.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts",{"_index":1593,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"coverage.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:106",{"_index":1692,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:15",{"_index":1688,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:17",{"_index":1689,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:19",{"_index":1687,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:23",{"_index":1686,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:31",{"_index":1700,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:35",{"_index":1697,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:39",{"_index":1695,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:57",{"_index":1690,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:61",{"_index":1691,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:71",{"_index":1693,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:75",{"_index":1694,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:86",{"_index":1698,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:90",{"_index":1696,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:94",{"_index":1699,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/results.model.ts",{"_index":3057,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts",{"_index":1029,"title":{},"body":{"classes/FormsTemplate.html":{},"coverage.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:138",{"_index":1162,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:15",{"_index":1140,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:169",{"_index":1174,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:200",{"_index":1155,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:240",{"_index":1172,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:285",{"_index":1127,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:324",{"_index":1112,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:355",{"_index":1062,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:394",{"_index":1083,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:41",{"_index":1161,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:445",{"_index":1090,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:476",{"_index":1106,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:508",{"_index":1045,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:510",{"_index":1154,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:8",{"_index":1128,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:99",{"_index":1177,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts",{"_index":1862,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:12",{"_index":1897,"title":{},"body":{"classes/MockFormService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:13",{"_index":1896,"title":{},"body":{"classes/MockFormService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:14",{"_index":1898,"title":{},"body":{"classes/MockFormService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:19",{"_index":1900,"title":{},"body":{"classes/MockFormService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:21",{"_index":1899,"title":{},"body":{"classes/MockFormService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:29",{"_index":1905,"title":{},"body":{"classes/MockupLoggerService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:30",{"_index":1902,"title":{},"body":{"classes/MockupLoggerService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:31",{"_index":1903,"title":{},"body":{"classes/MockupLoggerService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:32",{"_index":1904,"title":{},"body":{"classes/MockupLoggerService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:33",{"_index":1906,"title":{},"body":{"classes/MockupLoggerService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:37",{"_index":1901,"title":{},"body":{"injectables/MockToastPackage.html":{}}}],["luplink/src/lib/ui/layout.module.ts",{"_index":1567,"title":{},"body":{"modules/LayoutModule.html":{}}}],["luplink/src/lib/ui/link",{"_index":1384,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/ui/view/view.component.ts",{"_index":2869,"title":{},"body":{"components/ViewComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/ui/view/view.component.ts:8",{"_index":2872,"title":{},"body":{"components/ViewComponent.html":{}}}],["luplinkconfig",{"_index":1827,"title":{"interfaces/LuplinkConfig.html":{}},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"coverage.html":{}}}],["luplinkendpoint",{"_index":1894,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/variables.html":{}}}],["luplinkformsave",{"_index":1340,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["luplinkmodule",{"_index":1847,"title":{"modules/LuplinkModule.html":{}},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules.html":{},"overview.html":{}}}],["luplink{{'v'+version",{"_index":2085,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["luplink{{\\'v\\'+version",{"_index":2151,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["lut",{"_index":53,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["luts",{"_index":2083,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["m",{"_index":111,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{}}}],["mail",{"_index":2043,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["mainsvg",{"_index":2583,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["major",{"_index":2933,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["make",{"_index":956,"title":{},"body":{"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{}}}],["makes",{"_index":979,"title":{},"body":{"injectables/FormService.html":{}}}],["making",{"_index":407,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["manual",{"_index":1244,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["manually",{"_index":1964,"title":{},"body":{"components/NavbarComponent.html":{}}}],["map",{"_index":462,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"injectables/FormService.html":{}}}],["margin",{"_index":217,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["margin:24px",{"_index":854,"title":{},"body":{"components/FormComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["margin:auto",{"_index":858,"title":{},"body":{"components/FormComponent.html":{}}}],["mark",{"_index":2345,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["matching",{"_index":128,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.cos(delta",{"_index":1238,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["math.pi",{"_index":765,"title":{},"body":{"components/FormComponent.html":{},"classes/HelperFunctions.html":{}}}],["math.random",{"_index":1655,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["math.round((2.632",{"_index":77,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["math.round((math.random",{"_index":1649,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["math.round(12.316",{"_index":73,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.sqrt(40000",{"_index":80,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["math.round(this.earthradius",{"_index":1235,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["math.sin(delta",{"_index":1239,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["math.sqrt(((altitude",{"_index":1236,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["math.sqrt((sr",{"_index":1240,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["max",{"_index":95,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{},"modules/ToastrTestingModule.html":{}}}],["maximum",{"_index":2125,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["maybe",{"_index":2885,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["mean",{"_index":1260,"title":{},"body":{"classes/HelperFunctions.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["meananomaly",{"_index":3078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["meananomaly']).foreach((val",{"_index":2262,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["menu",{"_index":2112,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["menu.is",{"_index":2126,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["mergemap((result",{"_index":2240,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["message",{"_index":827,"title":{},"body":{"components/FormComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["message?:string",{"_index":1773,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["metadata",{"_index":182,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["meters",{"_index":1135,"title":{},"body":{"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{}}}],["method",{"_index":942,"title":{},"body":{"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["methods",{"_index":192,"title":{},"body":{"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"modules/LuplinkModule.html":{},"classes/MockFormService.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{}}}],["mhz",{"_index":1065,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["middle",{"_index":2664,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["min",{"_index":849,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["minimum",{"_index":2380,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["miscellaneous",{"_index":1202,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"classes/HelperFunctions.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miscellanious",{"_index":1746,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["mismatch",{"_index":1125,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["missing",{"_index":2302,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["mission",{"_index":3066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mix",{"_index":2194,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["mockcomputeservice",{"_index":1861,"title":{"classes/MockComputeService.html":{}},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{}}}],["mockenvironment",{"_index":1890,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockformservice",{"_index":1873,"title":{"classes/MockFormService.html":{}},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{}}}],["mocking",{"_index":1863,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["mockjsatorbdata",{"_index":2898,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["mockpostdata",{"_index":1871,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["mockpostdata.json",{"_index":1872,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["mocktoastpackage",{"_index":1882,"title":{"injectables/MockToastPackage.html":{}},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{}}}],["mockuploggerservice",{"_index":1881,"title":{"classes/MockupLoggerService.html":{}},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{}}}],["modal",{"_index":2076,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["mode",{"_index":1960,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["model",{"_index":2781,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["models",{"_index":1444,"title":{},"body":{"components/LayoutComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["models/antennas",{"_index":1178,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["models/default",{"_index":2630,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["models/form.model",{"_index":1179,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["modifications",{"_index":1994,"title":{},"body":{"components/NavbarComponent.html":{}}}],["modified",{"_index":2653,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["module",{"_index":281,"title":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"modules/WelcomeModule.html":{}},"body":{"classes/DrawingDefault.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/ToastrTestingModule.html":{}}}],["modules",{"_index":283,"title":{"modules.html":{}},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"modules/WelcomeModule.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":1569,"title":{},"body":{"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["more",{"_index":944,"title":{},"body":{"injectables/FormService.html":{},"index.html":{}}}],["motion",{"_index":1261,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["move",{"_index":1442,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{}}}],["msg",{"_index":1783,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["much",{"_index":431,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["multiple",{"_index":540,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"interfaces/WarnFn.html":{}}}],["multiples",{"_index":1625,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["n",{"_index":1256,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["name",{"_index":245,"title":{},"body":{"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nanospace",{"_index":1835,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["nanospaceconfig",{"_index":1838,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nanospacerequestservice",{"_index":1832,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/WelcomeModule.html":{}}}],["nanospaceservice",{"_index":1833,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/WelcomeModule.html":{}}}],["nanostar.isae.fr/api",{"_index":1840,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"miscellaneous/variables.html":{}}}],["navanim",{"_index":2132,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["navbar",{"_index":1908,"title":{},"body":{"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["navbar'},{'name",{"_index":256,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["navbar.component",{"_index":2036,"title":{},"body":{"modules/NavbarModule.html":{}}}],["navbar.component.html",{"_index":1910,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":1909,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":255,"title":{"components/NavbarComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navbarmodule",{"_index":2030,"title":{"modules/NavbarModule.html":{}},"body":{"modules/NavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["navigating",{"_index":1375,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["navigation",{"_index":258,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{}}}],["navigationsidebarcomponent",{"_index":257,"title":{"components/NavigationSidebarComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigationsidebarmodule",{"_index":1563,"title":{"modules/NavigationSidebarModule.html":{}},"body":{"modules/LayoutModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{},"modules.html":{},"overview.html":{}}}],["nearest",{"_index":1653,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["necessary",{"_index":2858,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["need",{"_index":955,"title":{},"body":{"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["needed",{"_index":1657,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["neighbor",{"_index":1451,"title":{},"body":{"components/LayoutComponent.html":{}}}],["neighbors",{"_index":1453,"title":{},"body":{"components/LayoutComponent.html":{}}}],["network",{"_index":425,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["new",{"_index":345,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newendpoint",{"_index":1352,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["newform",{"_index":809,"title":{},"body":{"components/FormComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["newform.setvalue(previousform",{"_index":814,"title":{},"body":{"components/FormComponent.html":{}}}],["newgains",{"_index":2805,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["newgains[key",{"_index":2809,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["newlbscenario",{"_index":2830,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["newscenario",{"_index":2605,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["newscenario.getlabels",{"_index":2656,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["newscenario.getpoints",{"_index":2697,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["newscenario.getpowerout",{"_index":2698,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["next",{"_index":412,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["ng",{"_index":2512,"title":{},"body":{"modules/SimpleDocumentationModule.html":{},"components/SyntheticDrawingFormComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":2361,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["ngmodule",{"_index":294,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"modules/WelcomeModule.html":{}}}],["ngondestroy",{"_index":2766,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["ngoninit",{"_index":1278,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/WelcomeComponent.html":{}}}],["ngx",{"_index":1720,"title":{},"body":{"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavigationSidebarComponent.html":{},"modules/ToastrTestingModule.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngxnanospace",{"_index":1845,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxnanospaceclientlibmodule",{"_index":1834,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/WelcomeModule.html":{}}}],["ngxnanospaceclientlibmodule.forroot(nanospaceconfig",{"_index":1846,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"miscellaneous/variables.html":{}}}],["no_units",{"_index":1170,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["node",{"_index":1971,"title":{},"body":{"components/NavbarComponent.html":{}}}],["node_modules/bulma",{"_index":2552,"title":{},"body":{"components/StepbarComponent.html":{}}}],["noise",{"_index":1093,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["non",{"_index":1314,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["none",{"_index":668,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["nosatellites",{"_index":1325,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["note",{"_index":2186,"title":{},"body":{"injectables/SaveLoadService.html":{},"index.html":{}}}],["nothing",{"_index":1303,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["now",{"_index":61,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":3043,"title":{},"body":{"index.html":{}}}],["npmjs.com",{"_index":2090,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["null",{"_index":484,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":28,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/HelperFunctions.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["numberofcomponents",{"_index":1641,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["numerical",{"_index":532,"title":{},"body":{"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["o",{"_index":2553,"title":{},"body":{"components/StepbarComponent.html":{},"dependencies.html":{}}}],["object",{"_index":592,"title":{},"body":{"classes/DrawingDefault.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"miscellaneous/variables.html":{}}}],["object's",{"_index":2842,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["object.entries(components).foreach(([key",{"_index":2807,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["object.entries(pagevalue).foreach(([key",{"_index":1459,"title":{},"body":{"components/LayoutComponent.html":{}}}],["object.entries(satellites).foreach(([key",{"_index":2250,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["object.entries(this.components).foreach(([key",{"_index":1613,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["object.entries(this.templates).foreach(([pagekey",{"_index":1455,"title":{},"body":{"components/LayoutComponent.html":{}}}],["object.keys(gains).foreach((key",{"_index":1638,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["object.keys(this.components).foreach((id",{"_index":1647,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["object.keys(this.components).length",{"_index":1642,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["object.prototype.hasownproperty.call(this.components",{"_index":1679,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["object.prototype.hasownproperty.call(this.validity.steps",{"_index":2546,"title":{},"body":{"components/StepbarComponent.html":{}}}],["object.values(['sma",{"_index":2258,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["object.values(this.components).foreach((linkbudgetcomponent",{"_index":1670,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["object.values(this.pagevalidity[pageid]).every((item",{"_index":1499,"title":{},"body":{"components/LayoutComponent.html":{}}}],["object.values(this.pagevalidity[pageid]).includes('invalid",{"_index":1498,"title":{},"body":{"components/LayoutComponent.html":{}}}],["objects.mockpostdata.geometry",{"_index":1874,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["obs",{"_index":1997,"title":{},"body":{"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["obs.complete",{"_index":2226,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["obs.error(err",{"_index":2221,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["obs.error(error",{"_index":2238,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["obs.error(new",{"_index":2217,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["obs.next(filereader.result",{"_index":2224,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["obs.next(this.parsejsodata(json.parse(value",{"_index":2237,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["obs.subscribe",{"_index":2000,"title":{},"body":{"components/NavbarComponent.html":{}}}],["obs.unsubscribe",{"_index":2909,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["observable",{"_index":329,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"injectables/SaveLoadService.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/variables.html":{}}}],["observable((obs",{"_index":2209,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["observables",{"_index":2232,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["observed",{"_index":928,"title":{},"body":{"injectables/FormService.html":{}}}],["occured",{"_index":426,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["of(new",{"_index":1880,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["onblur",{"_index":1920,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onblur($event",{"_index":1930,"title":{},"body":{"components/NavbarComponent.html":{}}}],["once",{"_index":547,"title":{},"body":{"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"interfaces/WarnFn.html":{}}}],["ondestroy",{"_index":2761,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["one",{"_index":149,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"components/LayoutComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{}}}],["oninit",{"_index":1270,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["onsubmit",{"_index":2767,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["opacity",{"_index":2136,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["open",{"_index":2216,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["opens",{"_index":2210,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":12,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{}}}],["optionalparams",{"_index":1753,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["optionalparams.length>0",{"_index":1765,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["optionalparams[0",{"_index":1764,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["options",{"_index":151,"title":{},"body":{"interfaces/AntennaField.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["optionsfield",{"_index":155,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["order",{"_index":401,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"components/SimpleDocumentationComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/WarnFn.html":{}}}],["out",{"_index":290,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":542,"title":{},"body":{"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"components/JSatOrbLinkComponent.html":{},"interfaces/WarnFn.html":{}}}],["outputs",{"_index":629,"title":{},"body":{"components/FormComponent.html":{}}}],["overflow",{"_index":225,"title":{},"body":{"components/CardComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["overflow:hidden",{"_index":221,"title":{},"body":{"components/CardComponent.html":{}}}],["overrides",{"_index":2843,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["overview",{"_index":3050,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwrite",{"_index":813,"title":{},"body":{"components/FormComponent.html":{}}}],["p",{"_index":1737,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["pa",{"_index":2260,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["package",{"_index":2985,"title":{"dependencies.html":{}},"body":{}}],["package.json",{"_index":2066,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["packageinfo",{"_index":2065,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["packageinfo.version",{"_index":2077,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["padding",{"_index":2013,"title":{},"body":{"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["padding:0px",{"_index":855,"title":{},"body":{"components/FormComponent.html":{}}}],["padding:6px",{"_index":845,"title":{},"body":{"components/FormComponent.html":{}}}],["page",{"_index":997,"title":{},"body":{"injectables/FormService.html":{},"components/LayoutComponent.html":{},"index.html":{}}}],["pageid",{"_index":1407,"title":{},"body":{"components/LayoutComponent.html":{}}}],["pages",{"_index":1494,"title":{},"body":{"components/LayoutComponent.html":{}}}],["pagevalidity",{"_index":1397,"title":{},"body":{"components/LayoutComponent.html":{}}}],["pagevalue",{"_index":1456,"title":{},"body":{"components/LayoutComponent.html":{}}}],["param",{"_index":1990,"title":{},"body":{"components/NavbarComponent.html":{}}}],["parameters",{"_index":322,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"components/WelcomeComponent.html":{}}}],["params",{"_index":50,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["params.boomlength.value",{"_index":72,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["params.component",{"_index":1464,"title":{},"body":{"components/LayoutComponent.html":{}}}],["params.foreach((item",{"_index":1741,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["params.join",{"_index":1734,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["params.some((p",{"_index":1735,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["parent",{"_index":160,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"interfaces/Template.html":{}}}],["parentcomponent",{"_index":158,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{}}}],["parentid",{"_index":896,"title":{},"body":{"injectables/FormService.html":{}}}],["parentname",{"_index":616,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{}}}],["parsefloat(`0.${tle2.substring(26",{"_index":1253,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["parsefloat(elev)).tofixed(1",{"_index":783,"title":{},"body":{"components/FormComponent.html":{}}}],["parsefloat(elevation.value)).tofixed(1",{"_index":772,"title":{},"body":{"components/FormComponent.html":{}}}],["parsefloat(geo.altitude.value",{"_index":2456,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["parsefloat(geo.slantrange.value",{"_index":2457,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["parsefloat(satellite[val",{"_index":2264,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["parsefloat(tle2.substring(52",{"_index":1257,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["parsejsodata",{"_index":2176,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["part",{"_index":2834,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{},"components/WelcomeComponent.html":{}}}],["parts",{"_index":982,"title":{},"body":{"injectables/FormService.html":{}}}],["pass",{"_index":538,"title":{},"body":{"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/SaveLoadService.html":{},"interfaces/WarnFn.html":{}}}],["passed",{"_index":1365,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["passes",{"_index":2211,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["patchform",{"_index":886,"title":{},"body":{"injectables/FormService.html":{}}}],["patchform(parentname",{"_index":903,"title":{},"body":{"injectables/FormService.html":{}}}],["path",{"_index":2382,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["pattern",{"_index":531,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/WarnFn.html":{}}}],["pencil",{"_index":1917,"title":{},"body":{"components/NavbarComponent.html":{}}}],["per",{"_index":2868,"title":{},"body":{"modules/ToastrTestingModule.html":{}}}],["percent",{"_index":1594,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["persistance",{"_index":1309,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["pertinent",{"_index":438,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["pick",{"_index":437,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["ping",{"_index":364,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["pipe",{"_index":397,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/SaveLoadService.html":{}}}],["placeholder",{"_index":2334,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["please",{"_index":376,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"components/LayoutComponent.html":{},"interfaces/WarnFn.html":{}}}],["plot",{"_index":1658,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["point",{"_index":1595,"title":{"interfaces/Point.html":{}},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"coverage.html":{}}}],["point.y",{"_index":2708,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["pointing",{"_index":1089,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["points",{"_index":1600,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["points.push",{"_index":1677,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["polarization",{"_index":1055,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["position",{"_index":566,"title":{},"body":{"classes/DrawingDefault.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{}}}],["positionclass",{"_index":1805,"title":{},"body":{"modules/LoggerModule.html":{}}}],["positions",{"_index":1612,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["positive",{"_index":145,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["positivelosswarningvalidator",{"_index":501,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["possible",{"_index":147,"title":{},"body":{"interfaces/AntennaField.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/SimpleDocumentationComponent.html":{},"interfaces/Template.html":{}}}],["post",{"_index":392,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["postdata",{"_index":381,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["power",{"_index":1113,"title":{},"body":{"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["powerin",{"_index":561,"title":{},"body":{"classes/DrawingDefault.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["powerin(value",{"_index":2637,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["powerout",{"_index":1599,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["powerout.tofixed(1",{"_index":2749,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["practice",{"_index":2837,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["precision",{"_index":1246,"title":{},"body":{"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{}}}],["precisiondecimals",{"_index":1217,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["present",{"_index":2446,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["pretty",{"_index":2315,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["prevent",{"_index":1983,"title":{},"body":{"components/NavbarComponent.html":{}}}],["previous",{"_index":811,"title":{},"body":{"components/FormComponent.html":{}}}],["previousform",{"_index":799,"title":{},"body":{"components/FormComponent.html":{}}}],["prissimitzis",{"_index":2098,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["private",{"_index":314,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/WelcomeComponent.html":{}}}],["probably",{"_index":2299,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["process",{"_index":380,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["prod",{"_index":1963,"title":{},"body":{"components/NavbarComponent.html":{}}}],["production",{"_index":1891,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":2549,"title":{},"body":{"components/StepbarComponent.html":{}}}],["progressbar",{"_index":1518,"title":{},"body":{"components/LayoutComponent.html":{}}}],["project",{"_index":2926,"title":{},"body":{"components/WelcomeComponent.html":{},"index.html":{}}}],["projects",{"_index":3023,"title":{},"body":{"index.html":{}}}],["projects/.../antennas.ts",{"_index":3058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../data.mock.ts",{"_index":3060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../dependencies.ts",{"_index":3059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../logger.service.ts",{"_index":3019,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../luplink.module.ts",{"_index":3062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../mocks.ts",{"_index":3061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../results.model.ts",{"_index":3056,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../save",{"_index":3063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/luplink",{"_index":1958,"title":{},"body":{"components/NavbarComponent.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":2245,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["promise((results",{"_index":2305,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["promises",{"_index":2187,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["propagation",{"_index":2472,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["properties",{"_index":11,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"classes/MockFormService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{}}}],["property",{"_index":1117,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["protocol",{"_index":2326,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["provide",{"_index":1591,"title":{},"body":{"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["provided",{"_index":1634,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":359,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/WarnFn.html":{}}}],["providers",{"_index":870,"title":{},"body":{"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"modules/WelcomeModule.html":{}}}],["prx",{"_index":589,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["ptx",{"_index":564,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{}}}],["public",{"_index":23,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{}}}],["publish",{"_index":3044,"title":{},"body":{"index.html":{}}}],["publishing",{"_index":3038,"title":{},"body":{"index.html":{}}}],["purposes",{"_index":1003,"title":{},"body":{"injectables/FormService.html":{},"components/LayoutComponent.html":{}}}],["python",{"_index":57,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/NavigationSidebarComponent.html":{},"miscellaneous/variables.html":{}}}],["quality",{"_index":2485,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["quick",{"_index":709,"title":{},"body":{"components/FormComponent.html":{}}}],["r",{"_index":2389,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["r_e",{"_index":2392,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["r_e+h",{"_index":2391,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["raan",{"_index":2261,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["rad",{"_index":102,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["rad/s",{"_index":1263,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["radians",{"_index":761,"title":{},"body":{"components/FormComponent.html":{}}}],["radius",{"_index":1544,"title":{},"body":{"components/LayoutComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["random",{"_index":1645,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["randomize",{"_index":1684,"title":{},"body":{"classes/LinkBudgetScenario.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["randomize(amplitude",{"_index":1644,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["randomizeinputs",{"_index":2768,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["randomizing",{"_index":2841,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["range",{"_index":694,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{}}}],["rate",{"_index":1072,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ratio",{"_index":1159,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["reachable",{"_index":363,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["reactive",{"_index":517,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{}}}],["reactiveformsmodule",{"_index":871,"title":{},"body":{"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{}}}],["readable",{"_index":138,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["readfile",{"_index":2208,"title":{},"body":{"injectables/SaveLoadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["readfile(files).subscribe",{"_index":2236,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["readme.md",{"_index":3026,"title":{},"body":{"index.html":{}}}],["reassign",{"_index":1991,"title":{},"body":{"components/NavbarComponent.html":{}}}],["receiver",{"_index":1091,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["receiver_antenna",{"_index":1084,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["recognize",{"_index":134,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["recreating",{"_index":1588,"title":{},"body":{"modules/LayoutModule.html":{}}}],["red",{"_index":2821,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["reference",{"_index":1167,"title":{},"body":{"classes/FormsTemplate.html":{},"index.html":{}}}],["referencetemperature",{"_index":1166,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["refreshluplink",{"_index":1342,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["refreshpagevalidity",{"_index":1398,"title":{},"body":{"components/LayoutComponent.html":{}}}],["refreshpagevalidity(pageid",{"_index":1405,"title":{},"body":{"components/LayoutComponent.html":{}}}],["regenerate",{"_index":806,"title":{},"body":{"components/FormComponent.html":{}}}],["regexp",{"_index":835,"title":{},"body":{"components/FormComponent.html":{}}}],["related",{"_index":752,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{}}}],["relative",{"_index":1526,"title":{},"body":{"components/LayoutComponent.html":{}}}],["reload",{"_index":1962,"title":{},"body":{"components/NavbarComponent.html":{}}}],["remove",{"_index":2014,"title":{},"body":{"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["removed",{"_index":995,"title":{},"body":{"injectables/FormService.html":{}}}],["removing",{"_index":2343,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["replace",{"_index":2231,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["req",{"_index":550,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["request",{"_index":389,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["require",{"_index":2635,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["required",{"_index":548,"title":{},"body":{"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/LoggerModule.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/WarnFn.html":{}}}],["requiredvalidator",{"_index":502,"title":{},"body":{"injectables/CustomValidators.html":{}}}],["requirements",{"_index":2490,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["reset",{"_index":289,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"overview.html":{}}}],["response",{"_index":2004,"title":{},"body":{"components/NavbarComponent.html":{}}}],["responsetype",{"_index":395,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["rest",{"_index":2192,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["restricted",{"_index":2544,"title":{},"body":{"components/StepbarComponent.html":{}}}],["result",{"_index":127,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":129,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results'},{'name",{"_index":261,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["results.header?.mission",{"_index":2234,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["results.metadata",{"_index":2287,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["results.metadata.title",{"_index":963,"title":{},"body":{"injectables/FormService.html":{}}}],["results.metadata.version",{"_index":2288,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["results.satellite",{"_index":2265,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["resultscomponent",{"_index":260,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resultsidebarcomponent",{"_index":262,"title":{"components/ResultSidebarComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resultsidebarmodule",{"_index":1564,"title":{"modules/ResultSidebarModule.html":{}},"body":{"modules/LayoutModule.html":{},"modules/ResultSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["ret",{"_index":1727,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["retrieve",{"_index":457,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["retrieve(route",{"_index":464,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["return",{"_index":42,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":441,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["returns",{"_index":202,"title":{},"body":{"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"modules/LuplinkModule.html":{},"classes/MockFormService.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"components/WelcomeComponent.html":{}}}],["reuse",{"_index":784,"title":{},"body":{"components/FormComponent.html":{}}}],["reusing",{"_index":1587,"title":{},"body":{"modules/LayoutModule.html":{}}}],["rgb(100",{"_index":2108,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["rgb(255",{"_index":237,"title":{},"body":{"components/CardComponent.html":{}}}],["right",{"_index":1807,"title":{},"body":{"modules/LoggerModule.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["right:auto",{"_index":2757,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["robust",{"_index":957,"title":{},"body":{"injectables/FormService.html":{}}}],["root",{"_index":360,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/WarnFn.html":{}}}],["round",{"_index":1230,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["rounded",{"_index":1652,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["route",{"_index":467,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["route.routeconfig",{"_index":487,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["route.url",{"_index":481,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["router",{"_index":1589,"title":{},"body":{"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["routereuse",{"_index":451,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["routereusestrategy",{"_index":455,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"modules/LayoutModule.html":{}}}],["routermodule",{"_index":1570,"title":{},"body":{"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["routermodule.forchild(routes",{"_index":1586,"title":{},"body":{"modules/LayoutModule.html":{}}}],["routes",{"_index":482,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"modules/LayoutModule.html":{}}}],["run",{"_index":3031,"title":{},"body":{"index.html":{}}}],["running",{"_index":3045,"title":{},"body":{"index.html":{}}}],["rx",{"_index":588,"title":{},"body":{"classes/DrawingDefault.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["rxantennatemp",{"_index":1092,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["rxinlineloss",{"_index":1098,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["rxjs",{"_index":350,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":352,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["s",{"_index":2388,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["s.component",{"_index":1628,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["s=r_e(\\\\sqrt{(\\\\frac{r}{r_e})^2",{"_index":2413,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["s=r_e(\\\\sqrt{[\\\\frac{r}{r_e}]^2",{"_index":2385,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["sa",{"_index":2475,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["safe",{"_index":2292,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["saferesults",{"_index":2291,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["saferesults.metadata.title",{"_index":2293,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["same",{"_index":839,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["sanitization",{"_index":954,"title":{},"body":{"injectables/FormService.html":{}}}],["sanitize",{"_index":1956,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"dependencies.html":{}}}],["sanitize($event.target.value",{"_index":1975,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sanitize(results.metadata.title",{"_index":2294,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["sanity",{"_index":952,"title":{},"body":{"injectables/FormService.html":{}}}],["satellite",{"_index":1288,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["satellite.ecc",{"_index":2272,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["satellite.line2",{"_index":2254,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["satellite.name",{"_index":1330,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/WelcomeComponent.html":{}}}],["satellite.sma",{"_index":2273,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["satellite.type",{"_index":2251,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["satellites",{"_index":1316,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["satellites[key",{"_index":2252,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["satellites[key][val",{"_index":2263,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["save",{"_index":1374,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"components/NavbarComponent.html":{}}}],["save/load",{"_index":2284,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["saved",{"_index":719,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["saveloadservice",{"_index":1282,"title":{"injectables/SaveLoadService.html":{}},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["saving",{"_index":2184,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["scaffolding",{"_index":3030,"title":{},"body":{"index.html":{}}}],["scalex(0",{"_index":2138,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["scalex(100",{"_index":2140,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["scenario",{"_index":1333,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{}}}],["scenario.addcomponents(components",{"_index":2644,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["scenario.compute(linktype",{"_index":2645,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["scenarioid",{"_index":2591,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["sea",{"_index":1227,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["secondary",{"_index":2026,"title":{},"body":{"components/NavbarComponent.html":{}}}],["see",{"_index":1241,"title":{},"body":{"classes/HelperFunctions.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"index.html":{}}}],["seems",{"_index":55,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/JSatOrbLinkComponent.html":{},"miscellaneous/variables.html":{}}}],["segment",{"_index":2488,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["select",{"_index":2883,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["select('path",{"_index":2718,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["select(this.diagram.nativeelement",{"_index":2681,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["selectall('line",{"_index":2734,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["selectall('text",{"_index":2658,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["selected",{"_index":1481,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["selectedsatellite",{"_index":2877,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["selectedsatellite.ecc",{"_index":2936,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["selectedsatellite.ecc)*selectedsatellite.sma).toprecision(3",{"_index":2937,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["selectedsatellite.sma)).toprecision(3",{"_index":2934,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["selectedsatellite.sma).toprecision(3",{"_index":2939,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["selectedstation",{"_index":2878,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["selectedstation.elevation).toprecision(3",{"_index":2940,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["selector",{"_index":183,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["semi",{"_index":2932,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["send",{"_index":365,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/JSatOrbLinkService.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["sendtoast",{"_index":1808,"title":{},"body":{"injectables/LoggerService.html":{}}}],["sendtoast(title",{"_index":1772,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["sent",{"_index":970,"title":{},"body":{"injectables/FormService.html":{}}}],["service",{"_index":910,"title":{},"body":{"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"injectables/SaveLoadService.html":{}}}],["services",{"_index":3024,"title":{},"body":{"index.html":{}}}],["services/compute",{"_index":1836,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/ResultSidebarComponent.html":{}}}],["services/logger.service",{"_index":922,"title":{},"body":{"injectables/FormService.html":{}}}],["services/save",{"_index":1294,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["set",{"_index":680,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"components/NavbarComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["setcomponents(value",{"_index":2628,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["setformtemplate(value",{"_index":672,"title":{},"body":{"components/FormComponent.html":{}}}],["setisinitialized(value",{"_index":920,"title":{},"body":{"injectables/FormService.html":{}}}],["setisnanospaceenabled(value",{"_index":1953,"title":{},"body":{"components/NavbarComponent.html":{}}}],["setpowerin",{"_index":1685,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["setpowerin(power",{"_index":1605,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["setpowerin(value",{"_index":2625,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["sets",{"_index":2785,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["setstep(value",{"_index":2537,"title":{},"body":{"components/StepbarComponent.html":{}}}],["setters",{"_index":2633,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["settimeout",{"_index":1977,"title":{},"body":{"components/NavbarComponent.html":{}}}],["setting",{"_index":789,"title":{},"body":{"components/FormComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["setvalidity(value",{"_index":2534,"title":{},"body":{"components/StepbarComponent.html":{}}}],["sgp4",{"_index":1250,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["shared/custom",{"_index":679,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{}}}],["shared/customroutereusestrategy",{"_index":1585,"title":{},"body":{"modules/LayoutModule.html":{}}}],["shared/data.mock",{"_index":1359,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["shared/dependencies",{"_index":356,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["shared/helper",{"_index":675,"title":{},"body":{"components/FormComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["shared/logger/logger.module",{"_index":873,"title":{},"body":{"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{}}}],["shared/logger/logger.service",{"_index":353,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/WelcomeComponent.html":{}}}],["shared/models/antennas",{"_index":1435,"title":{},"body":{"components/LayoutComponent.html":{}}}],["shared/models/form.model",{"_index":677,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{}}}],["shared/models/linkbudgetscenario.model",{"_index":599,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["shared/models/results.model",{"_index":358,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["shared/testing/mockjsatorbdata.json",{"_index":2899,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["short",{"_index":2487,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["shouldattach",{"_index":458,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["shouldattach(route",{"_index":469,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["shoulddetach",{"_index":459,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["shoulddetach(route",{"_index":471,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["shouldlog",{"_index":1809,"title":{},"body":{"injectables/LoggerService.html":{}}}],["shouldlog(level",{"_index":1791,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["shouldn't",{"_index":805,"title":{},"body":{"components/FormComponent.html":{}}}],["shouldreuseroute",{"_index":460,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["shouldreuseroute(future",{"_index":473,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["show",{"_index":544,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"components/JSatOrbLinkComponent.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{}}}],["showabout",{"_index":2044,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["shows",{"_index":2470,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["showselector",{"_index":24,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["side",{"_index":424,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/SyntheticDrawingComponent.html":{}}}],["sidebar",{"_index":340,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":259,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["sidebar.component",{"_index":2156,"title":{},"body":{"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{}}}],["sidebar.component.html",{"_index":2040,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":2039,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":2038,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:10",{"_index":2160,"title":{},"body":{"components/ResultSidebarComponent.html":{}}}],["sidebar.component.ts:20",{"_index":2048,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:24",{"_index":2054,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:25",{"_index":2053,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:27",{"_index":2057,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:28",{"_index":2052,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:29",{"_index":2058,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:31",{"_index":2060,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:32",{"_index":2055,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:34",{"_index":2051,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:37",{"_index":2049,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:9",{"_index":2159,"title":{},"body":{"components/ResultSidebarComponent.html":{}}}],["sidebar.module",{"_index":1580,"title":{},"body":{"modules/LayoutModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["sidebar.module.ts",{"_index":2155,"title":{},"body":{"modules/NavigationSidebarModule.html":{}}}],["sidebar/navigation",{"_index":1579,"title":{},"body":{"modules/LayoutModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{},"coverage.html":{}}}],["simple",{"_index":264,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["simpledocumentationcomponent",{"_index":263,"title":{"components/SimpleDocumentationComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpledocumentationmodule",{"_index":1565,"title":{"modules/SimpleDocumentationModule.html":{}},"body":{"modules/LayoutModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules.html":{},"overview.html":{}}}],["simpler",{"_index":1139,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["sin{\\\\delta",{"_index":2387,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["size",{"_index":2317,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{}}}],["size:12px",{"_index":1525,"title":{},"body":{"components/LayoutComponent.html":{}}}],["slant",{"_index":693,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{}}}],["slantrange",{"_index":1131,"title":{},"body":{"classes/FormsTemplate.html":{},"injectables/SaveLoadService.html":{}}}],["slantrangefromaltelev",{"_index":1193,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["slantrangefromaltelev(altitude",{"_index":1216,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["sma",{"_index":1215,"title":{},"body":{"classes/HelperFunctions.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["smaller",{"_index":2015,"title":{},"body":{"components/NavbarComponent.html":{}}}],["smith",{"_index":2093,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["snr",{"_index":1157,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["solid",{"_index":209,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"dependencies.html":{}}}],["solve",{"_index":2846,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{}}}],["space",{"_index":2149,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["spacecraft",{"_index":1108,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["spacing",{"_index":123,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/FormComponent.html":{}}}],["specific",{"_index":747,"title":{},"body":{"components/FormComponent.html":{}}}],["splash",{"_index":2473,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["sr",{"_index":758,"title":{},"body":{"components/FormComponent.html":{},"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{}}}],["standalone",{"_index":1440,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"index.html":{}}}],["start",{"_index":2924,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["started",{"_index":1372,"title":{"index.html":{}},"body":{"injectables/JSatOrbLinkService.html":{}}}],["state",{"_index":720,"title":{},"body":{"components/FormComponent.html":{}}}],["statements",{"_index":2950,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":85,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/DrawingDefault.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["station",{"_index":1289,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["station.elevation",{"_index":2275,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["station.name",{"_index":1331,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/WelcomeComponent.html":{}}}],["stationaltitude",{"_index":1206,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["stations",{"_index":2931,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["step",{"_index":1448,"title":{},"body":{"components/LayoutComponent.html":{},"components/StepbarComponent.html":{},"miscellaneous/variables.html":{}}}],["step(value",{"_index":2542,"title":{},"body":{"components/StepbarComponent.html":{}}}],["step/groups",{"_index":1493,"title":{},"body":{"components/LayoutComponent.html":{}}}],["stepbar",{"_index":2515,"title":{},"body":{"components/StepbarComponent.html":{}}}],["stepbar'},{'name",{"_index":267,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["stepbar.component",{"_index":2562,"title":{},"body":{"modules/StepbarModule.html":{}}}],["stepbar.component.html",{"_index":2517,"title":{},"body":{"components/StepbarComponent.html":{}}}],["stepbar.component.scss",{"_index":2516,"title":{},"body":{"components/StepbarComponent.html":{}}}],["stepbarcomponent",{"_index":266,"title":{"components/StepbarComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stepbarmodule",{"_index":1566,"title":{"modules/StepbarModule.html":{}},"body":{"modules/LayoutModule.html":{},"modules/StepbarModule.html":{},"modules.html":{},"overview.html":{}}}],["steps",{"_index":1510,"title":{},"body":{"components/LayoutComponent.html":{},"components/StepbarComponent.html":{},"dependencies.html":{}}}],["steps.sass",{"_index":2555,"title":{},"body":{"components/StepbarComponent.html":{}}}],["steps/bulma",{"_index":2554,"title":{},"body":{"components/StepbarComponent.html":{}}}],["steps/index.sass",{"_index":2556,"title":{},"body":{"components/StepbarComponent.html":{}}}],["sticky",{"_index":2118,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["still",{"_index":402,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["store",{"_index":461,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["store(route",{"_index":477,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["stored",{"_index":817,"title":{},"body":{"components/FormComponent.html":{},"injectables/JSatOrbLinkService.html":{},"index.html":{}}}],["storedroutes",{"_index":456,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["straightforward",{"_index":2316,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{}}}],["stroke",{"_index":2753,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["study",{"_index":2884,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["style",{"_index":1521,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["style('font",{"_index":2424,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["styleclass",{"_index":196,"title":{},"body":{"components/CardComponent.html":{}}}],["styles",{"_index":178,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["styleurls",{"_index":186,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["subform",{"_index":702,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{}}}],["subforms",{"_index":926,"title":{},"body":{"injectables/FormService.html":{}}}],["subgroup",{"_index":1025,"title":{},"body":{"injectables/FormService.html":{}}}],["subject",{"_index":1356,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["subscribe",{"_index":2906,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["subscriber",{"_index":2242,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["subscribetochanges",{"_index":623,"title":{},"body":{"components/FormComponent.html":{}}}],["subscribing",{"_index":2651,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["subscription",{"_index":660,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["subscription?.unsubscribe",{"_index":2005,"title":{},"body":{"components/NavbarComponent.html":{}}}],["subscriptions",{"_index":754,"title":{},"body":{"components/FormComponent.html":{}}}],["success",{"_index":232,"title":{},"body":{"components/CardComponent.html":{},"injectables/LoggerService.html":{}}}],["success(msg",{"_index":1767,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["summary",{"_index":2689,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["sunsynchronous",{"_index":3075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super",{"_index":37,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["super(1",{"_index":1885,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["supervisor",{"_index":2100,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["supplied",{"_index":684,"title":{},"body":{"components/FormComponent.html":{}}}],["support",{"_index":3052,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1180,"title":{},"body":{"classes/FormsTemplate.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["svg",{"_index":210,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"dependencies.html":{},"modules.html":{}}}],["switch",{"_index":1249,"title":{},"body":{"classes/HelperFunctions.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"injectables/SaveLoadService.html":{}}}],["switched",{"_index":1134,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["switching",{"_index":996,"title":{},"body":{"injectables/FormService.html":{}}}],["switchtemplate",{"_index":2046,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["switchtemplate(name",{"_index":2050,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["syntax",{"_index":2545,"title":{},"body":{"components/StepbarComponent.html":{}}}],["synthesis",{"_index":2564,"title":{},"body":{"components/SynthesisComponent.html":{}}}],["synthesis'},{'name",{"_index":269,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["synthesis.component",{"_index":2574,"title":{},"body":{"modules/SynthesisModule.html":{}}}],["synthesis.component.html",{"_index":2566,"title":{},"body":{"components/SynthesisComponent.html":{}}}],["synthesis.component.scss",{"_index":2565,"title":{},"body":{"components/SynthesisComponent.html":{}}}],["synthesiscomponent",{"_index":268,"title":{"components/SynthesisComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["synthesismodule",{"_index":2568,"title":{"modules/SynthesisModule.html":{}},"body":{"modules/SynthesisModule.html":{},"modules.html":{},"overview.html":{}}}],["synthetic",{"_index":271,"title":{},"body":{"components/CardComponent.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/SyntheticDrawingModule.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{}}}],["syntheticdrawingcomponent",{"_index":270,"title":{"components/SyntheticDrawingComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/SyntheticDrawingModule.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["syntheticdrawingformcomponent",{"_index":273,"title":{"components/SyntheticDrawingFormComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/SyntheticDrawingModule.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["syntheticdrawingformservice",{"_index":2593,"title":{"injectables/SyntheticDrawingFormService.html":{}},"body":{"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"coverage.html":{},"overview.html":{}}}],["syntheticdrawingmodule",{"_index":2167,"title":{"modules/SyntheticDrawingModule.html":{}},"body":{"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"modules.html":{},"overview.html":{}}}],["system",{"_index":1082,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["system_margin",{"_index":1081,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["systemtemperature",{"_index":2359,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["t_1",{"_index":2401,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["t_a",{"_index":2400,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["t_s",{"_index":2399,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["table",{"_index":2984,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2983,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1010,"title":{},"body":{"injectables/FormService.html":{},"modules/LayoutModule.html":{}}}],["takes",{"_index":978,"title":{},"body":{"injectables/FormService.html":{},"injectables/SaveLoadService.html":{}}}],["temperature",{"_index":1094,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["temperatures",{"_index":2499,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["template",{"_index":26,"title":{"interfaces/Template.html":{}},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Template.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{}}}],["templates",{"_index":750,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{}}}],["templateurl",{"_index":188,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["terrible",{"_index":2844,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["test",{"_index":409,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"index.html":{}}}],["testdata",{"_index":2901,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["testdata.header?.mission",{"_index":2902,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["tested",{"_index":1497,"title":{},"body":{"components/LayoutComponent.html":{}}}],["testing",{"_index":1002,"title":{},"body":{"injectables/FormService.html":{},"components/LayoutComponent.html":{},"miscellaneous/variables.html":{}}}],["tests",{"_index":1169,"title":{},"body":{"classes/FormsTemplate.html":{},"index.html":{}}}],["text",{"_index":1527,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["text((d",{"_index":2660,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["thanks",{"_index":1864,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["that's",{"_index":1247,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["then((results",{"_index":2244,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["therefore",{"_index":1011,"title":{},"body":{"injectables/FormService.html":{}}}],["thibault",{"_index":2101,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["this._components",{"_index":2640,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this._formtemplate",{"_index":682,"title":{},"body":{"components/FormComponent.html":{}}}],["this._isinitialized",{"_index":930,"title":{},"body":{"injectables/FormService.html":{}}}],["this._isnanospaceenabled",{"_index":1965,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._powerin",{"_index":2636,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this._step",{"_index":2541,"title":{},"body":{"components/StepbarComponent.html":{}}}],["this._validity",{"_index":2539,"title":{},"body":{"components/StepbarComponent.html":{}}}],["this.addcomponent(s.id",{"_index":1627,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["this.addform(fg",{"_index":977,"title":{},"body":{"injectables/FormService.html":{}}}],["this.alt",{"_index":2426,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.alt.text(`${alt.toprecision(precision",{"_index":2460,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.antennaname",{"_index":1476,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.atmosphere",{"_index":1479,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.budgettext",{"_index":2691,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.budgettext.text(`prx",{"_index":2748,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.buildform",{"_index":2904,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.changecomponent(this._formtemplate",{"_index":683,"title":{},"body":{"components/FormComponent.html":{}}}],["this.changedetector.detectchanges",{"_index":2451,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.collapsed",{"_index":212,"title":{},"body":{"components/CardComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["this.componentid",{"_index":165,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/LayoutComponent.html":{},"interfaces/Template.html":{}}}],["this.componentname",{"_index":725,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{}}}],["this.components",{"_index":1603,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["this.components[id",{"_index":1623,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["this.components[id].gain",{"_index":1630,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["this.components[key",{"_index":1618,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["this.computelinkbudget.computelinkbudget",{"_index":1998,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.computelinkbudget.displayingresults",{"_index":2162,"title":{},"body":{"components/ResultSidebarComponent.html":{}}}],["this.computelinkbudget.updateresult(value",{"_index":2002,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.createformgroup(componenttemplate",{"_index":976,"title":{},"body":{"injectables/FormService.html":{}}}],["this.createformgroup(element.alternative",{"_index":1026,"title":{},"body":{"injectables/FormService.html":{}}}],["this.currentantenna",{"_index":1475,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.currentantenna.componentname",{"_index":1477,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.currentcomponent",{"_index":2078,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["this.currentscenario",{"_index":2798,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.currentstep",{"_index":1467,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.currenttemplate",{"_index":1470,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.customvalidators.fieldvalidator",{"_index":1021,"title":{},"body":{"injectables/FormService.html":{}}}],["this.customvalidators.positivelosswarningvalidator",{"_index":1023,"title":{},"body":{"injectables/FormService.html":{}}}],["this.debugmode",{"_index":1987,"title":{},"body":{"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["this.defaultlbscenario.getpoints",{"_index":2665,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.delta",{"_index":2417,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.delta.text(`ẟ=${geo.elevation.value",{"_index":2458,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.displayedimage",{"_index":798,"title":{},"body":{"components/FormComponent.html":{}}}],["this.displaygraph",{"_index":2648,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.displayingresults",{"_index":404,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.distance[from",{"_index":1220,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["this.distance[to",{"_index":1221,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["this.drawgeometry",{"_index":2448,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.drawingform",{"_index":2787,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingform.patchvalue",{"_index":2811,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingform.value.gains",{"_index":2816,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingform.value.power",{"_index":2814,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingform.valuechanges.subscribe",{"_index":2794,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingformsub",{"_index":2793,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingformsub.unsubscribe",{"_index":2799,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingservice.getlbscenario$(this.scenarioid).subscribe((next",{"_index":2797,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingservice.getlbscenario$(this.scenarioid).subscribe((value",{"_index":2654,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.drawingservice.getlbscenario(this.scenarioid",{"_index":2803,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingservice.updatelbscenario(this.scenarioid",{"_index":2646,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["this.earthmu",{"_index":1265,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["this.earthradius",{"_index":1237,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["this.editgain(key",{"_index":1639,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["this.environment.debugmode",{"_index":1360,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"components/WelcomeComponent.html":{}}}],["this.environment.enablenanospace",{"_index":1967,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.environment.isstandalone",{"_index":1437,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.environment.luplinkendpoint",{"_index":1370,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["this.environment.luplinkendpoint}/linkbudget/${postdata.options.type",{"_index":390,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.environment.version",{"_index":2059,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["this.extrainfo.length",{"_index":1731,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.fb.group",{"_index":938,"title":{},"body":{"injectables/FormService.html":{}}}],["this.fb.group(geometry",{"_index":2279,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.fb.group(group",{"_index":1028,"title":{},"body":{"injectables/FormService.html":{}}}],["this.fb.group(mockpostdata.geometry",{"_index":1876,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["this.form",{"_index":2450,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.form?.uplink?.transmitter",{"_index":2497,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.form?.uplink?.transmitter.line_losses.unit",{"_index":2496,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.form?.uplink?.transmitter.line_losses.value",{"_index":2495,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.form?.uplink?.transmitter.power.unit",{"_index":2492,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.form?.uplink?.transmitter.power.value",{"_index":2491,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.form?.uplink?.tx",{"_index":2493,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.formatjsodata(satellites",{"_index":2235,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.formbuilder.group",{"_index":2788,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.formbuilder.group(drawingdefault.defaultgains",{"_index":2790,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.formservice.addarchive('geometry",{"_index":2278,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.formservice.addform(this.localform",{"_index":724,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.createformgroup(componenttemplate",{"_index":810,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.getformdata",{"_index":378,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/SaveLoadService.html":{}}}],["this.formservice.getformdata$().subscribe((obs",{"_index":2440,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.formservice.getformdata$().subscribe((value",{"_index":1969,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.formservice.getformdata().geometry",{"_index":2435,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.formservice.getformdata().uplink.transmitter",{"_index":2498,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.formservice.globalform.get(this.parentname",{"_index":819,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.globalform.setcontrol('geometry",{"_index":2280,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.formservice.globalform.setcontrol(this.componentname",{"_index":824,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.globalform.setcontrol(this.parentname",{"_index":822,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.globalform.valid",{"_index":371,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.formservice.globalform.value.downlink.transmitter",{"_index":2453,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.formservice.globalform.value.uplink.transmitter",{"_index":2452,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.formservice.globalform.value[this.componentname",{"_index":800,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.globalform.value[this.parentname][this.componentname",{"_index":801,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.globalform.valuechanges.subscribe((newform",{"_index":2449,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.formservice.globalform.valuechanges.subscribe((newvalue",{"_index":732,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.globalform.valuechanges.subscribe((value",{"_index":1376,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["this.formservice.importform(saferesults",{"_index":2295,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.formservice.importform(this.luplinkformsave",{"_index":1383,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["this.formservice.initforms",{"_index":708,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{}}}],["this.formservice.iscurrentformsaved",{"_index":721,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["this.formservice.isinitialized",{"_index":707,"title":{},"body":{"components/FormComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/NavbarComponent.html":{}}}],["this.formservice.title",{"_index":1974,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["this.formservice.title}}{{!this.formservice.iscurrentformsaved",{"_index":2012,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.formstatus.emit",{"_index":699,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formstemplate.geometry",{"_index":1418,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.formstemplate.ul_atmosphere",{"_index":1411,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.formtemplate.componentid",{"_index":690,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formulas",{"_index":2412,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.formvalidity",{"_index":1504,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.formvalidity[neighbor",{"_index":1506,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.formvalidity[pageid",{"_index":1501,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.formvalidity[pagekey",{"_index":1458,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.generateconfig(data",{"_index":2329,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.geometrysubscribe",{"_index":697,"title":{},"body":{"components/FormComponent.html":{}}}],["this.getformdata()?.[link]?.[parentid]?.[componentid",{"_index":941,"title":{},"body":{"injectables/FormService.html":{}}}],["this.getformdata()[componentid",{"_index":940,"title":{},"body":{"injectables/FormService.html":{}}}],["this.globalform.get(parent",{"_index":935,"title":{},"body":{"injectables/FormService.html":{}}}],["this.globalform.get(parentname",{"_index":946,"title":{},"body":{"injectables/FormService.html":{}}}],["this.globalform.patchvalue(results.data",{"_index":961,"title":{},"body":{"injectables/FormService.html":{}}}],["this.globalform.setcontrol(name",{"_index":939,"title":{},"body":{"injectables/FormService.html":{}}}],["this.globalform.setcontrol(parent",{"_index":937,"title":{},"body":{"injectables/FormService.html":{}}}],["this.globalform.value",{"_index":965,"title":{},"body":{"injectables/FormService.html":{}}}],["this.globalform.valuechanges",{"_index":964,"title":{},"body":{"injectables/FormService.html":{}}}],["this.globalformvalue",{"_index":1970,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.globalsubscription",{"_index":731,"title":{},"body":{"components/FormComponent.html":{}}}],["this.globalsubscription.unsubscribe",{"_index":730,"title":{},"body":{"components/FormComponent.html":{}}}],["this.hasantennacard",{"_index":1472,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.hasatmcard",{"_index":1473,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.hasgeometrybeendrawn",{"_index":2434,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.hasimage",{"_index":796,"title":{},"body":{"components/FormComponent.html":{}}}],["this.height",{"_index":2670,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.httpclient.post(url",{"_index":394,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.importfile(files",{"_index":2239,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.importfile(files).subscribe((results",{"_index":2243,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.importform.controls.satellite.value",{"_index":1328,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.importform.controls.station.value",{"_index":1329,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.importform.patchvalue",{"_index":1300,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.initgraph",{"_index":2650,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.inventory[step].foreach((neighbor",{"_index":1505,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.iseditingtitle",{"_index":1976,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.isempty",{"_index":1306,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.isjsovalid(this.jsodata",{"_index":1299,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.isnanospaceenabled",{"_index":1968,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.isstandalone",{"_index":1436,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.jsodata",{"_index":1297,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/WelcomeComponent.html":{}}}],["this.jsodata$.next(this.jsodata",{"_index":1362,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["this.jsodata.groundstations?.length",{"_index":2929,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsodata.groundstations[0",{"_index":2915,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsodata.satellites?.length}})groundstations",{"_index":2928,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsodata.satellites[0",{"_index":2913,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsodata.title",{"_index":1327,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.jsodata.title}}satellites",{"_index":2927,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsodata?.groundstations[0",{"_index":1302,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.jsodata?.satellites[0",{"_index":1301,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.jsoform",{"_index":2916,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsoform.controls.satellite.value",{"_index":2920,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsoform.controls.station.value",{"_index":2922,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsoform.patchvalue",{"_index":2912,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsoform.value",{"_index":2918,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsomockdata",{"_index":1361,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["this.labels",{"_index":2657,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.lbscenario",{"_index":2850,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenario$.default",{"_index":2847,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenario$.default.getvalue",{"_index":2859,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenario$.downlink",{"_index":2849,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenario$.uplink",{"_index":2848,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenario$[id",{"_index":2855,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenario$[id].next(newlbscenario",{"_index":2854,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenario[id",{"_index":2853,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenariosub",{"_index":2796,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.lbscenariosub.unsubscribe",{"_index":2800,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.level",{"_index":1792,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.linkbudgetsynthesis",{"_index":393,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.linkservice.initservice",{"_index":1310,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.linktype",{"_index":2639,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.loading",{"_index":1999,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loadservice.generateconfig(value",{"_index":1380,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["this.loadservice.importjsodata",{"_index":1326,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.loadservice.parsejsodata(this.linkservice.getjsodata",{"_index":1298,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.localform",{"_index":815,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.get('altitude')?.value",{"_index":776,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.get('altitude')?.valuechanges.subscribe((value",{"_index":755,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.get('elevation')?.value",{"_index":759,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.get('elevation')?.valuechanges.subscribe((value",{"_index":773,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.get('slantrange')?.setvalue",{"_index":770,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.patchvalue(newvalue.geometry",{"_index":741,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.valid",{"_index":687,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.valuechanges.subscribe",{"_index":718,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localsubscription",{"_index":717,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localsubscription.unsubscribe",{"_index":743,"title":{},"body":{"components/FormComponent.html":{}}}],["this.logger.debug(\"api",{"_index":2003,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.logger.debug(\"the",{"_index":1480,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.logger.debug('error",{"_index":2007,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.logger.debug('exporting",{"_index":2313,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.logger.debug('full",{"_index":436,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.debug('got",{"_index":700,"title":{},"body":{"components/FormComponent.html":{}}}],["this.logger.debug('jsoform",{"_index":2917,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.logger.debug('newscenario",{"_index":2701,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.logger.debug('sending",{"_index":391,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.debug('updating",{"_index":2700,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.logger.debug('value",{"_index":2001,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.logger.error(\"post",{"_index":420,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.error(\"this",{"_index":2300,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.logger.error('backend",{"_index":443,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.error('client",{"_index":427,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.error('error",{"_index":2304,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["this.logger.error('invalid",{"_index":1507,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.logger.error(event.id",{"_index":1484,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.logger.error(pageid",{"_index":1502,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.logger.info('logging",{"_index":1981,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.logger.success('importing",{"_index":2282,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.logger.success('successfully",{"_index":2296,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.logger.warn('computebeamwidth",{"_index":45,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["this.logger.warn('computegain",{"_index":40,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["this.logger.warn('current",{"_index":1509,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.logger.warn('data",{"_index":1324,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.logger.warn('error",{"_index":2214,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["this.logger.warn('errors",{"_index":374,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.warn('form",{"_index":369,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.warn('no",{"_index":379,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.warn('validity",{"_index":1503,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.logger.warn('version",{"_index":2289,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.logger.warn('warning",{"_index":2268,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["this.logger.warn(`${parentname",{"_index":948,"title":{},"body":{"injectables/FormService.html":{}}}],["this.logwithdate",{"_index":1728,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.logwithtoast",{"_index":1775,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.luplinkformsave",{"_index":1378,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["this.mainsvg",{"_index":2680,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.mainsvg.append('g').attr('class",{"_index":2693,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.mainsvg.select('.yaxis').transition().duration(1000).call(d3.axisleft(this.y",{"_index":2727,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.margin.bottom",{"_index":2673,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.margin.left",{"_index":2668,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.margin.right",{"_index":2669,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.margin.top",{"_index":2672,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.message",{"_index":1730,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.onsubmit.bind(this",{"_index":2795,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.pagevalidity[pagekey",{"_index":1457,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.pagevalidity[pagekey][v.componentid",{"_index":1461,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.pagevalidity[this.componentid][event.id",{"_index":1486,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.params",{"_index":169,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["this.parentcomponent",{"_index":167,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["this.parentname",{"_index":726,"title":{},"body":{"components/FormComponent.html":{}}}],["this.points",{"_index":1604,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["this.powerin",{"_index":1602,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["this.powerout",{"_index":1607,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["this.refreshpagevalidity(this.componentid",{"_index":1487,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.requiredvalidator(value?.value",{"_index":551,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["this.result",{"_index":416,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.result.next(this.linkbudgetsynthesis",{"_index":405,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.result.next(value",{"_index":415,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.route.queryparams.subscribe((params",{"_index":1463,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.saveloadservice.exportconfigfile(this.formservice.getformdata",{"_index":1995,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.saveloadservice.formatjsodata(testdata.satellites",{"_index":2903,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.saveloadservice.importconfigfile(files",{"_index":1996,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.saveloadservice.importjsatorbconfigfile(files",{"_index":2905,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.saveloadservice.importjsodata(this.jsodata.title",{"_index":2923,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.selectedsatellite",{"_index":2919,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.selectedstation",{"_index":2921,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.sendtoast(msg",{"_index":1759,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.shouldlog(level",{"_index":1774,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.showselector",{"_index":31,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["this.sr",{"_index":2431,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.sr.text(`${sr.toprecision(precision",{"_index":2462,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.step",{"_index":2548,"title":{},"body":{"components/StepbarComponent.html":{}}}],["this.storedroutes.get(route.routeconfig!.path",{"_index":490,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["this.storedroutes.get(route.routeconfig.path",{"_index":488,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["this.storedroutes.set(route.routeconfig!.path",{"_index":485,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["this.subscribetochanges",{"_index":689,"title":{},"body":{"components/FormComponent.html":{}}}],["this.svg",{"_index":2415,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["this.svg.append('text').attr('x",{"_index":2427,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.template.template.components.foreach((componenttemplate",{"_index":974,"title":{},"body":{"injectables/FormService.html":{}}}],["this.templates",{"_index":1447,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.templates[this.componentid",{"_index":1466,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.title",{"_index":962,"title":{},"body":{"injectables/FormService.html":{}}}],["this.titleinput?.nativeelement.focus",{"_index":1980,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.toastr.error(message",{"_index":1776,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.toastr.show(title",{"_index":1780,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.toastr.success(message",{"_index":1779,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.toastr.warning(message",{"_index":1778,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.unsubscribetochanges",{"_index":688,"title":{},"body":{"components/FormComponent.html":{}}}],["this.updatediagram(geo",{"_index":2439,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.updatediagram(obs.geometry",{"_index":2443,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.updategraphdata(value",{"_index":2655,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.updatelabels(newscenario",{"_index":2699,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.updatelbscenario(this.powerin",{"_index":2642,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.updatelbscenario(value",{"_index":2638,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.updatestepsvalidity(this.componentid",{"_index":1488,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.validity",{"_index":686,"title":{},"body":{"components/FormComponent.html":{}}}],["this.validity.steps",{"_index":1454,"title":{},"body":{"components/LayoutComponent.html":{},"components/StepbarComponent.html":{}}}],["this.validity.steps[key",{"_index":2547,"title":{},"body":{"components/StepbarComponent.html":{}}}],["this.validity.steps[step",{"_index":1508,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.validvalidator(value.value",{"_index":553,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["this.verticallinesgroup",{"_index":2692,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.verticallinesgroup.selectall('line').remove",{"_index":2733,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.width",{"_index":2666,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.writetolog(msg",{"_index":1754,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.x",{"_index":2674,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.x.domain([0",{"_index":2677,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.y",{"_index":2676,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.y.domain([max",{"_index":2710,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.yagigaincomputation(params",{"_index":82,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["threshold",{"_index":1077,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["through",{"_index":539,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["throwerror",{"_index":349,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["throwerror(error",{"_index":444,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["tidied",{"_index":1496,"title":{},"body":{"components/LayoutComponent.html":{}}}],["ties",{"_index":2780,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["tight",{"_index":2489,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["timeend",{"_index":3072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["times",{"_index":967,"title":{},"body":{"injectables/FormService.html":{}}}],["timestart",{"_index":3068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":197,"title":{},"body":{"components/CardComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{}}}],["titleinput",{"_index":1918,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tle",{"_index":2248,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["tle1",{"_index":1213,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["tle2",{"_index":1211,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["toast",{"_index":1806,"title":{},"body":{"modules/LoggerModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastclass",{"_index":1884,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastconfig",{"_index":1883,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastpackage",{"_index":1869,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastr",{"_index":366,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"dependencies.html":{}}}],["toastr/issues/339#issuecomment",{"_index":1866,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastref",{"_index":1870,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastref(null",{"_index":1886,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastrmodule",{"_index":1802,"title":{},"body":{"modules/LoggerModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastrmodule.forroot",{"_index":1804,"title":{},"body":{"modules/LoggerModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastrservice",{"_index":1719,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["toastrtestingmodule",{"_index":1887,"title":{"modules/ToastrTestingModule.html":{}},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"modules.html":{}}}],["todo",{"_index":361,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"injectables/SaveLoadService.html":{},"interfaces/WarnFn.html":{}}}],["toggleresults",{"_index":316,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["token",{"_index":1364,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["tokens",{"_index":1889,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["tools",{"_index":2079,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["tooltip",{"_index":2991,"title":{},"body":{"dependencies.html":{}}}],["tooltips",{"_index":224,"title":{},"body":{"components/CardComponent.html":{}}}],["top",{"_index":1548,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["total",{"_index":2481,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["tracks",{"_index":911,"title":{},"body":{"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{}}}],["transform",{"_index":1529,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["transition",{"_index":2062,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["transition('void",{"_index":2069,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["translate(0",{"_index":2696,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["translatey",{"_index":2070,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["transmission",{"_index":980,"title":{},"body":{"injectables/FormService.html":{}}}],["transmitter",{"_index":1086,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["transmitter_antenna",{"_index":1107,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["transmitter_gs",{"_index":1184,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["transparent",{"_index":2137,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["tree",{"_index":180,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["tried",{"_index":1232,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["trigger",{"_index":2063,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["trigger('panelinout",{"_index":2068,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["triggered",{"_index":2792,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["trouble",{"_index":2706,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["true",{"_index":38,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":2486,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["tslib",{"_index":3014,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":122,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["turns",{"_index":119,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["turnspacing",{"_index":121,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["twice",{"_index":1842,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["two",{"_index":3022,"title":{},"body":{"index.html":{}}}],["tx",{"_index":563,"title":{},"body":{"classes/DrawingDefault.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["txantennamismatch",{"_index":1124,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["txcableloss",{"_index":1120,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["txconnectorloss",{"_index":1122,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockFormService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3054,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1736,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["types",{"_index":144,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"injectables/SaveLoadService.html":{},"interfaces/Template.html":{}}}],["typescript",{"_index":2436,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["u",{"_index":1878,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["ui",{"_index":2080,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["ul_atmosphere",{"_index":1037,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ul_carrier",{"_index":1038,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ul_gs_tx_antenna",{"_index":1039,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ul_receiver_sc",{"_index":1040,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ul_sc_rx_antenna",{"_index":1041,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ul_transmitter_gs",{"_index":1042,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ulcarrier",{"_index":1424,"title":{},"body":{"components/LayoutComponent.html":{}}}],["ulreceiver",{"_index":1426,"title":{},"body":{"components/LayoutComponent.html":{}}}],["ultransmitter",{"_index":1425,"title":{},"body":{"components/LayoutComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["undefined",{"_index":330,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{},"components/WelcomeComponent.html":{}}}],["underline",{"_index":2106,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["unexpected",{"_index":2215,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":536,"title":{},"body":{"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"interfaces/WarnFn.html":{},"index.html":{}}}],["unitcontrol",{"_index":1013,"title":{},"body":{"injectables/FormService.html":{}}}],["units",{"_index":96,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{}}}],["unknown",{"_index":533,"title":{},"body":{"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["unless",{"_index":2856,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["unlimited",{"_index":2322,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["unsaved",{"_index":1993,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["unsubscribetochanges",{"_index":624,"title":{},"body":{"components/FormComponent.html":{}}}],["until",{"_index":1137,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["untitled_link_budget",{"_index":916,"title":{},"body":{"injectables/FormService.html":{}}}],["unused",{"_index":450,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"components/SimpleDocumentationComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["unvisited",{"_index":1462,"title":{},"body":{"components/LayoutComponent.html":{}}}],["up",{"_index":790,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["update",{"_index":1366,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["updated",{"_index":966,"title":{},"body":{"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{}}}],["updatediagram",{"_index":2362,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["updatediagram(geo",{"_index":2372,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["updateendpoint",{"_index":1343,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["updateendpoint(newendpoint",{"_index":1350,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["updategraphdata",{"_index":2586,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["updategraphdata(newscenario",{"_index":2603,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["updatejsodata",{"_index":1344,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["updatejsodata(data",{"_index":1353,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["updatelabels",{"_index":2587,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["updatelabels(newscenario",{"_index":2606,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["updatelbscenario",{"_index":2588,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["updatelbscenario(id",{"_index":2829,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["updatelbscenario(power",{"_index":2608,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["updateon",{"_index":994,"title":{},"body":{"injectables/FormService.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["updateon:blur",{"_index":2791,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["updateresult",{"_index":317,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["updateresult(value",{"_index":338,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["updates",{"_index":951,"title":{},"body":{"injectables/FormService.html":{},"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{}}}],["updatestepsvalidity",{"_index":1399,"title":{},"body":{"components/LayoutComponent.html":{}}}],["updatestepsvalidity(id",{"_index":1408,"title":{},"body":{"components/LayoutComponent.html":{}}}],["updatevalidity",{"_index":2523,"title":{},"body":{"components/StepbarComponent.html":{}}}],["updating",{"_index":1004,"title":{},"body":{"injectables/FormService.html":{},"injectables/SaveLoadService.html":{}}}],["uplink",{"_index":168,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{}}}],["uppercase",{"_index":1530,"title":{},"body":{"components/LayoutComponent.html":{}}}],["uri",{"_index":2314,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["url",{"_index":368,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/SaveLoadService.html":{}}}],["urlin",{"_index":325,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["use",{"_index":788,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{},"index.html":{}}}],["useclass",{"_index":1592,"title":{},"body":{"modules/LayoutModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["used",{"_index":65,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/DrawingDefault.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":713,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["user",{"_index":143,"title":{},"body":{"interfaces/AntennaField.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{}}}],["uses",{"_index":52,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["useselecteddata",{"_index":2881,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["usevalue",{"_index":1850,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["using",{"_index":1156,"title":{},"body":{"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{}}}],["usually",{"_index":528,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/SimpleDocumentationComponent.html":{},"interfaces/WarnFn.html":{}}}],["utf8",{"_index":2228,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["v",{"_index":1460,"title":{},"body":{"components/LayoutComponent.html":{}}}],["v\"+version",{"_index":2084,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["v0.2",{"_index":1945,"title":{},"body":{"components/NavbarComponent.html":{}}}],["v3",{"_index":2088,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["val",{"_index":552,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["valid",{"_index":667,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/StepbarComponent.html":{}}}],["valid.required",{"_index":2819,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["valid[required",{"_index":2818,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["validation",{"_index":1118,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["validationerrors",{"_index":512,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["validator",{"_index":830,"title":{},"body":{"components/FormComponent.html":{}}}],["validatorfn",{"_index":505,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["validators",{"_index":541,"title":{},"body":{"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/WarnFn.html":{}}}],["validators.maxlength(6",{"_index":1001,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.nullvalidator",{"_index":1015,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.pattern",{"_index":990,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.required",{"_index":1000,"title":{},"body":{"injectables/FormService.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["validities",{"_index":1491,"title":{},"body":{"components/LayoutComponent.html":{}}}],["validity",{"_index":370,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/StepbarComponent.html":{}}}],["validity(value",{"_index":2540,"title":{},"body":{"components/StepbarComponent.html":{}}}],["validvalidator",{"_index":503,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["value",{"_index":171,"title":{},"body":{"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockFormService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.gain",{"_index":2810,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["value.label",{"_index":1614,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["value.position",{"_index":1615,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["value.unit",{"_index":769,"title":{},"body":{"components/FormComponent.html":{}}}],["value.value",{"_index":781,"title":{},"body":{"components/FormComponent.html":{}}}],["value.width",{"_index":1616,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["value:any",{"_index":2907,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["valuechange",{"_index":735,"title":{},"body":{"components/FormComponent.html":{}}}],["valueline",{"_index":2711,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["values",{"_index":601,"title":{},"body":{"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["var",{"_index":243,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["variable",{"_index":1482,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1748,"title":{"miscellaneous/variables.html":{}},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/SyntheticDrawingComponent.html":{},"miscellaneous/variables.html":{}}}],["variables.sass",{"_index":214,"title":{},"body":{"components/CardComponent.html":{},"components/StepbarComponent.html":{}}}],["vars",{"_index":2851,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["verification",{"_index":2285,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["version",{"_index":1854,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"modules/ToastrTestingModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vert",{"_index":2737,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["vertical",{"_index":2728,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["verticallinesgroup",{"_index":2584,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["via",{"_index":2476,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"index.html":{}}}],["view",{"_index":2647,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/ViewComponent.html":{}}}],["view'},{'name",{"_index":276,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["view.component.html",{"_index":2871,"title":{},"body":{"components/ViewComponent.html":{}}}],["view.component.scss",{"_index":2870,"title":{},"body":{"components/ViewComponent.html":{}}}],["view/view.component",{"_index":1583,"title":{},"body":{"modules/LayoutModule.html":{}}}],["viewbox",{"_index":2678,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["viewchild",{"_index":1955,"title":{},"body":{"components/NavbarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["viewchild('diagram",{"_index":2613,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["viewchild('titleinput",{"_index":1949,"title":{},"body":{"components/NavbarComponent.html":{}}}],["viewcomponent",{"_index":275,"title":{"components/ViewComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["visibility",{"_index":2075,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["void",{"_index":203,"title":{},"body":{"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LinkBudgetScenario.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{}}}],["vswr",{"_index":2082,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["w",{"_index":1115,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["want",{"_index":692,"title":{},"body":{"components/FormComponent.html":{},"classes/HelperFunctions.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/StepbarComponent.html":{}}}],["warn",{"_index":1723,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/enumerations.html":{}}}],["warn(msg",{"_index":1757,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["warnfn",{"_index":522,"title":{"interfaces/WarnFn.html":{}},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{},"coverage.html":{}}}],["warning",{"_index":141,"title":{},"body":{"interfaces/AntennaField.html":{},"components/CardComponent.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/StepbarComponent.html":{},"interfaces/Template.html":{}}}],["warnings",{"_index":521,"title":{},"body":{"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"interfaces/WarnFn.html":{}}}],["watts",{"_index":1183,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["way",{"_index":737,"title":{},"body":{"components/FormComponent.html":{},"injectables/JSatOrbLinkService.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["we'll",{"_index":152,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/EmptyForm.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{}}}],["we're",{"_index":62,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["weight",{"_index":2129,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["welcome",{"_index":278,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["welcome.component",{"_index":2947,"title":{},"body":{"modules/WelcomeModule.html":{}}}],["welcome.component.html",{"_index":2875,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["welcome.component.scss",{"_index":2874,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["welcomecomponent",{"_index":277,"title":{"components/WelcomeComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"overview.html":{}}}],["welcomemodule",{"_index":2941,"title":{"modules/WelcomeModule.html":{}},"body":{"modules/WelcomeModule.html":{},"modules.html":{},"overview.html":{}}}],["well",{"_index":453,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["white",{"_index":231,"title":{},"body":{"components/CardComponent.html":{},"components/LayoutComponent.html":{}}}],["wide",{"_index":234,"title":{},"body":{"components/CardComponent.html":{}}}],["width",{"_index":89,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["width:250px;//not",{"_index":1512,"title":{},"body":{"components/LayoutComponent.html":{}}}],["width:360px",{"_index":859,"title":{},"body":{"components/FormComponent.html":{}}}],["width:480px",{"_index":860,"title":{},"body":{"components/FormComponent.html":{}}}],["width:50",{"_index":2756,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["width:900px",{"_index":1514,"title":{},"body":{"components/LayoutComponent.html":{}}}],["width:90px",{"_index":851,"title":{},"body":{"components/FormComponent.html":{}}}],["wikimedia",{"_index":2477,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["window.addeventlistener('beforeunload",{"_index":1988,"title":{},"body":{"components/NavbarComponent.html":{}}}],["within",{"_index":2017,"title":{},"body":{"components/NavbarComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["without",{"_index":998,"title":{},"body":{"injectables/FormService.html":{},"classes/FormsTemplate.html":{}}}],["won't",{"_index":1335,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/SaveLoadService.html":{}}}],["won\\'t",{"_index":1336,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["work",{"_index":2311,"title":{},"body":{"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["workaround",{"_index":1841,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["working",{"_index":1513,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{}}}],["workspace",{"_index":3021,"title":{},"body":{"index.html":{}}}],["worst",{"_index":2270,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["wrapper",{"_index":846,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{}}}],["writetolog",{"_index":1810,"title":{},"body":{"injectables/LoggerService.html":{}}}],["writetolog(msg",{"_index":1781,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["wrong",{"_index":836,"title":{},"body":{"components/FormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["x",{"_index":1596,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["x((d",{"_index":2712,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["x(0",{"_index":2714,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["x(d.x",{"_index":2713,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["x_pol",{"_index":1053,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["xss",{"_index":2309,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["y",{"_index":1597,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["y((d",{"_index":2715,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["y(0",{"_index":2717,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["y(d.y",{"_index":2716,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["yagi",{"_index":106,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["yagiantenna",{"_index":33,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["yagibeamwidthcomputation",{"_index":79,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["yagigaincomputation",{"_index":48,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["yagioptimumelements",{"_index":76,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["yaxis",{"_index":2694,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["yes",{"_index":328,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/FormService.html":{},"injectables/LoggerService.html":{}}}],["z",{"_index":1550,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["zone.js",{"_index":3016,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":288,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Antenna.html":{"url":"interfaces/Antenna.html","title":"interface - Antenna","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Antenna\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/Antennas.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Form\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            beamWidthCalculation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gainCalculation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        beamWidthCalculation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beamWidthCalculation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gainCalculation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gainCalculation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Field, Form } from './Form.model';\n\n// export class Antenna {\n//   public showSelector: boolean;\n//   // public template: Antenna;\n//   // public gain: number;\n//   // public beamwidth: number;\n\n//   constructor() {\n//     this.showSelector = false;\n//   }\n// }\n\n// export class YagiAntenna extends Antenna {\n//   constructor(private logger: LoggerService) {\n//     super();\n//     this.showSelector = true;\n//   }\n\n//   public computeGain(): number {\n//     this.logger.warn('computeGain not implemented for YagiAntenna');\n//     return 0;\n//   }\n\n//   public computeBeamWidth(): number {\n//     this.logger.warn('computeBeamWidth not implemented for YagiAntenna');\n//     return 0;\n//   }\n// }\nexport interface Antenna extends Form {\n  gainCalculation?: string,\n  beamWidthCalculation?: string\n}\nexport const AntennasUtilsFunctions = {\n  yagiGainComputation: function (params: any): number {\n    /**\n     * AMSAT uses a LUT for this computation.\n     * There seems to exist Python library that could handle these calculations.\n     * For now, we're interpolating the data used in AMSAT\n     * This function could also call API for complex calculations\n     */\n    console.warn('Yagi Gain Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round(12.316 * length ** 0.2665 * 100) / 100;\n  },\n  yagiOptimumElements: function (params: any): number {\n    console.warn('Yagi Beamwidth Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round((2.632 * length ** 0.2665 + 3.149) * 100) / 100;\n  },\n  yagiBeamwidthComputation: function (params: any): number {\n    console.warn('Yagi Beamwidth Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round(Math.sqrt(40000 / (10 ** (this.yagiGainComputation(params) / 10))) * 100) / 100;\n  },\n};\nexport abstract class Antennas {\n  static genericAntenna : Antenna = { // This template is always used to display gain and width\n    // componentType: \"antenna\",\n    componentId: '',\n    params: [{\n      id: 'antMaxGain',\n      desc: 'Max Gain',\n      units: ['dBi'],\n      // dimension:\"iso_gain\",\n      default: 14.0,\n    },\n    {\n      id: 'antBeamWidth',\n      desc: 'Beamwidth',\n      units: ['°', 'rad'],\n      // dimension:\"angle\",\n      default: 35.0,\n    },\n    ],\n  };\n\n  static yagiAntenna: Antenna = {\n    // componentType: \"antenna\",\n    componentId: 'yagiAntenna',\n    componentName: 'Yagi',\n    image: 'assets/antennas/yagi.jpg',\n    gainCalculation: 'yagiGainComputation',\n    params: [\n      {\n        id: 'boomLength',\n        desc: 'Boom Length',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.4,\n      },\n      {\n        id: 'elements',\n        desc: 'Number of elements',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.4,\n      },\n    ],\n  };\n\n  static helixAntenna: Antenna = {\n    // componentType: \"antenna\",\n    componentId: 'helixAntenna',\n    componentName: 'Helicoidal',\n    image: 'assets/antennas/helix.jpg',\n    params: [\n      {\n        id: 'turns',\n        desc: 'Turns',\n        units: [],\n        // dimension: \"adimensional\",\n        default: 10,\n      },\n      {\n        id: 'turnSpacing',\n        desc: 'Turn Spacing',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.25,\n      },\n      {\n        id: 'circumference',\n        desc: 'Circumference',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 1,\n      },\n    ],\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AntennaField.html":{"url":"interfaces/AntennaField.html","title":"interface - AntennaField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AntennaField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            antennaId\n                                        \n                                \n                                \n                                        \n                                            antennaValues\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        antennaId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        antennaId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        antennaValues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        antennaValues:         Field[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Field[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Field {\n  id: string; // id used by API to recognize label\n  desc: string; // the label displayed, human-readable\n  type?: 'gain' | 'loss'; // Used to display appropriate warning (e.g. user types a positive loss)\n  units: string[]; // A list of possible units, the first one being displayed by default\n  options?: 'field' | 'antenna'; // Optional, since by default we'll assume it's a field\n  optionsField?: Field[];\n  default: number;\n  alternative?: Form;\n}\n\nexport interface Form {\n  /// /componentType:string,\n  componentId: string;\n  parentComponent?: string;\n  hasAntenna?: boolean;\n  componentName?: string;\n  image?: string;\n  params: Field[];\n\n  parent?: string;\n  computeFn?: string;\n}\n\nexport interface AntennaField {\n  id: string;\n  antennaId: string;\n\n  antennaValues: Field[];\n}\n\nexport interface Template {\n  components: Form[];\n}\n\nexport class EmptyForm implements Form {\n  // componentType: '',\n  componentId: string;\n  parentComponent?: string;\n  params: Field[];\n\n  constructor() {\n    this.componentId = 'empty';\n    this.parentComponent = 'uplink';\n    this.params = [];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Antennas.html":{"url":"classes/Antennas.html","title":"class - Antennas","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Antennas\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/Antennas.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                genericAntenna\n                            \n                            \n                                    Static\n                                helixAntenna\n                            \n                            \n                                    Static\n                                yagiAntenna\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        genericAntenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Antenna\n\n                    \n                \n                \n                    \n                        Default value : { // This template is always used to display gain and width\n    // componentType: \"antenna\",\n    componentId: '',\n    params: [{\n      id: 'antMaxGain',\n      desc: 'Max Gain',\n      units: ['dBi'],\n      // dimension:\"iso_gain\",\n      default: 14.0,\n    },\n    {\n      id: 'antBeamWidth',\n      desc: 'Beamwidth',\n      units: ['°', 'rad'],\n      // dimension:\"angle\",\n      default: 35.0,\n    },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/Antennas.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        helixAntenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Antenna\n\n                    \n                \n                \n                    \n                        Default value : {\n    // componentType: \"antenna\",\n    componentId: 'helixAntenna',\n    componentName: 'Helicoidal',\n    image: 'assets/antennas/helix.jpg',\n    params: [\n      {\n        id: 'turns',\n        desc: 'Turns',\n        units: [],\n        // dimension: \"adimensional\",\n        default: 10,\n      },\n      {\n        id: 'turnSpacing',\n        desc: 'Turn Spacing',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.25,\n      },\n      {\n        id: 'circumference',\n        desc: 'Circumference',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 1,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/Antennas.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        yagiAntenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Antenna\n\n                    \n                \n                \n                    \n                        Default value : {\n    // componentType: \"antenna\",\n    componentId: 'yagiAntenna',\n    componentName: 'Yagi',\n    image: 'assets/antennas/yagi.jpg',\n    gainCalculation: 'yagiGainComputation',\n    params: [\n      {\n        id: 'boomLength',\n        desc: 'Boom Length',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.4,\n      },\n      {\n        id: 'elements',\n        desc: 'Number of elements',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.4,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/Antennas.ts:86\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Form } from './Form.model';\n\n// export class Antenna {\n//   public showSelector: boolean;\n//   // public template: Antenna;\n//   // public gain: number;\n//   // public beamwidth: number;\n\n//   constructor() {\n//     this.showSelector = false;\n//   }\n// }\n\n// export class YagiAntenna extends Antenna {\n//   constructor(private logger: LoggerService) {\n//     super();\n//     this.showSelector = true;\n//   }\n\n//   public computeGain(): number {\n//     this.logger.warn('computeGain not implemented for YagiAntenna');\n//     return 0;\n//   }\n\n//   public computeBeamWidth(): number {\n//     this.logger.warn('computeBeamWidth not implemented for YagiAntenna');\n//     return 0;\n//   }\n// }\nexport interface Antenna extends Form {\n  gainCalculation?: string,\n  beamWidthCalculation?: string\n}\nexport const AntennasUtilsFunctions = {\n  yagiGainComputation: function (params: any): number {\n    /**\n     * AMSAT uses a LUT for this computation.\n     * There seems to exist Python library that could handle these calculations.\n     * For now, we're interpolating the data used in AMSAT\n     * This function could also call API for complex calculations\n     */\n    console.warn('Yagi Gain Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round(12.316 * length ** 0.2665 * 100) / 100;\n  },\n  yagiOptimumElements: function (params: any): number {\n    console.warn('Yagi Beamwidth Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round((2.632 * length ** 0.2665 + 3.149) * 100) / 100;\n  },\n  yagiBeamwidthComputation: function (params: any): number {\n    console.warn('Yagi Beamwidth Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round(Math.sqrt(40000 / (10 ** (this.yagiGainComputation(params) / 10))) * 100) / 100;\n  },\n};\nexport abstract class Antennas {\n  static genericAntenna : Antenna = { // This template is always used to display gain and width\n    // componentType: \"antenna\",\n    componentId: '',\n    params: [{\n      id: 'antMaxGain',\n      desc: 'Max Gain',\n      units: ['dBi'],\n      // dimension:\"iso_gain\",\n      default: 14.0,\n    },\n    {\n      id: 'antBeamWidth',\n      desc: 'Beamwidth',\n      units: ['°', 'rad'],\n      // dimension:\"angle\",\n      default: 35.0,\n    },\n    ],\n  };\n\n  static yagiAntenna: Antenna = {\n    // componentType: \"antenna\",\n    componentId: 'yagiAntenna',\n    componentName: 'Yagi',\n    image: 'assets/antennas/yagi.jpg',\n    gainCalculation: 'yagiGainComputation',\n    params: [\n      {\n        id: 'boomLength',\n        desc: 'Boom Length',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.4,\n      },\n      {\n        id: 'elements',\n        desc: 'Number of elements',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.4,\n      },\n    ],\n  };\n\n  static helixAntenna: Antenna = {\n    // componentType: \"antenna\",\n    componentId: 'helixAntenna',\n    componentName: 'Helicoidal',\n    image: 'assets/antennas/helix.jpg',\n    params: [\n      {\n        id: 'turns',\n        desc: 'Turns',\n        units: [],\n        // dimension: \"adimensional\",\n        default: 10,\n      },\n      {\n        id: 'turnSpacing',\n        desc: 'Turn Spacing',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.25,\n      },\n      {\n        id: 'circumference',\n        desc: 'Circumference',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 1,\n      },\n    ],\n  };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/card/card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                collapsed\n                            \n                            \n                                faAngleDown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collapseCard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isWide\n                            \n                            \n                                styleClass\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isWide\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/card/card.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        styleClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/card/card.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/card/card.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        collapseCard\n                        \n                    \n                \n            \n            \n                \ncollapseCard()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/card/card.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        collapsed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/card/card.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/card/card.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'lib-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent {\n  @Input() public styleClass: string = '';\n\n  @Input() title?: string;\n\n  @Input() public isWide?: boolean = false;\n\n  faAngleDown = faAngleDown;\n\n  public collapsed: boolean = false;\n\n  collapseCard() {\n    this.collapsed = !this.collapsed;\n  }\n}\n\n    \n\n    \n        \n  \n    {{title}}\n    \n      \n    \n  \n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                @import '~bulma/sass/utilities/derived-variables.sass';\n// @import '~bulma/bulma.sass';\n\n.card-header-title {\n  margin-bottom:0;\n}\n\n.card {\n  margin-bottom: 20px;\n  // overflow:hidden; //disabled to allow tooltips to overflow\n  //width : 361.2px;\n}\n.card.is-danger {\n  background-color: $danger;\n  color: white;\n}\n.card.is-success {\n  background-color: $success;\n  color: white;\n}\n.card.is-warning {\n  background-color: $warning;\n  color: darkslategray;\n}\n.wide {\n  width: auto !important;\n}\n.card-header {\n  background-color: rgb(255, 255, 255);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{title}}                                  '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardModule.html":{"url":"modules/CardModule.html","title":"module - CardModule","body":"\n                   \n\n\n\n\n    Modules\n    CardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CardModule\n\n\n\ncluster_CardModule_exports\n\n\n\ncluster_CardModule_declarations\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nCardModule\n\nCardModule\n\nCardModule -->\n\nCardComponent->CardModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardModule->CardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/card/card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { CardComponent } from './card.component';\n\n@NgModule({\n  declarations: [\n    CardComponent,\n  ],\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n  ],\n  exports: [\n    CardComponent,\n  ],\n})\nexport class CardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComputeLinkBudgetService.html":{"url":"injectables/ComputeLinkBudgetService.html","title":"injectable - ComputeLinkBudgetService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComputeLinkBudgetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                computeLayout\n                            \n                            \n                                displayFooter\n                            \n                            \n                                displayingResults\n                            \n                            \n                                    Public\n                                linkBudgetSynthesis\n                            \n                            \n                                    Public\n                                result\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                computeLinkBudget\n                            \n                            \n                                getResult$\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                toggleResults\n                            \n                            \n                                updateResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: any, httpClient: HttpClient, formService: FormService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        computeLinkBudget\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeLinkBudget(dataIn?: any, urlIn?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataIn\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    urlIn\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResult$\n                        \n                    \n                \n            \n            \n                \ngetResult$()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     BehaviorSubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleResults()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateResult\n                        \n                    \n                \n            \n            \n                \nupdateResult(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        computeLayout\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"sidebar\" | string | \"footer\"\n\n                    \n                \n                \n                    \n                        Default value : 'sidebar'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayFooter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayingResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        linkBudgetSynthesis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:21\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { LoggerService } from '../shared/logger/logger.service';\nimport { FormService } from '../form/form.service';\nimport { ENVIRONMENT_TOKEN } from '../shared/dependencies';\nimport { APIResult } from '../shared/models/Results.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport default class ComputeLinkBudgetService {\n  displayFooter: boolean = false;\n  displayingResults: boolean = true;\n  computeLayout: 'sidebar' | '' | 'footer' = 'sidebar';\n\n  // TODO: Should check that API is reachable with a ping and send a toastr\n\n  public result: BehaviorSubject = new BehaviorSubject([]);\n\n  public linkBudgetSynthesis: Observable = new Observable();\n\n  constructor(\n    @Inject(ENVIRONMENT_TOKEN) private environment: any,\n    private httpClient: HttpClient,\n    private formService: FormService,\n    private logger: LoggerService\n  ) {}\n\n  public computeLinkBudget(dataIn?: any, urlIn?: string): Observable | undefined {\n    let data = dataIn;\n    let url = urlIn;\n\n    if (data === undefined) {\n      // this.logger.warn('Form validity', this.formService.globalForm.valid);\n\n      if (!this.formService.globalForm.valid) {\n        // In case the form is invalid\n        this.logger.warn('Errors in the inputed data', 'Please check the validity of entered data');\n        return;\n      }\n      data = this.formService.getFormData();\n      if (data === {}) {\n        this.logger.warn('No data to process', 'Please check the inputed data');\n      }\n    }\n\n    const POSTData = {\n      data,\n      options: {\n        calculation: 'linkpredict', // #TODO: Hardcoded, to implement\n        type: 'static',\n        // debug: true, // This adds delay to the request\n      },\n    };\n\n    if (url === undefined) {\n      url = `${this.environment.luplinkEndpoint}/linkBudget/${POSTData.options.type}`;\n    }\n\n    // this.logger.debug('Sending POST request!', data);\n\n    this.linkBudgetSynthesis = this.httpClient.post(url, POSTData, { responseType: 'json' }).pipe(\n      catchError(this.handleError.bind(this)) // Binding the context of the call in order to still have access to logger\n    );\n\n    this.displayingResults = true;\n    // this.result.next(this.linkBudgetSynthesis)\n\n    // TODO: Check data validity before making it available and test this\n\n    // eslint-disable-next-line consistent-return\n    return this.linkBudgetSynthesis;\n  }\n\n  public toggleResults() {\n    this.displayingResults = !this.displayingResults;\n  }\n\n  updateResult(value: any) {\n    this.result.next(value);\n  }\n\n  getResult$(): BehaviorSubject {\n    return this.result;\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    // This handles HTTP errors\n    // this.logger.error(\"POST request error!\")\n    if (error.error instanceof Error) {\n      // A client-side or network error occured.\n      this.logger.error('Client-side / Network error', [error.message, error.error.stack]);\n      // Displaying as much information as possible in order to choose the best to display later.\n      this.logger.debug('full error (pick pertinent information to display to user & developper', error.error);\n    } else {\n      // The backend returned an error code\n      this.logger.error('Backend Error', error.message);\n    }\n    return throwError(error);\n    // 'An error occured in Custom ErrorHandler'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouteReuseStrategy.html":{"url":"classes/CustomRouteReuseStrategy.html","title":"class - CustomRouteReuseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouteReuseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts\n        \n\n\n            \n                Description\n            \n            \n                Unused for now since RouteReuse does not goes well when with JSatOrb integration\n\n            \n\n\n            \n                Implements\n            \n            \n                            RouteReuseStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                storedRoutes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                retrieve\n                            \n                            \n                                shouldAttach\n                            \n                            \n                                shouldDetach\n                            \n                            \n                                shouldReuseRoute\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storedRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        retrieve\n                        \n                    \n                \n            \n            \n                \nretrieve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DetachedRouteHandle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldAttach\n                        \n                    \n                \n            \n            \n                \nshouldAttach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldDetach\n                        \n                    \n                \n            \n            \n                \nshouldDetach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldReuseRoute\n                        \n                    \n                \n            \n            \n                \nshouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    future\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    curr\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n            \n                \nstore(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                DetachedRouteHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { RouteReuseStrategy, ActivatedRouteSnapshot, DetachedRouteHandle } from '@angular/router';\n\n/**\n * Unused for now since RouteReuse does not goes well when with JSatOrb integration\n */\nexport class CustomRouteReuseStrategy implements RouteReuseStrategy {\n  private storedRoutes = new Map();\n\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    console.log(`detach ${route.url}`);\n    return true; // TODO: Store all routes for now, to correct\n  }\n\n  store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n    if (route != null) {\n      this.storedRoutes.set(route.routeConfig!.path!, handle);\n    }\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    console.log(`attach ${route.url}`);\n    return !!route.routeConfig && !!this.storedRoutes.get(route.routeConfig.path!);// Not clean\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n    return this.storedRoutes.get(route.routeConfig!.path!)!;// Not clean\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    console.log(`reuse ${curr.url} -> ${future.url}`);\n    return future.routeConfig === curr.routeConfig && !curr.data.noReuse;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomValidators.html":{"url":"injectables/CustomValidators.html","title":"injectable - CustomValidators","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/custom-field.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fieldValidator\n                            \n                            \n                                    Public\n                                positiveLossWarningValidator\n                            \n                            \n                                    Public\n                                requiredValidator\n                            \n                            \n                                    Public\n                                validValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/shared/custom-field.ts:16\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fieldValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/custom-field.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        positiveLossWarningValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/custom-field.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requiredValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/custom-field.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/custom-field.ts:34\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractControl, FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n// https://dev.to/vishesh/custom-error-handling-in-angular-reactive-forms-5f05\n\nexport class FormControlWarn extends FormControl {\n  warnings: any;\n}\n\nexport interface WarnFn extends ValidatorFn {}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomValidators {\n  constructor() {}\n\n  public positiveLossWarningValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    (control).warnings =\n      control.get('value')?.value > 0 ? 'Loss is algebraic here and usually  {\n    if (!control && control !== 0) {\n      return {\n        error: 'Please enter a value here',\n      };\n    }\n    return null;\n  };\n\n  public validValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (control.errors === null) {\n      return null;\n    }\n    let { pattern } = control.errors;\n    if (pattern) {\n      return {\n        error: 'Please enter a numerical value',\n      };\n    }\n    return {\n      error: 'Unknown error (3)',\n    };\n  };\n\n  public fieldValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    let value = control.get('value');\n    const unit = control.get('unit');\n\n    /*\n  Pass value Abstract control through multiple validators and output the result\n  TODO: order them by importance and only show the most jarring issue (or should we show all errors at once?)\n  -required\n  -numerical\n  -bounds\n  - ?\n  */\n    let req = this.requiredValidator(value?.value);\n    //let val = this.validValidator(value.value)\n    //let errList = [req, val];\n\n    // for(let i = 0; i \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DrawingDefault.html":{"url":"classes/DrawingDefault.html","title":"class - DrawingDefault","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DrawingDefault\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/synthetic-drawing/models/default.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                defaultComponents\n                            \n                            \n                                    Static\n                                defaultGains\n                            \n                            \n                                    Static\n                                powerIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        defaultComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 'tx',\n      component: {\n        label: 'Ptx',\n        gain: 0,\n        linear: true,\n        position: 0,\n        width: 15,\n      },\n    },\n    {\n      id: 'cableTx',\n      component: {\n        label: 'Ltx',\n        gain: DrawingDefault.defaultGains.cableTx,\n        linear: true,\n        position: 15,\n        width: 10,\n      },\n    },\n    {\n      id: 'antTx',\n      component: {\n        label: 'Gtx',\n        gain: DrawingDefault.defaultGains.antTx,\n        linear: false,\n        position: 25,\n        width: 10,\n      },\n    },\n    {\n      id: 'fsl',\n      component: {\n        label: 'Lpath',\n        gain: DrawingDefault.defaultGains.fsl,\n        linear: true,\n        position: 35,\n        width: 30,\n      },\n    },\n    {\n      id: 'antRx',\n      component: {\n        label: 'Grx',\n        gain: DrawingDefault.defaultGains.antRx,\n        linear: false,\n        position: 65,\n        width: 10,\n      },\n    },\n    {\n      id: 'cableRx',\n      component: {\n        label: 'Lrx',\n        gain: DrawingDefault.defaultGains.cableRx,\n        linear: true,\n        position: 75,\n        width: 10,\n      },\n    },\n    {\n      id: 'rx',\n      component: {\n        label: 'Prx',\n        gain: 0,\n        linear: true,\n        position: 85,\n        width: 15,\n      },\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/models/default.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        defaultGains\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    cableTx: -3,\n    antTx: 24,\n    fsl: -125,\n    antRx: 35,\n    cableRx: -5,\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/models/default.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        powerIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/models/default.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { LinkBudgetComponent } from '../../../shared/models/LinkBudgetScenario.model';\n\nexport abstract class DrawingDefault {\n  // This class keeps all the default values used by the synthetic drawing module.\n  static powerIn = 10;\n  static defaultGains = {\n    cableTx: -3,\n    antTx: 24,\n    fsl: -125,\n    antRx: 35,\n    cableRx: -5,\n  };\n  static defaultComponents: { id: string; component: LinkBudgetComponent }[] = [\n    {\n      id: 'tx',\n      component: {\n        label: 'Ptx',\n        gain: 0,\n        linear: true,\n        position: 0,\n        width: 15,\n      },\n    },\n    {\n      id: 'cableTx',\n      component: {\n        label: 'Ltx',\n        gain: DrawingDefault.defaultGains.cableTx,\n        linear: true,\n        position: 15,\n        width: 10,\n      },\n    },\n    {\n      id: 'antTx',\n      component: {\n        label: 'Gtx',\n        gain: DrawingDefault.defaultGains.antTx,\n        linear: false,\n        position: 25,\n        width: 10,\n      },\n    },\n    {\n      id: 'fsl',\n      component: {\n        label: 'Lpath',\n        gain: DrawingDefault.defaultGains.fsl,\n        linear: true,\n        position: 35,\n        width: 30,\n      },\n    },\n    {\n      id: 'antRx',\n      component: {\n        label: 'Grx',\n        gain: DrawingDefault.defaultGains.antRx,\n        linear: false,\n        position: 65,\n        width: 10,\n      },\n    },\n    {\n      id: 'cableRx',\n      component: {\n        label: 'Lrx',\n        gain: DrawingDefault.defaultGains.cableRx,\n        linear: true,\n        position: 75,\n        width: 10,\n      },\n    },\n    {\n      id: 'rx',\n      component: {\n        label: 'Prx',\n        gain: 0,\n        linear: true,\n        position: 85,\n        width: 15,\n      },\n    },\n  ];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmptyForm.html":{"url":"classes/EmptyForm.html","title":"class - EmptyForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmptyForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Form\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentId\n                            \n                            \n                                params\n                            \n                            \n                                    Optional\n                                parentComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/shared/models/Form.model.ts:40\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        componentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/Form.model.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Field[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/Form.model.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        parentComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/Form.model.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Field {\n  id: string; // id used by API to recognize label\n  desc: string; // the label displayed, human-readable\n  type?: 'gain' | 'loss'; // Used to display appropriate warning (e.g. user types a positive loss)\n  units: string[]; // A list of possible units, the first one being displayed by default\n  options?: 'field' | 'antenna'; // Optional, since by default we'll assume it's a field\n  optionsField?: Field[];\n  default: number;\n  alternative?: Form;\n}\n\nexport interface Form {\n  /// /componentType:string,\n  componentId: string;\n  parentComponent?: string;\n  hasAntenna?: boolean;\n  componentName?: string;\n  image?: string;\n  params: Field[];\n\n  parent?: string;\n  computeFn?: string;\n}\n\nexport interface AntennaField {\n  id: string;\n  antennaId: string;\n\n  antennaValues: Field[];\n}\n\nexport interface Template {\n  components: Form[];\n}\n\nexport class EmptyForm implements Form {\n  // componentType: '',\n  componentId: string;\n  parentComponent?: string;\n  params: Field[];\n\n  constructor() {\n    this.componentId = 'empty';\n    this.parentComponent = 'uplink';\n    this.params = [];\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Field.html":{"url":"interfaces/Field.html","title":"interface - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alternative\n                                        \n                                \n                                \n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            optionsField\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            units\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alternative\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alternative:         Form\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Form\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     \"field\" | \"antenna\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"field\" | \"antenna\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionsField\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optionsField:         Field[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Field[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"gain\" | \"loss\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"gain\" | \"loss\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        units:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Field {\n  id: string; // id used by API to recognize label\n  desc: string; // the label displayed, human-readable\n  type?: 'gain' | 'loss'; // Used to display appropriate warning (e.g. user types a positive loss)\n  units: string[]; // A list of possible units, the first one being displayed by default\n  options?: 'field' | 'antenna'; // Optional, since by default we'll assume it's a field\n  optionsField?: Field[];\n  default: number;\n  alternative?: Form;\n}\n\nexport interface Form {\n  /// /componentType:string,\n  componentId: string;\n  parentComponent?: string;\n  hasAntenna?: boolean;\n  componentName?: string;\n  image?: string;\n  params: Field[];\n\n  parent?: string;\n  computeFn?: string;\n}\n\nexport interface AntennaField {\n  id: string;\n  antennaId: string;\n\n  antennaValues: Field[];\n}\n\nexport interface Template {\n  components: Form[];\n}\n\nexport class EmptyForm implements Form {\n  // componentType: '',\n  componentId: string;\n  parentComponent?: string;\n  params: Field[];\n\n  constructor() {\n    this.componentId = 'empty';\n    this.parentComponent = 'uplink';\n    this.params = [];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Form.html":{"url":"interfaces/Form.html","title":"interface - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            componentId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            componentName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            computeFn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hasAntenna\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parentComponent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        componentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        componentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        componentName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        componentName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        computeFn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        computeFn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasAntenna\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasAntenna:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         Field[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Field[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentComponent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentComponent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Field {\n  id: string; // id used by API to recognize label\n  desc: string; // the label displayed, human-readable\n  type?: 'gain' | 'loss'; // Used to display appropriate warning (e.g. user types a positive loss)\n  units: string[]; // A list of possible units, the first one being displayed by default\n  options?: 'field' | 'antenna'; // Optional, since by default we'll assume it's a field\n  optionsField?: Field[];\n  default: number;\n  alternative?: Form;\n}\n\nexport interface Form {\n  /// /componentType:string,\n  componentId: string;\n  parentComponent?: string;\n  hasAntenna?: boolean;\n  componentName?: string;\n  image?: string;\n  params: Field[];\n\n  parent?: string;\n  computeFn?: string;\n}\n\nexport interface AntennaField {\n  id: string;\n  antennaId: string;\n\n  antennaValues: Field[];\n}\n\nexport interface Template {\n  components: Form[];\n}\n\nexport class EmptyForm implements Form {\n  // componentType: '',\n  componentId: string;\n  parentComponent?: string;\n  params: Field[];\n\n  constructor() {\n    this.componentId = 'empty';\n    this.parentComponent = 'uplink';\n    this.params = [];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormComponent.html":{"url":"components/FormComponent.html","title":"component - FormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/form/component/form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-form\n            \n\n            \n                styleUrls\n                ./form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _formTemplate\n                            \n                            \n                                componentName\n                            \n                            \n                                displayedImage\n                            \n                            \n                                faInterrogation\n                            \n                            \n                                    Public\n                                FormsTemplate\n                            \n                            \n                                    Private\n                                globalSubscription\n                            \n                            \n                                hasImage\n                            \n                            \n                                    Public\n                                localForm\n                            \n                            \n                                    Private\n                                localSubscription\n                            \n                            \n                                    Public\n                                logger\n                            \n                            \n                                parentName\n                            \n                            \n                                validity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asField\n                            \n                            \n                                    Public\n                                asFormWarn\n                            \n                            \n                                changeComponent\n                            \n                            \n                                geometrySubscribe\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                getWarningMessage\n                            \n                            \n                                subscribeToChanges\n                            \n                            \n                                unsubscribeToChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formTemplate\n                            \n                            \n                                groupId\n                            \n                            \n                                isStandalone\n                            \n                            \n                                isSubform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                formStatus\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formTemplate\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formTemplate\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isStandalone\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSubform\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:41\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        formStatus\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:44\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        asField\n                        \n                    \n                \n            \n            \n                \n                    \n                    asField(field: Field | AntennaField)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                            Field | AntennaField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Field\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        asFormWarn\n                        \n                    \n                \n            \n            \n                \n                    \n                    asFormWarn(control: AbstractControl | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            AbstractControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormControlWarn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeComponent\n                        \n                    \n                \n            \n            \n                \nchangeComponent(componentTemplate: Form)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentTemplate\n                                    \n                                                Form\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        geometrySubscribe\n                        \n                    \n                \n            \n            \n                \ngeometrySubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(control: AbstractControl | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            AbstractControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWarningMessage\n                        \n                    \n                \n            \n            \n                \ngetWarningMessage(control: FormControlWarn | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                                FormControlWarn | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeToChanges\n                        \n                    \n                \n            \n            \n                \nsubscribeToChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unsubscribeToChanges\n                        \n                    \n                \n            \n            \n                \nunsubscribeToChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _formTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new EmptyForm()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:53\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faInterrogation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faQuestionCircle\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        FormsTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        globalSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        localForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        localSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggerService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validity\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"valid\" | \"invalid\" | \"none\"\n\n                    \n                \n                \n                    \n                        Default value : 'none'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:55\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formTemplate\n                    \n                \n\n                \n                    \n                        getformTemplate()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:35\n                                \n                            \n\n                \n                    \n                        setformTemplate(value: Form)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:18\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Form\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { Subscription } from 'rxjs';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { HelperFunctions } from '../../shared/helper-functions';\nimport { AntennaField, EmptyForm, Field, Form } from '../../shared/models/Form.model';\nimport { FormService } from '../form.service';\nimport { FormControlWarn } from '../../shared/custom-field';\n\n@Component({\n  selector: 'lib-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n})\nexport class FormComponent {\n  @Input()\n  set formTemplate(value: Form) {\n    if (value) {\n      this._formTemplate = value;\n      this.changeComponent(this._formTemplate); // Supplied by datainput template\n      this.validity = this.localForm.valid ? 'valid' : 'invalid';\n      this.unsubscribeToChanges();\n      this.subscribeToChanges();\n      if (this.formTemplate.componentId === 'geometry') {\n        // We want to link slant range to altitude & elevation\n        this.geometrySubscribe();\n      }\n      // Checking validity\n      this.formStatus.emit({ id: this.formTemplate.componentId, validity: this.validity });\n    } else {\n      this.logger.debug('Got an undefined formTemplate');\n    }\n  }\n  get formTemplate(): Form {\n    return this._formTemplate;\n  }\n  private _formTemplate = new EmptyForm();\n\n  @Input() groupId?: string;\n  @Input() isSubform?: boolean = true;\n  @Input() isStandalone?: boolean = true;\n\n  @Output() formStatus: EventEmitter = new EventEmitter();\n\n  public FormsTemplate: any;\n  // We create a subform corresponding to one of the component involved in the link\n  public localForm: FormGroup = new FormGroup({});\n\n  faInterrogation = faQuestionCircle;\n  componentName: string = '';\n  parentName: string = '';\n  displayedImage: string = '';\n  hasImage: boolean = false;\n  validity: 'valid' | 'invalid' | 'none' = 'none';\n\n  private localSubscription: Subscription = new Subscription();\n  private globalSubscription: Subscription = new Subscription();\n\n  constructor(private formService: FormService, public logger: LoggerService) {\n    // If this is the first component constructed, initialize formService\n    if (!this.formService.isInitialized) this.formService.initForms();\n    this.subscribeToChanges();\n  }\n\n  public asField(field: Field | AntennaField): Field {\n    /**\n     * Quick helper function for types conversion in the template\n     */\n    return field as Field;\n  }\n  public asFormWarn(control: AbstractControl | null): FormControlWarn {\n    /**\n     * Casts an AbstractControl into a FormControlWarn\n     * (This is useful for doing type casting inside the template)\n     */\n    return control as FormControlWarn;\n  }\n\n  subscribeToChanges(): void {\n    this.localSubscription = this.localForm.valueChanges.subscribe(() => {\n      // Handle saved state\n      this.formService.isCurrentFormSaved = false;\n      // Handle validity\n      const currentFormValidity: boolean = this.localForm.valid;\n      if (!currentFormValidity && this.validity !== 'invalid') {\n        this.validity = 'invalid';\n        // console.log(this.step);\n        this.formStatus.emit({ id: this.formTemplate.componentId, validity: this.validity });\n      } else if (currentFormValidity && this.validity !== 'valid') {\n        this.validity = 'valid';\n        this.formStatus.emit({ id: this.formTemplate.componentId, validity: this.validity });\n      } else if (this.validity === 'none') {\n        this.validity = currentFormValidity ? 'valid' : 'invalid';\n        this.formStatus.emit({ id: this.formTemplate.componentId, validity: this.validity });\n      }\n      this.formService.addForm(this.localForm, this.componentName, this.parentName);\n    });\n    // Subscription to geometry global changes caused by JSatOrb imports\n    if (this.formTemplate.componentId === 'geometry') {\n      this.globalSubscription.unsubscribe();\n      this.globalSubscription = this.formService.globalForm.valueChanges.subscribe((newValue: any) => {\n        if (this.componentName === 'geometry' && this.formTemplate.componentId === 'geometry') {\n          // Here we pass value from global to local, so we do not want to emit a valueChange event\n          // This way we avoid an infinite event loop\n          this.localForm.patchValue(newValue.geometry, { emitEvent: false });\n        }\n      });\n    }\n  }\n  unsubscribeToChanges(): void {\n    this.localSubscription.unsubscribe();\n    this.globalSubscription.unsubscribe();\n  }\n  geometrySubscribe(): void {\n    /**\n     * Handles the link between slant range and altitude/elevation\n     * This function is a bit specific but could be generalized when used for other fields.\n     * Only call this function when used with geometry templates.\n     */\n    if (this.formTemplate.componentId !== 'geometry') {\n      return; // If our component isn't geometry related, pass the following subscriptions\n    }\n\n    this.localForm.get('altitude')?.valueChanges.subscribe((value) => {\n      // Altitude edited => calculate SR\n      const elevation = this.localForm.get('elevation')?.value;\n      // Convert to radians if required\n      elevation.value = elevation.unit === '°' ? elevation.value : elevation.value * (180 / Math.PI);\n      // Convert altitue to km\n      const altitude = HelperFunctions.convertDistance(parseFloat(value.value), value.unit, 'km');\n      this.localForm.get('slantRange')?.setValue({\n        value: HelperFunctions.slantRangeFromAltElev(altitude, parseFloat(elevation.value)).toFixed(1),\n        unit: 'km',\n      });\n    });\n    this.localForm.get('elevation')?.valueChanges.subscribe((value) => {\n      // elevation changed => calculate SR again\n      const altitude = this.localForm.get('altitude')?.value;\n      // Convert to radians if required\n      altitude.value = HelperFunctions.convertDistance(parseFloat(altitude.value), altitude.unit, 'km');\n      // Convert altitue to km\n      const elev = value.unit === '°' ? value.value : value.value * (180 / Math.PI);\n      this.localForm.get('slantRange')?.setValue({\n        value: HelperFunctions.slantRangeFromAltElev(altitude.value, parseFloat(elev)).toFixed(1),\n        unit: 'km',\n      });\n    });\n  }\n\n  changeComponent(componentTemplate: Form): void {\n    /**\n     * Handles the reuse of the form components by allowing to change inner template\n     * @Input componentTemplate, the new template to use\n     */\n\n    // Setting up new Template involves a lot a casting and checking if templates fields aren't null or undefined\n    this.parentName = componentTemplate.parentComponent ?? '';\n    this.componentName = componentTemplate.componentId;\n    this.hasImage = !!componentTemplate.image; // Casts our componentTemplate.image to a boolean\n    this.displayedImage = componentTemplate.image ?? '';\n\n    let previousForm;\n    if (!this.parentName) {\n      previousForm = this.formService.globalForm.value[this.componentName];\n    } else {\n      previousForm = this.formService.globalForm.value[this.parentName][this.componentName];\n    }\n\n    // We use default values here but since they have already been used to generate globalForm, we shouldn't use them once again\n    // Here we want to regenerate the localFrom from archived form\n    const newForm = this.formService.createFormGroup(componentTemplate);\n    if (previousForm) {\n      // Previous from already exists, we overwrite the localForm\n      newForm.setValue(previousForm);\n      this.localForm = newForm;\n\n      // Now we want to add this localForm to the globalForm\n      if (componentTemplate.parentComponent) {\n        // Component is stored in a group\n        const group = this.formService.globalForm.get(this.parentName) as FormGroup;\n        if (group) {\n          // The group already existed\n          group.setControl(this.componentName, this.localForm);\n          this.formService.globalForm.setControl(this.parentName, group);\n        } else {\n          this.formService.addForm(this.localForm, this.componentName, this.parentName);\n        }\n      } else {\n        // Component is not stored in a group (cf geometry)\n        this.formService.globalForm.setControl(this.componentName, this.localForm);\n      }\n    } else {\n      // This form doesn't exist in the archives\n      // We will use the values from globalForm\n      this.localForm = newForm;\n      this.formService.addForm(this.localForm, this.componentName, this.parentName);\n    }\n  }\n  getWarningMessage(control: FormControlWarn | null): string {\n    /**\n     * Returns the warning message if there is one\n     */\n    if (control && control.warnings) return control.warnings;\n    return '';\n  }\n  getErrorMessage(control: AbstractControl | null): { error: string; warning: string } {\n    /**\n     * This function gathers result from validators.\n     * The custom validator are defined in custom-fields.ts\n     */\n    let error;\n    const warning = '';\n    // Internal error, the control does not exist\n    if (control === null) {\n      error = 'Unknown error (-1)';\n      return { error, warning };\n    }\n    const { errors } = control;\n\n    if (errors === null) {\n      if (control.get('value')?.errors?.pattern) {\n        // Here we intercept the case where regexp is wrong.\n        error = 'Please choose a numerical value';\n      } else {\n        // No error\n      }\n    } else {\n      // array destructuring (same as error = errors.error;)\n      ({ error } = errors);\n    }\n\n    return { error, warning };\n  }\n}\n\n    \n\n    \n        \n   -->\n  \n    \n      \n        \n          \n            \n              {{asField(field).desc}}:\n                \n\n                  \n                \n              \n              \n                \n                  \n                \n                 1\">\n                  \n                    \n                      {{ unit }}\n                    \n                  \n                \n                \n                  {{ asField(field).units[0] }}\n                \n              \n              \n                {{getErrorMessage(this.localForm.get(field.id)).error}}\n              \n              \n                {{getWarningMessage(asFormWarn(this.localForm.get(field.id)))}}\n              \n            \n          \n        \n      \n    \n  \n  \n    \n  \n\n    \n\n    \n                \n                    ./form.component.scss\n                \n                label {\n  padding:6px; //just as the input\n  margin: 0;\n  margin-bottom:0 !important;\n}\n.input-wrapper {\n  display:inline-flex;\n}\n.form-control {\n  min-width: 90px; max-width:90px;// 90px is enough for 1MW\n}\n.spacing {\n  margin:24px;\n  padding:0px 24px 0px 24px;\n}\n.field {\n  margin:auto;\n  max-width:360px;\n}\nform {\n  // max-width:480px;\n  margin:auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->                                                        {{asField(field).desc}}:                                                                                                                                                 1\">                                                            {{ unit }}                                                                                        {{ asField(field).units[0] }}                                                            {{getErrorMessage(this.localForm.get(field.id)).error}}                                            {{getWarningMessage(asFormWarn(this.localForm.get(field.id)))}}                                                                '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormControlWarn.html":{"url":"classes/FormControlWarn.html","title":"class - FormControlWarn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormControlWarn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/custom-field.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControl\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                warnings\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        warnings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/custom-field.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractControl, FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n// https://dev.to/vishesh/custom-error-handling-in-angular-reactive-forms-5f05\n\nexport class FormControlWarn extends FormControl {\n  warnings: any;\n}\n\nexport interface WarnFn extends ValidatorFn {}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomValidators {\n  constructor() {}\n\n  public positiveLossWarningValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    (control).warnings =\n      control.get('value')?.value > 0 ? 'Loss is algebraic here and usually  {\n    if (!control && control !== 0) {\n      return {\n        error: 'Please enter a value here',\n      };\n    }\n    return null;\n  };\n\n  public validValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (control.errors === null) {\n      return null;\n    }\n    let { pattern } = control.errors;\n    if (pattern) {\n      return {\n        error: 'Please enter a numerical value',\n      };\n    }\n    return {\n      error: 'Unknown error (3)',\n    };\n  };\n\n  public fieldValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    let value = control.get('value');\n    const unit = control.get('unit');\n\n    /*\n  Pass value Abstract control through multiple validators and output the result\n  TODO: order them by importance and only show the most jarring issue (or should we show all errors at once?)\n  -required\n  -numerical\n  -bounds\n  - ?\n  */\n    let req = this.requiredValidator(value?.value);\n    //let val = this.validValidator(value.value)\n    //let errList = [req, val];\n\n    // for(let i = 0; i \n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_imports\n\n\n\n\nFormComponent\n\nFormComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nFormModule -->\n\nLoggerModule->FormModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nFormModule -->\n\nLoggerService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/form/form.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FormComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormComponent } from './component/form.component';\nimport { LoggerModule } from '../shared/logger/logger.module';\nimport { LoggerService } from '../shared/logger/logger.service';\nimport { FormService } from './form.service';\n\n@NgModule({\n  declarations: [\n    FormComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\n    LoggerModule.forRoot(),\n  ],\n  exports: [\n    FormComponent,\n  ],\n  providers: [\n    FormService,\n    LoggerService,\n  ],\n})\nexport class FormModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/form/form.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isInitialized\n                            \n                            \n                                    Public\n                                erroneousSection\n                            \n                            \n                                    Public\n                                FormsTemplate\n                            \n                            \n                                    Public\n                                globalForm\n                            \n                            \n                                    Public\n                                isCurrentFormSaved\n                            \n                            \n                                    Public\n                                isInterlink\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addForm\n                            \n                            \n                                    Public\n                                createFormGroup\n                            \n                            \n                                    Public\n                                getComponentValues\n                            \n                            \n                                    Public\n                                getFormData\n                            \n                            \n                                    Public\n                                getFormData$\n                            \n                            \n                                    Public\n                                importForm\n                            \n                            \n                                    Public\n                                initForms\n                            \n                            \n                                    Public\n                                patchForm\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isInitialized\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: any, fb: FormBuilder, customValidators: CustomValidators, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customValidators\n                                                  \n                                                        \n                                                                        CustomValidators\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    addForm(formGroup: FormGroup, name: string, parent: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    formGroup\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createFormGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup(componentTemplate: Form)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentTemplate\n                                    \n                                                Form\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getComponentValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    getComponentValues(componentId: string, link: string, parentId?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    componentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                                \n                                    parentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFormData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFormData$\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormData$()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        importForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    importForm(results: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    results\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initForms\n                        \n                    \n                \n            \n            \n                \n                    \n                    initForms()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        patchForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    patchForm(parentName: string, groupName: string, formGroup: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formGroup\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isInitialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        erroneousSection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        FormsTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        globalForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:22\n                        \n                    \n\n            \n                \n                    This service keeps tracks of everything form-related.\nIt listens for forms changes and returns the form Data to the computeLinkBudget service\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isCurrentFormSaved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isInterlink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Untitled_Link_Budget'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:24\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isInitialized\n                    \n                \n\n                \n                    \n                        getisInitialized()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:30\n                                \n                            \n\n                \n                    \n                        setisInitialized(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:33\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BehaviorSubject, Observable } from 'rxjs';\n// import { LoggerService } from '../services/logger.service';\nimport { CustomValidators, FormControlWarn } from '../shared/custom-field';\nimport { FORM_TEMPLATE_TOKEN } from '../shared/dependencies';\nimport { LoggerService } from '../shared/logger/logger.service';\nimport { Form, Field } from '../shared/models/Form.model';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormService {\n  public FormsTemplate: any;\n  /**\n   * This service keeps tracks of everything form-related.\n   * It listens for forms changes and returns the form Data to the computeLinkBudget service\n   */\n  // This contains the concatenation of all subforms\n\n  public globalForm: FormGroup = new FormGroup({}); // A form group can easily be observed\n  public erroneousSection: BehaviorSubject = new BehaviorSubject('');\n  public title: string = 'Untitled_Link_Budget';\n  public isInterlink: boolean = false;\n  public isCurrentFormSaved: boolean = true;\n\n  // Has forms already been initialized ?\n  private _isInitialized: boolean = false;\n  get isInitialized(): boolean {\n    return this._isInitialized;\n  }\n  set isInitialized(value: boolean) {\n    this._isInitialized = value;\n  }\n\n  constructor(\n    @Inject(FORM_TEMPLATE_TOKEN) private template: any,\n    private fb: FormBuilder,\n    private customValidators: CustomValidators,\n    private logger: LoggerService\n  ) {}\n\n  public addForm(formGroup: FormGroup, name: string, parent: string = '') {\n    /**\n     * This allow adding a form to our globalform. This function is usually called by a form component\n     */\n    if (parent && parent !== '') {\n      const group = this.globalForm.get(parent) as FormGroup;\n      if (group) {\n        group.setControl(name, formGroup);\n        this.globalForm.setControl(parent, group);\n      } else {\n        this.globalForm.setControl(parent, this.fb.group({ [name]: formGroup }));\n      }\n    } else if (name !== '') {\n      this.globalForm.setControl(name, formGroup);\n    }\n  }\n\n  public getComponentValues(componentId: string, link: string = '', parentId?: string): any | undefined {\n    /**\n     * Returns the value of a component by its id and its parentId\n     */\n    if (!parentId) return this.getFormData()[componentId];\n    return this.getFormData()?.[link]?.[parentId]?.[componentId];\n  }\n\n  public patchForm(parentName: string, groupName: string, formGroup: FormGroup) {\n    /**\n     *  A wrapper for the method from FormGroup. This allows us to have a globalForm with more depth.\n     */\n    const group = this.globalForm.get(parentName);\n    if (group !== null) {\n      group.addControl(groupName, formGroup);\n      return;\n    }\n    this.logger.warn(`${parentName} does not exist! Cannot attach antenna to it.`);\n  }\n\n  public importForm(results: any): void {\n    /**\n     * This function is called when importing a .json file.\n     * It updates the fields values.\n     */\n\n    // #TODO: check file sanity (eg. sanitization)\n    // #TODO: Test\n    // #TODO We now need to make this more robust\n    // Changing global form\n    console.log('import form');\n    console.log(results.data);\n    this.globalForm.patchValue(results.data, { emitEvent: false });\n    this.title = results.metadata.title;\n  }\n\n  public getFormData$(): Observable {\n    return this.globalForm.valueChanges;\n  }\n\n  public getFormData(): any {\n    return this.globalForm.value; // The form updated at all times is used for the calculation\n  }\n\n  public initForms(): void {\n    // This function automatically generates the form to be sent to API even if some components haven't yet been instantiated\n    this.template.template.components.forEach((componentTemplate: Form) => {\n      if (componentTemplate.componentId !== '') {\n        const fg = this.createFormGroup(componentTemplate);\n        if (componentTemplate.parentComponent) {\n          this.addForm(fg, componentTemplate.componentId, componentTemplate.parentComponent);\n        } else {\n          this.addForm(fg, componentTemplate.componentId);\n        }\n      }\n    });\n    this._isInitialized = true;\n  }\n\n  public createFormGroup(componentTemplate: Form): FormGroup {\n    /**\n     * This function takes in a Form template and return a FormGroup of the corresponding component.\n     * This makes the conversion between angular reactive forms and our custom JSON templates for transmission chain parts.\n     */\n    const group: any = {};\n\n    componentTemplate.params.forEach((element: Field) => {\n      // The default value is 'undefined' if key not found in map\n      // Here we create FormControls for both the input and its unit\n      const inputControl = new FormControlWarn(element.default, {\n        validators: [Validators.pattern('^[+-]?[0-9]+([,][0-9]+)*([.][0-9]+)?$')],\n        updateOn: 'change', // Removed because of data loss when switching page without blurring first\n      }); // , [Validators.required, Validators.maxLength(6)]); //For testing purposes\n      // Updating on blur is less distracting, a good compromise however, values are not updated when changing tabs and therefore are lost\n      const unitControl =\n        element.units.length === 0\n          ? new FormControl('', Validators.nullValidator)\n          : new FormControl(element.units[0], Validators.required);\n      // For units, we can assume they will be valid since the user is constrained in his choices\n      group[element.id] = new FormGroup(\n        {\n          // A group composed of both the field and its unit\n          value: inputControl,\n          unit: unitControl,\n        },\n        [\n          this.customValidators.fieldValidator,\n          element.type === 'loss' ? this.customValidators.positiveLossWarningValidator : Validators.nullValidator,\n        ]\n      );\n\n      if (element.alternative !== undefined) {\n        const subGroup = this.createFormGroup(element.alternative);\n        group[element.alternative.componentId] = subGroup;\n      }\n    });\n\n    return this.fb.group(group);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormsTemplate.html":{"url":"classes/FormsTemplate.html","title":"class - FormsTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormsTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                availableAntennas\n                            \n                            \n                                    Static\n                                DL_atmosphere\n                            \n                            \n                                    Static\n                                DL_carrier\n                            \n                            \n                                    Static\n                                DL_GS_rx_antenna\n                            \n                            \n                                    Static\n                                DL_receiver_GS\n                            \n                            \n                                    Static\n                                DL_SC_tx_antenna\n                            \n                            \n                                    Static\n                                DL_transmitter_SC\n                            \n                            \n                                    Static\n                                emptyForm\n                            \n                            \n                                    Static\n                                geometry\n                            \n                            \n                                    Static\n                                template\n                            \n                            \n                                    Static\n                                UL_atmosphere\n                            \n                            \n                                    Static\n                                UL_carrier\n                            \n                            \n                                    Static\n                                UL_GS_tx_antenna\n                            \n                            \n                                    Static\n                                UL_receiver_SC\n                            \n                            \n                                    Static\n                                UL_SC_rx_antenna\n                            \n                            \n                                    Static\n                                UL_transmitter_GS\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        availableAntennas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Antennas.yagiAntenna, Antennas.helixAntenna]\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:508\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DL_atmosphere\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    // componentType:'path',\n    componentId: 'atmosphere',\n    parentComponent: 'downlink',\n    params: [\n      {\n        id: 'depointing_loss',\n        desc: 'Depointing Loss',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.9,\n      },\n      {\n        id: 'x_pol',\n        desc: 'Cross Polarization',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -3.0,\n      },\n      {\n        id: 'atm_gas',\n        desc: 'Atmosphere Gases',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -1.1,\n      },\n      {\n        id: 'ionospheric',\n        desc: 'Ionospheric losses',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.4,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:355\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DL_carrier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    // componentType: 'carrier',\n    componentId: 'carrier',\n    parentComponent: 'downlink',\n    params: [\n      {\n        id: 'frequency',\n        desc: 'Frequency',\n        units: ['MHz', 'kHz', 'Hz'],\n        /// /dimension: \"freq\",\n        default: 146,\n      },\n      {\n        id: 'bandwidth',\n        desc: 'Bandwidth',\n        units: ['Hz', 'kHz', 'MHz'],\n        /// /dimension: \"bandwidth\",\n        default: 3,\n      },\n      {\n        id: 'bit_rate',\n        desc: 'Bit Rate',\n        units: ['bps'],\n        /// /dimension: \"freq\",\n        default: 1200,\n      },\n      {\n        id: 'ebno_threshold',\n        desc: 'Eb/N0 Threshold',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 23.2,\n      },\n      {\n        id: 'impl_loss',\n        desc: 'Implementation Loss',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: -1,\n      },\n\n      {\n        id: 'system_margin',\n        desc: 'System Margin',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 10,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:394\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DL_GS_rx_antenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'receiver_antenna',\n    componentName: 'Groundstation Antenna',\n    parentComponent: 'downlink',\n    image: 'assets/antennas/yagi.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'antMaxGain',\n        desc: 'Max Gain',\n        units: ['dBi'],\n        // dimension:\"iso_gain\",\n        default: 14,\n      },\n      {\n        id: 'antBeamWidth',\n        desc: 'Beamwidth',\n        units: ['°', 'rad'],\n        // dimension:\"angle\",\n        default: 35,\n      },\n      // {\n      //   id: 'depointingAngle',\n      //   desc: 'Pointing Loss',\n      //   units: ['°', 'rad'],\n      //   // dimension:\"angle\",\n      //   default: 1,\n      // },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:445\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DL_receiver_GS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'receiver',\n    parentComponent: 'downlink',\n    hasAntenna: true,\n    params: [\n      {\n        id: 'rxAntennaTemp',\n        desc: 'Antenna Noise Temperature',\n        units: ['K', '°C'],\n        default: 230.4,\n      },\n      {\n        id: 'rxInlineLoss',\n        desc: 'Inline Losses',\n        type: 'loss',\n        units: ['dB'],\n        default: -0.87,\n      },\n      {\n        id: 'LNA_gain',\n        desc: 'LNA Gain',\n        units: ['dB', ''],\n        default: 20,\n      },\n      {\n        id: 'LNANoiseTemp',\n        desc: 'LNA Noise Temperature',\n        units: ['K', '°C'],\n        default: 66.78,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:476\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DL_SC_tx_antenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'transmitter_antenna',\n    componentName: 'Spacecraft Antenna',\n    parentComponent: 'downlink',\n    image: 'assets/AntennesTls.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'antMaxGain',\n        desc: 'Max Gain',\n        units: ['dBi'],\n        // dimension:\"iso_gain\",\n        default: 2.15,\n      },\n      {\n        id: 'antBeamWidth',\n        desc: 'Beamwidth',\n        units: ['°', 'rad'],\n        // dimension:\"angle\",\n        default: 138,\n      },\n      // {\n      //   id: 'depointingAngle',\n      //   desc: 'Pointing Loss',\n      //   units: ['°', 'rad'],\n      //   // dimension:\"angle\",\n      //   default: 0,\n      // },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:324\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DL_transmitter_SC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'transmitter',\n    parentComponent: 'downlink',\n    hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'power',\n        desc: 'Transmitter Power',\n        units: ['dBW', 'W', 'dBm'],\n        /// /dimension: \"power\", //Adding the type property so we can handle validation appropriately\n        default: 10,\n      },\n      {\n        id: 'txCableLoss',\n        desc: 'Line Losses',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -4.5,\n      },\n      {\n        id: 'txConnectorLoss',\n        desc: 'Connector Losses',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -4.5,\n      },\n      {\n        id: 'txAntennaMismatch',\n        desc: 'Antenna Mismatch',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.5,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:285\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        emptyForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    // componentType: '',\n    componentId: 'empty',\n    parentComponent: 'uplink',\n    params: [],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        geometry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    // componentType: \"geometry\",\n    componentId: 'geometry',\n    params: [\n      {\n        id: 'altitude',\n        desc: 'Altitude',\n        units: ['km', 'm'],\n        default: 650,\n      },\n      {\n        id: 'elevation',\n        desc: 'Elevation Angle',\n        units: ['°', 'rad'],\n        default: 10,\n      },\n      {\n        id: 'slantRange',\n        desc: 'Slant Range',\n        units: ['km', 'm'],\n        /// /dimension:\"length\",\n        default: 2045, // Switched to meters by default because this is what is used by LP and until we have units handled by API, this is simpler to handle it like that\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Template\n\n                    \n                \n                \n                    \n                        Default value : {\n    components: [\n      FormsTemplate.geometry,\n\n      FormsTemplate.UL_transmitter_GS,\n      FormsTemplate.UL_GS_tx_antenna,\n      FormsTemplate.UL_carrier,\n      FormsTemplate.UL_atmosphere,\n      FormsTemplate.UL_SC_rx_antenna,\n      FormsTemplate.UL_receiver_SC,\n\n      FormsTemplate.DL_transmitter_SC,\n      FormsTemplate.DL_SC_tx_antenna,\n      FormsTemplate.DL_atmosphere,\n      FormsTemplate.DL_carrier,\n      FormsTemplate.DL_GS_rx_antenna,\n      FormsTemplate.DL_receiver_GS,\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:510\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        UL_atmosphere\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    // componentType:'path',\n    componentId: 'atmosphere',\n    parentComponent: 'uplink',\n    params: [\n      {\n        id: 'depointing_loss',\n        desc: 'Depointing Loss',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.9,\n      },\n      {\n        id: 'x_pol',\n        desc: 'Cross Polarization',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -3.0,\n      },\n      {\n        id: 'atm_gas',\n        desc: 'Atmosphere Gases',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -1.1,\n      },\n      {\n        id: 'ionospheric',\n        desc: 'Ionospheric losses',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.4,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:200\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        UL_carrier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    // componentType: 'carrier',\n    componentId: 'carrier',\n    parentComponent: 'uplink',\n    params: [\n      {\n        id: 'frequency',\n        desc: 'Frequency',\n        units: ['MHz', 'kHz', 'Hz'],\n        /// /dimension: \"freq\",\n        default: 146,\n      },\n      {\n        id: 'bandwidth',\n        desc: 'Bandwidth',\n        units: ['Hz', 'kHz', 'MHz'],\n        /// /dimension: \"bandwidth\",\n        default: 3,\n      },\n      {\n        id: 'bit_rate',\n        desc: 'Bit Rate',\n        units: ['bps'],\n        /// /dimension: \"freq\",\n        default: 1200,\n      },\n      // Using the SNR method for now\n      // {\n      //   id: 'ber',\n      //   desc: 'BER',\n      //   units: [],\n      //   // dimension: \"ratio\",\n      //   default: 0.005,\n      // },\n      {\n        id: 'ebno_threshold',\n        desc: 'Eb/N0 Threshold',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 23.2,\n      },\n      {\n        id: 'impl_loss',\n        desc: 'Implementation Loss',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: -1,\n      },\n      {\n        id: 'system_margin',\n        desc: 'System Margin',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 10,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        UL_GS_tx_antenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'transmitter_antenna',\n    componentName: 'Groundstation Antenna',\n    parentComponent: 'uplink',\n    image: 'assets/AntennesTls.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'antMaxGain',\n        desc: 'Max Gain',\n        units: ['dBi'],\n        // dimension:\"iso_gain\",\n        default: 14,\n      },\n      {\n        id: 'antBeamWidth',\n        desc: 'Beamwidth',\n        units: ['°', 'rad'],\n        // dimension:\"angle\",\n        default: 35,\n      },\n      // {\n      //   id: 'depointingAngle',\n      //   desc: 'Pointing Loss',\n      //   units: ['°', 'rad'],\n      //   // dimension:\"angle\",\n      //   default: 1,\n      // },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:138\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        UL_receiver_SC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'receiver',\n    parentComponent: 'uplink',\n    hasAntenna: true,\n    params: [\n      {\n        id: 'rxAntennaTemp',\n        desc: 'Antenna Noise Temperature',\n        units: ['K', '°C'],\n        default: 233.15,\n      },\n      {\n        id: 'rxInlineLoss',\n        desc: 'Inline Losses',\n        type: 'loss',\n        units: ['dB'],\n        default: 0,\n      },\n      {\n        id: 'LNA_gain',\n        desc: 'LNA Gain',\n        units: ['dB', ''],\n        default: 20,\n      },\n      {\n        id: 'LNANoiseTemp',\n        desc: 'LNA Noise Temperature',\n        units: ['K', '°C'],\n        default: 66.78,\n      },\n\n      // Useful to compute temperature from Noise Figure\n      // {\n      //   id: 'referenceTemperature',\n      //   desc: 'Reference Temperature',\n      //   units: ['K', '°C'],\n      //   default: 280,\n      // },\n      // { #TODO: Add to tests\n      //   id: 'no_units',\n      //   desc:'Value without units',\n      //   units: []\n      // }\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:240\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        UL_SC_rx_antenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'receiver_antenna',\n    componentName: 'Spacecraft Antenna',\n    parentComponent: 'uplink',\n    image: 'assets/antennas/yagi.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'antMaxGain',\n        desc: 'Max Gain',\n        units: ['dBi'],\n        // dimension:\"iso_gain\",\n        default: 2.15,\n      },\n      {\n        id: 'antBeamWidth',\n        desc: 'Beamwidth',\n        units: ['°', 'rad'],\n        // dimension:\"angle\",\n        default: 238,\n      },\n      // {\n      //   id: 'depointingAngle',\n      //   desc: 'Pointing Loss',\n      //   units: ['°', 'rad'],\n      //   // dimension:\"angle\",\n      //   default: 0,\n      // },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:169\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        UL_transmitter_GS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'transmitter',\n    parentComponent: 'uplink',\n    hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'power',\n        desc: 'Transmitter Power',\n        units: ['dBW', 'W', 'dBm'],\n        /// /dimension: \"power\", //Adding the type property so we can handle validation appropriately\n        default: 10,\n      },\n      {\n        id: 'txCableLoss',\n        desc: 'Line Losses',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -2.79,\n      },\n      {\n        id: 'txConnectorLoss',\n        desc: 'Connector Losses',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -1.7,\n      },\n      {\n        id: 'txAntennaMismatch',\n        desc: 'Antenna Mismatch',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.5,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:99\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Antennas } from '../models/Antennas';\nimport { Form, Template } from '../models/Form.model';\n\nexport abstract class FormsTemplate {\n  // If the unit selector doesn't display the correct unit, make sure Formslabel and FormsData have the same units (eg. W =/= Watts)\n  static emptyForm: Form = {\n    // componentType: '',\n    componentId: 'empty',\n    parentComponent: 'uplink',\n    params: [],\n  };\n\n  static geometry: Form = {\n    // componentType: \"geometry\",\n    componentId: 'geometry',\n    params: [\n      {\n        id: 'altitude',\n        desc: 'Altitude',\n        units: ['km', 'm'],\n        default: 650,\n      },\n      {\n        id: 'elevation',\n        desc: 'Elevation Angle',\n        units: ['°', 'rad'],\n        default: 10,\n      },\n      {\n        id: 'slantRange',\n        desc: 'Slant Range',\n        units: ['km', 'm'],\n        /// /dimension:\"length\",\n        default: 2045, // Switched to meters by default because this is what is used by LP and until we have units handled by API, this is simpler to handle it like that\n      },\n    ],\n  };\n\n  static UL_carrier: Form = {\n    // componentType: 'carrier',\n    componentId: 'carrier',\n    parentComponent: 'uplink',\n    params: [\n      {\n        id: 'frequency',\n        desc: 'Frequency',\n        units: ['MHz', 'kHz', 'Hz'],\n        /// /dimension: \"freq\",\n        default: 146,\n      },\n      {\n        id: 'bandwidth',\n        desc: 'Bandwidth',\n        units: ['Hz', 'kHz', 'MHz'],\n        /// /dimension: \"bandwidth\",\n        default: 3,\n      },\n      {\n        id: 'bit_rate',\n        desc: 'Bit Rate',\n        units: ['bps'],\n        /// /dimension: \"freq\",\n        default: 1200,\n      },\n      // Using the SNR method for now\n      // {\n      //   id: 'ber',\n      //   desc: 'BER',\n      //   units: [],\n      //   // dimension: \"ratio\",\n      //   default: 0.005,\n      // },\n      {\n        id: 'ebno_threshold',\n        desc: 'Eb/N0 Threshold',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 23.2,\n      },\n      {\n        id: 'impl_loss',\n        desc: 'Implementation Loss',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: -1,\n      },\n      {\n        id: 'system_margin',\n        desc: 'System Margin',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 10,\n      },\n    ],\n  };\n\n  static UL_transmitter_GS: Form = {\n    componentId: 'transmitter',\n    parentComponent: 'uplink',\n    hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'power',\n        desc: 'Transmitter Power',\n        units: ['dBW', 'W', 'dBm'],\n        /// /dimension: \"power\", //Adding the type property so we can handle validation appropriately\n        default: 10,\n      },\n      {\n        id: 'txCableLoss',\n        desc: 'Line Losses',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -2.79,\n      },\n      {\n        id: 'txConnectorLoss',\n        desc: 'Connector Losses',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -1.7,\n      },\n      {\n        id: 'txAntennaMismatch',\n        desc: 'Antenna Mismatch',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.5,\n      },\n    ],\n  };\n  static UL_GS_tx_antenna: Form = {\n    componentId: 'transmitter_antenna',\n    componentName: 'Groundstation Antenna',\n    parentComponent: 'uplink',\n    image: 'assets/AntennesTls.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'antMaxGain',\n        desc: 'Max Gain',\n        units: ['dBi'],\n        // dimension:\"iso_gain\",\n        default: 14,\n      },\n      {\n        id: 'antBeamWidth',\n        desc: 'Beamwidth',\n        units: ['°', 'rad'],\n        // dimension:\"angle\",\n        default: 35,\n      },\n      // {\n      //   id: 'depointingAngle',\n      //   desc: 'Pointing Loss',\n      //   units: ['°', 'rad'],\n      //   // dimension:\"angle\",\n      //   default: 1,\n      // },\n    ],\n  };\n  static UL_SC_rx_antenna: Form = {\n    componentId: 'receiver_antenna',\n    componentName: 'Spacecraft Antenna',\n    parentComponent: 'uplink',\n    image: 'assets/antennas/yagi.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'antMaxGain',\n        desc: 'Max Gain',\n        units: ['dBi'],\n        // dimension:\"iso_gain\",\n        default: 2.15,\n      },\n      {\n        id: 'antBeamWidth',\n        desc: 'Beamwidth',\n        units: ['°', 'rad'],\n        // dimension:\"angle\",\n        default: 238,\n      },\n      // {\n      //   id: 'depointingAngle',\n      //   desc: 'Pointing Loss',\n      //   units: ['°', 'rad'],\n      //   // dimension:\"angle\",\n      //   default: 0,\n      // },\n    ],\n  };\n  static UL_atmosphere: Form = {\n    // componentType:'path',\n    componentId: 'atmosphere',\n    parentComponent: 'uplink',\n    params: [\n      {\n        id: 'depointing_loss',\n        desc: 'Depointing Loss',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.9,\n      },\n      {\n        id: 'x_pol',\n        desc: 'Cross Polarization',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -3.0,\n      },\n      {\n        id: 'atm_gas',\n        desc: 'Atmosphere Gases',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -1.1,\n      },\n      {\n        id: 'ionospheric',\n        desc: 'Ionospheric losses',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.4,\n      },\n    ],\n  };\n\n  static UL_receiver_SC: Form = {\n    componentId: 'receiver',\n    parentComponent: 'uplink',\n    hasAntenna: true,\n    params: [\n      {\n        id: 'rxAntennaTemp',\n        desc: 'Antenna Noise Temperature',\n        units: ['K', '°C'],\n        default: 233.15,\n      },\n      {\n        id: 'rxInlineLoss',\n        desc: 'Inline Losses',\n        type: 'loss',\n        units: ['dB'],\n        default: 0,\n      },\n      {\n        id: 'LNA_gain',\n        desc: 'LNA Gain',\n        units: ['dB', ''],\n        default: 20,\n      },\n      {\n        id: 'LNANoiseTemp',\n        desc: 'LNA Noise Temperature',\n        units: ['K', '°C'],\n        default: 66.78,\n      },\n\n      // Useful to compute temperature from Noise Figure\n      // {\n      //   id: 'referenceTemperature',\n      //   desc: 'Reference Temperature',\n      //   units: ['K', '°C'],\n      //   default: 280,\n      // },\n      // { #TODO: Add to tests\n      //   id: 'no_units',\n      //   desc:'Value without units',\n      //   units: []\n      // }\n    ],\n  };\n  static DL_transmitter_SC: Form = {\n    componentId: 'transmitter',\n    parentComponent: 'downlink',\n    hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'power',\n        desc: 'Transmitter Power',\n        units: ['dBW', 'W', 'dBm'],\n        /// /dimension: \"power\", //Adding the type property so we can handle validation appropriately\n        default: 10,\n      },\n      {\n        id: 'txCableLoss',\n        desc: 'Line Losses',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -4.5,\n      },\n      {\n        id: 'txConnectorLoss',\n        desc: 'Connector Losses',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -4.5,\n      },\n      {\n        id: 'txAntennaMismatch',\n        desc: 'Antenna Mismatch',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.5,\n      },\n    ],\n  };\n  static DL_SC_tx_antenna: Form = {\n    componentId: 'transmitter_antenna',\n    componentName: 'Spacecraft Antenna',\n    parentComponent: 'downlink',\n    image: 'assets/AntennesTls.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'antMaxGain',\n        desc: 'Max Gain',\n        units: ['dBi'],\n        // dimension:\"iso_gain\",\n        default: 2.15,\n      },\n      {\n        id: 'antBeamWidth',\n        desc: 'Beamwidth',\n        units: ['°', 'rad'],\n        // dimension:\"angle\",\n        default: 138,\n      },\n      // {\n      //   id: 'depointingAngle',\n      //   desc: 'Pointing Loss',\n      //   units: ['°', 'rad'],\n      //   // dimension:\"angle\",\n      //   default: 0,\n      // },\n    ],\n  };\n  static DL_atmosphere: Form = {\n    // componentType:'path',\n    componentId: 'atmosphere',\n    parentComponent: 'downlink',\n    params: [\n      {\n        id: 'depointing_loss',\n        desc: 'Depointing Loss',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.9,\n      },\n      {\n        id: 'x_pol',\n        desc: 'Cross Polarization',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -3.0,\n      },\n      {\n        id: 'atm_gas',\n        desc: 'Atmosphere Gases',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -1.1,\n      },\n      {\n        id: 'ionospheric',\n        desc: 'Ionospheric losses',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.4,\n      },\n    ],\n  };\n  static DL_carrier: Form = {\n    // componentType: 'carrier',\n    componentId: 'carrier',\n    parentComponent: 'downlink',\n    params: [\n      {\n        id: 'frequency',\n        desc: 'Frequency',\n        units: ['MHz', 'kHz', 'Hz'],\n        /// /dimension: \"freq\",\n        default: 146,\n      },\n      {\n        id: 'bandwidth',\n        desc: 'Bandwidth',\n        units: ['Hz', 'kHz', 'MHz'],\n        /// /dimension: \"bandwidth\",\n        default: 3,\n      },\n      {\n        id: 'bit_rate',\n        desc: 'Bit Rate',\n        units: ['bps'],\n        /// /dimension: \"freq\",\n        default: 1200,\n      },\n      {\n        id: 'ebno_threshold',\n        desc: 'Eb/N0 Threshold',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 23.2,\n      },\n      {\n        id: 'impl_loss',\n        desc: 'Implementation Loss',\n        type: 'loss',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: -1,\n      },\n\n      {\n        id: 'system_margin',\n        desc: 'System Margin',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 10,\n      },\n    ],\n  };\n  static DL_GS_rx_antenna: Form = {\n    componentId: 'receiver_antenna',\n    componentName: 'Groundstation Antenna',\n    parentComponent: 'downlink',\n    image: 'assets/antennas/yagi.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'antMaxGain',\n        desc: 'Max Gain',\n        units: ['dBi'],\n        // dimension:\"iso_gain\",\n        default: 14,\n      },\n      {\n        id: 'antBeamWidth',\n        desc: 'Beamwidth',\n        units: ['°', 'rad'],\n        // dimension:\"angle\",\n        default: 35,\n      },\n      // {\n      //   id: 'depointingAngle',\n      //   desc: 'Pointing Loss',\n      //   units: ['°', 'rad'],\n      //   // dimension:\"angle\",\n      //   default: 1,\n      // },\n    ],\n  };\n  static DL_receiver_GS: Form = {\n    componentId: 'receiver',\n    parentComponent: 'downlink',\n    hasAntenna: true,\n    params: [\n      {\n        id: 'rxAntennaTemp',\n        desc: 'Antenna Noise Temperature',\n        units: ['K', '°C'],\n        default: 230.4,\n      },\n      {\n        id: 'rxInlineLoss',\n        desc: 'Inline Losses',\n        type: 'loss',\n        units: ['dB'],\n        default: -0.87,\n      },\n      {\n        id: 'LNA_gain',\n        desc: 'LNA Gain',\n        units: ['dB', ''],\n        default: 20,\n      },\n      {\n        id: 'LNANoiseTemp',\n        desc: 'LNA Noise Temperature',\n        units: ['K', '°C'],\n        default: 66.78,\n      },\n    ],\n  };\n  static availableAntennas = [Antennas.yagiAntenna, Antennas.helixAntenna];\n\n  static template: Template = {\n    components: [\n      FormsTemplate.geometry,\n\n      FormsTemplate.UL_transmitter_GS,\n      FormsTemplate.UL_GS_tx_antenna,\n      FormsTemplate.UL_carrier,\n      FormsTemplate.UL_atmosphere,\n      FormsTemplate.UL_SC_rx_antenna,\n      FormsTemplate.UL_receiver_SC,\n\n      FormsTemplate.DL_transmitter_SC,\n      FormsTemplate.DL_SC_tx_antenna,\n      FormsTemplate.DL_atmosphere,\n      FormsTemplate.DL_carrier,\n      FormsTemplate.DL_GS_rx_antenna,\n      FormsTemplate.DL_receiver_GS,\n    ],\n  };\n  // static transmitter_GS: Form;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HelperFunctions.html":{"url":"classes/HelperFunctions.html","title":"class - HelperFunctions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HelperFunctions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/helper-functions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                distance\n                            \n                            \n                                    Static\n                                earthMu\n                            \n                            \n                                    Static\n                                earthRadius\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                altitudeFromSrElev\n                            \n                            \n                                    Static\n                                convertDistance\n                            \n                            \n                                    Static\n                                convertTLEtoKeplearian\n                            \n                            \n                                    Static\n                                slantRangeFromAltElev\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        distance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    km: 10e3,\n    // cm: 10e-2,\n    m: 1,\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/helper-functions.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        earthMu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3.986004418 * (10 ** 14)\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/helper-functions.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        earthRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6378.137\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/helper-functions.ts:6\n                        \n                    \n\n            \n                \n                    This class contains miscellaneous functions related to celestial dynamics.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        altitudeFromSrElev\n                        \n                    \n                \n            \n            \n                \n                    \n                    altitudeFromSrElev(sr: number, elevation: number, stationAltitude: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/helper-functions.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    sr\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    elevation\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    stationAltitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        convertDistance\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertDistance(value: number, from: string, to: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/helper-functions.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    from\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        convertTLEtoKeplearian\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTLEtoKeplearian(tle1: string, tle2: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/helper-functions.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tle1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tle2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { ecc: number; sma: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        slantRangeFromAltElev\n                        \n                    \n                \n            \n            \n                \n                    \n                    slantRangeFromAltElev(altitude: number, elevation: number, stationAltitude: number, precisionDecimals: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/helper-functions.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    altitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    elevation\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    stationAltitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    precisionDecimals\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class HelperFunctions {\n  /**\n   * This class contains miscellaneous functions related to celestial dynamics.\n   */\n\n  static earthRadius: number = 6378.137; // in km, at the equator\n  static earthMu: number = 3.986004418 * (10 ** 14);\n  static distance: any =\n  {\n    km: 10e3,\n    // cm: 10e-2,\n    m: 1,\n  };\n\n  public static convertDistance(value: number, from: string, to: string) {\n    return value * (this.distance[from] / this.distance[to]);\n  }\n  // public static convertAngle(value: number, from: string, to: string) {\n  //   return value * (this.distance[from] / this.distance[to]);\n  // }\n  public static slantRangeFromAltElev(altitude: number, elevation: number, stationAltitude: number = 0, precisionDecimals = 0): number {\n    /* Computes the slant range from the altitude and the elevation\n    * The altitude is in kilometer and the delta angle in degrees,\n    * stationAltitude from sea level in meters\n    * precisionDecimals is the number of decimals you want to round to\n    * */\n    if (!(altitude && elevation)) {\n      console.error('Warning', 'Tried to compute slant range with invalid values');\n      console.debug(`altitude: ${altitude}, elevation: ${elevation}`);\n      return 0;\n    }\n    const factor = 10 ** precisionDecimals;\n    const delta = elevation * (Math.PI / 180);\n    return Math.round(this.earthRadius * (\n      Math.sqrt(((altitude + this.earthRadius) / this.earthRadius) ** 2\n        - Math.cos(delta) ** 2)\n        - Math.sin(delta)) * factor) / factor;\n  }\n\n  public static altitudeFromSrElev(sr: number, elevation: number, stationAltitude: number = 0): number {\n    /**\n     * Computes the slant range from the altitude and the elevation\n     * The altitude is in kilometer and the delta angle in degrees, stationAltitude from sea level in meters\n    */\n    const delta = elevation * (Math.PI / 180);\n    return this.earthRadius * Math.sqrt((sr / this.earthRadius + Math.sin(delta)) ** 2 + Math.cos(delta) ** 2);\n  }\n\n  public static convertTLEtoKeplearian(tle1: string, tle2: string) {\n    // See https://blog.hardinglabs.com/tle-to-kep.html\n    // These manual calculations might be lacking precision. If that's an issued, switch to sgp4\n    // console.log(tle1);\n    // console.log(tle2.split(''));\n    const ecc = parseFloat(`0.${tle2.substring(26, 33)}`) / 10;\n    // console.log(ecc);\n\n    const n = parseFloat(tle2.substring(52, 63)) * ((2 * Math.PI) / (3600 * 24)); // Mean motion converted to rad/s\n    // console.log(tle2.substring(52, 63));\n    const sma = (this.earthMu / (n ** 2)) ** (1 / 3) / 1000;\n    return { ecc, sma };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JSatOrbLinkComponent.html":{"url":"components/JSatOrbLinkComponent.html","title":"component - JSatOrbLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  JSatOrbLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-luplink-jsatorb-import\n            \n\n            \n                styleUrls\n                ./luplink-jsatorb-import.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./luplink-jsatorb-import.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                importForm\n                            \n                            \n                                    Public\n                                isEmpty\n                            \n                            \n                                    Public\n                                jsoData\n                            \n                            \n                                    Public\n                                linkService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                importJSO\n                            \n                            \n                                isJSOValid\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(linkService: JSatOrbLinkService, logger: LoggerService, loadService: SaveLoadService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        linkService\n                                                  \n                                                        \n                                                                        JSatOrbLinkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadService\n                                                  \n                                                        \n                                                                        SaveLoadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        importJSO\n                        \n                    \n                \n            \n            \n                \nimportJSO()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isJSOValid\n                        \n                    \n                \n            \n            \n                \nisJSOValid(jsoData: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    jsoData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        importForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    satellite: new FormControl(),\n    station: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        jsoData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        linkService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JSatOrbLinkService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { SaveLoadService } from '../services/save-load.service';\nimport { LoggerService } from '../shared/logger/logger.service';\nimport { JSatOrbLinkService } from './jsatorb-link.service';\n\n@Component({\n  selector: 'lib-luplink-jsatorb-import',\n  templateUrl: './luplink-jsatorb-import.component.html',\n  styleUrls: ['./luplink-jsatorb-import.component.scss'],\n})\nexport class JSatOrbLinkComponent implements OnInit {\n  constructor(\n    public linkService: JSatOrbLinkService,\n    private logger: LoggerService,\n    private loadService: SaveLoadService\n  ) {}\n  public jsoData: any;\n  public isEmpty: boolean = false;\n\n  importForm = new FormGroup({\n    satellite: new FormControl(),\n    station: new FormControl(),\n  });\n\n  ngOnInit(): void {\n    this.jsoData = this.loadService.parseJSOData(this.linkService.getJSOData());\n    if (this.isJSOValid(this.jsoData)) {\n      // Set the default values\n      this.importForm.patchValue({\n        satellite: this.jsoData?.satellites[0],\n        station: this.jsoData?.groundStations[0],\n      });\n    } else {\n      // Nothing interesting from getJSOData(), show warning\n      this.isEmpty = true;\n    }\n    // Init the link service that will keep tracks of luplink data changes for persistance of data\n    this.linkService.initService();\n  }\n\n  isJSOValid(jsoData: any): boolean {\n    /**\n     * This checks that the imported JSO data is valid: non empty or null and has existing satellites / GS.\n     * In all other cases, the data is invalid\n     *\n     * @input jsoData: {title: string, satellites: Satellite[], groundStations: GroundStation[]}\n     *\n     * @output validity of the data\n     */\n    if (jsoData) {\n      if (jsoData.groundStations && jsoData.satellites) {\n        if (jsoData.groundStations.length > 0 && jsoData.satellites.length > 0) {\n          return true;\n        }\n        this.logger.warn('Data from JSatOrb does either have no satellites or groundstations');\n      } else {\n        this.logger.warn('Data from JSatOrb does either have nosatellites or groundstations');\n      }\n    } else {\n      this.logger.warn('Data from JSatOrb is either undefined or null');\n    }\n    return false;\n  }\n  importJSO() {\n    this.loadService.importJSOData(\n      this.jsoData.title,\n      this.importForm.controls.satellite.value,\n      this.importForm.controls.station.value\n    );\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                Satellite:\n                \n                    \n                        {{satellite.name}}\n                    \n                \n            \n            \n                Station:\n                \n                    \n                        {{station.name}}\n                    \n                \n            \n         \n    \n    \n        \n            \n        \n        \n            \n                Load\n            \n        \n    \n\n\n    It seems no scenario has been imported inside JSatOrb.Luplink won't be able to import data from JSatOrb.\n\n    \n\n    \n                \n                    ./luplink-jsatorb-import.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Satellite:                                                            {{satellite.name}}                                                                            Station:                                                            {{station.name}}                                                                                                                                 Load                            It seems no scenario has been imported inside JSatOrb.Luplink won\\'t be able to import data from JSatOrb.'\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JSatOrbLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JSatOrbLinkService.html":{"url":"injectables/JSatOrbLinkService.html","title":"injectable - JSatOrbLinkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JSatOrbLinkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jsoData\n                            \n                            \n                                    Private\n                                jsoData$\n                            \n                            \n                                    Private\n                                jsoMockData\n                            \n                            \n                                    Private\n                                luplinkFormSave\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getJSOData\n                            \n                            \n                                getJSOData$\n                            \n                            \n                                initService\n                            \n                            \n                                refreshLuplink\n                            \n                            \n                                updateEndpoint\n                            \n                            \n                                updateJSOData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService, logger: LoggerService, loadService: SaveLoadService, environment: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadService\n                                                  \n                                                        \n                                                                        SaveLoadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getJSOData\n                        \n                    \n                \n            \n            \n                \ngetJSOData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getJSOData$\n                        \n                    \n                \n            \n            \n                \ngetJSOData$()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initService\n                        \n                    \n                \n            \n            \n                \ninitService()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refreshLuplink\n                        \n                    \n                \n            \n            \n                \nrefreshLuplink()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateEndpoint\n                        \n                    \n                \n            \n            \n                \nupdateEndpoint(newEndpoint: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newEndpoint\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateJSOData\n                        \n                    \n                \n            \n            \n                \nupdateJSOData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsoData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsoData$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subject\n\n                    \n                \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsoMockData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : jsoMockData\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        luplinkFormSave\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { FormService } from '../form/form.service';\nimport { SaveLoadService } from '../services/save-load.service';\nimport { jsoMockData } from '../shared/data.mock';\nimport { ENVIRONMENT_TOKEN } from '../shared/dependencies';\nimport { LoggerService } from '../shared/logger/logger.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class JSatOrbLinkService {\n  // private jsoData$: Subject = new Subject();\n  private jsoData: any;\n  private jsoData$: Subject = new Subject();\n  private jsoMockData = jsoMockData;\n  private luplinkFormSave: any;\n\n  constructor(\n    private formService: FormService,\n    private logger: LoggerService,\n    private loadService: SaveLoadService,\n    @Inject(ENVIRONMENT_TOKEN) private environment: any\n  ) {\n    this.jsoData = this.environment.debugMode ? this.jsoMockData : {}; //= this.jsoMockData; //{};\n    this.jsoData$.next(this.jsoData);\n  }\n  updateEndpoint(newEndpoint: string) {\n    /**\n     * Since the ENV token is passed by value between jso & luplink, we need a way to update the api endpoint\n     * @input newEndpoint, e.g. 'http://localhost:8001' or '157.63.2.17:87'\n     *\n     */\n    this.environment.luplinkEndpoint = newEndpoint;\n  }\n  updateJSOData(data: any): void {\n    /**\n     * Allow JSO to send data that can then be used by luplink\n     */\n    this.jsoData = data;\n    this.jsoData$.next(this.jsoData);\n  }\n\n  getJSOData(): any {\n    /**\n     * Returns the currently stored JSO data\n     */\n    return this.jsoData;\n  }\n\n  getJSOData$(): any {\n    /**\n     * Returns an observable to currently stored JSO data\n     */\n    return this.jsoData$;\n  }\n  initService() {\n    /**\n     * Started when the component is created. Handles the save of luplink data while navigating between luplink & jso\n     */\n    this.formService.globalForm.valueChanges.subscribe((value) => {\n      console.log('form data updated');\n      // this.luplinkFormSave = { data: value }; //JSON.stringify(value), undefined, 2 };\n      this.luplinkFormSave = this.loadService.generateConfig(value);\n    });\n  }\n  refreshLuplink() {\n    console.log('refreshing luplink');\n    if (this.luplinkFormSave) {\n      console.log('save exists');\n      this.formService.isInitialized = true;\n      this.formService.importForm(this.luplinkFormSave);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-layout\n            \n\n            \n                styleUrls\n                ./layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                antennaName\n                            \n                            \n                                    Public\n                                atmosphere\n                            \n                            \n                                    Public\n                                componentId\n                            \n                            \n                                    Public\n                                componentName\n                            \n                            \n                                    Public\n                                currentAntenna\n                            \n                            \n                                    Public\n                                currentStep\n                            \n                            \n                                    Public\n                                currentTemplate\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                formValidity\n                            \n                            \n                                    Public\n                                hasAntennaCard\n                            \n                            \n                                    Public\n                                hasAtmCard\n                            \n                            \n                                    Private\n                                inventory\n                            \n                            \n                                    Public\n                                isStandalone\n                            \n                            \n                                    Public\n                                logger\n                            \n                            \n                                    Public\n                                pageValidity\n                            \n                            \n                                    Public\n                                templates\n                            \n                            \n                                    Public\n                                validity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                refreshPageValidity\n                            \n                            \n                                    Public\n                                updateStepsValidity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: any, FormsTemplate: any, formService: FormService, route: ActivatedRoute, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        FormsTemplate\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        refreshPageValidity\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshPageValidity(pageId: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:152\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateStepsValidity\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStepsValidity(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:168\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        antennaName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        atmosphere\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : this.FormsTemplate.UL_atmosphere\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        componentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'geometry'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        componentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Geometry'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentAntenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : Antennas.genericAntenna\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentStep\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'geometry'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : this.FormsTemplate.geometry\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formValidity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasAntennaCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:94\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasAtmCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:95\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        inventory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    geometry: ['geometry'],\n    uplink: ['ULCarrier', 'ULTransmitter', 'ULReceiver'],\n    downlink: ['DLCarrier', 'DLTransmitter', 'DLReceiver'],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isStandalone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggerService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageValidity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        templates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:80\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, Input, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormService } from '../../form/form.service';\nimport { Form } from '../../shared/models/Form.model';\nimport { Antennas } from '../../shared/models/Antennas';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { ENVIRONMENT_TOKEN, FORM_TEMPLATE_TOKEN } from '../../shared/dependencies';\n\n@Component({\n  selector: 'lib-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n})\nexport class LayoutComponent implements OnInit {\n  public isStandalone: boolean = false;\n  constructor(\n    @Inject(ENVIRONMENT_TOKEN) private environment: any,\n    @Inject(FORM_TEMPLATE_TOKEN) private FormsTemplate: any,\n    public formService: FormService,\n    private route: ActivatedRoute,\n    public logger: LoggerService\n  ) {\n    this.isStandalone = this.environment.isStandalone; // Used to know if app is standalone\n    // FIXME: Move elsewhere with models\n    // This links each page to its components and its\n    this.templates = {\n      geometry: {\n        name: 'Geometry',\n        step: 'geometry',\n        form: FormsTemplate.geometry,\n      },\n      ULCarrier: {\n        name: 'Uplink Carrier',\n        step: 'uplink',\n        form: FormsTemplate.UL_carrier,\n        atm: FormsTemplate.UL_atmosphere,\n      },\n      ULTransmitter: {\n        name: 'Groundstation Transmitter',\n        step: 'uplink',\n        form: FormsTemplate.UL_transmitter_GS,\n        antenna: FormsTemplate.UL_GS_tx_antenna,\n      },\n      ULReceiver: {\n        name: 'Spacecraft Receiver',\n        step: 'uplink',\n        form: FormsTemplate.UL_receiver_SC,\n        antenna: FormsTemplate.UL_SC_rx_antenna,\n      },\n      DLCarrier: {\n        name: 'Uplink Carrier',\n        step: 'downlink',\n        form: FormsTemplate.DL_carrier,\n        atm: FormsTemplate.DL_atmosphere,\n      },\n      DLTransmitter: {\n        name: 'Groundstation Transmitter',\n        step: 'downlink',\n        form: FormsTemplate.DL_transmitter_SC,\n        antenna: FormsTemplate.DL_SC_tx_antenna,\n      },\n      DLReceiver: {\n        name: 'Spacecraft Receiver',\n        step: 'downlink',\n        form: FormsTemplate.DL_receiver_GS,\n        antenna: FormsTemplate.DL_GS_rx_antenna,\n      },\n    };\n  }\n  /* Inventory gives access to neighbor for each step,\n  useful when one of the page is updated and we want to\n  know if step is complete : page -> step -> neighbors */\n  private inventory: { [key: string]: string[] } = {\n    geometry: ['geometry'],\n    uplink: ['ULCarrier', 'ULTransmitter', 'ULReceiver'],\n    downlink: ['DLCarrier', 'DLTransmitter', 'DLReceiver'],\n  };\n\n  public validity: any = {};\n\n  // Both are public for testing purposes\n  public formValidity: any = {};\n  public pageValidity: any = {};\n\n  public componentName: string = 'Geometry';\n  public componentId: string = 'geometry';\n  public currentStep: string = 'geometry';\n\n  public currentTemplate: Form = this.FormsTemplate.geometry;\n  public currentAntenna: Form = Antennas.genericAntenna;\n  public atmosphere: Form = this.FormsTemplate.UL_atmosphere;\n  public antennaName: string = '';\n  public hasAntennaCard: boolean = false;\n  public hasAtmCard: boolean = false;\n  public templates: { [key: string]: { name: string; step: string; form: Form; atm?: Form; antenna?: Form } } = {};\n\n  ngOnInit(): void {\n    this.validity.steps = {\n      geometry: 'none',\n      uplink: 'none',\n      downlink: 'none',\n      results: 'none',\n    };\n\n    Object.entries(this.templates).forEach(([pageKey, pageValue]) => {\n      this.pageValidity[pageKey] = {};\n      this.formValidity[pageKey] = {};\n      Object.entries(pageValue).forEach(([key, value]) => {\n        if (key !== 'step' && key !== 'name') {\n          const v = value;\n          this.pageValidity[pageKey][v.componentId] = 'unvisited';\n        }\n      });\n    });\n\n    this.route.queryParams.subscribe((params) => {\n      if (params.component) {\n        this.componentId = params.component;\n      }\n      const currentComponentTemplate = this.templates[this.componentId];\n      if (currentComponentTemplate) {\n        this.currentStep = currentComponentTemplate.step;\n        this.componentName = currentComponentTemplate.name;\n        this.currentTemplate = currentComponentTemplate.form;\n        this.hasAntennaCard = false;\n        this.hasAtmCard = false;\n        if (currentComponentTemplate.antenna) {\n          this.currentAntenna = currentComponentTemplate.antenna;\n          this.antennaName = this.currentAntenna.componentName || 'Antenna';\n          this.hasAntennaCard = true;\n        }\n        if (currentComponentTemplate.atm) {\n          this.atmosphere = currentComponentTemplate.atm;\n          this.hasAtmCard = true;\n        }\n      } else {\n        this.logger.debug(\"The selected template doesn't exist, please check the variable name used\");\n      }\n    });\n  }\n\n  public handleError(event: { id: string; validity: 'valid' | 'invalid' | 'none' }) {\n    if (event.id !== '' && this.componentId) {\n      // this.logger.error(event.id, event.validity);\n      this.pageValidity[this.componentId][event.id] = event.validity;\n      this.refreshPageValidity(this.componentId);\n      this.updateStepsValidity(this.componentId);\n    }\n  }\n\n  public refreshPageValidity(pageId: string) {\n    /**\n     * This function updates the validity of a page based on its internal 'formFragments' validities.\n     * Once again, the dependency is the following :\n     * \"Step/Groups validity\" --> \"Pages validity\" --> \"FormFragments validity\"\n     * ex: Uplink validity --> Carrier, Transmitter, Receiver validities --> Carrier, Environment, Rx Antenna, ... validities\n     *\n     * This function could be tidied up. At least it is tested.\n     */\n    let valid = 'none';\n    if (Object.values(this.pageValidity[pageId]).includes('invalid')) valid = 'invalid';\n    if (Object.values(this.pageValidity[pageId]).every((item) => item === 'valid')) valid = 'valid';\n    this.formValidity[pageId] = valid;\n    if (!valid) this.logger.error(pageId);\n  }\n\n  public updateStepsValidity(id: string) {\n    const { step } = this.templates[this.componentId];\n    let valid: boolean = true;\n    let unvisited: boolean = false;\n    let validity: string = 'valid';\n\n    // this.logger.warn('validity', this.formValidity);\n    this.inventory[step].forEach((neighbor) => {\n      if (this.formValidity[neighbor] === 'invalid') {\n        // this.logger.error('invalid neighbor', neighbor);\n        valid = false;\n      }\n      if (!this.formValidity[neighbor]) {\n        unvisited = true;\n      }\n    });\n    if (!valid) validity = 'invalid';\n    if (unvisited) validity = 'unvisited';\n    this.validity.steps[step] = validity;\n\n    // this.logger.warn('Current steps validity', this.validity.steps);\n  }\n}\n\n    \n\n    \n        \n  \n  \n   \n    \n\n    \n\n      \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      \n        \n      \n    \n  \n  \n  \n    \n    \n    \n  \n  \n    {{ formService.globalForm.value | json }}\n  \n\n\n\n\n  \n -->\n\n    \n\n    \n                \n                    ./layout.component.scss\n                \n                \n.subform {\n  min-width:250px;//Not working\n  max-width:900px;\n\n}\n\n.container {\n  width: 80%;\n  margin: 25px;\n}\n\n.progressbar {\n  counter-reset: step;\n}\n\n.progressbar li {\n  list-style-type: none;\n  width: 25%;\n  float: left;\n  font-size:12px;\n  position: relative;\n  text-align:center;\n  text-transform: uppercase;\n}\n.progressbar li:before {\n  width: 30px;\n  height: 30px;\n  content: counter(step);\n  counter-increment: step;\n  line-height: 30px;\n  border: 2px solid #7d7d7d;\n  display: block;\n  text-align: center;\n  margin: 0 auto 10px auto;\n  border-radius: 50%;\n  background-color: white;\n}\n.progressbar li:after {\n  width: 100%;\n  height: 2px;\n  content: '';\n  position: absolute;\n  background-color: #7d7d7d;\n  top: 15px;\n  left: -50%;\n  z-index: -1;\n}\n.progressbar li:first-child:after {\n  content: none;\n}\n.progressbar li.active {\n  color: green;\n}\n.progressbar li.active:before {\n  border-color: #55b776;\n}\n.progressbar li.active + li:after {\n  background-color: #55b776;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                             {{ formService.globalForm.value | json }}     -->'\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    LayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_imports\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_providers\n\n\n\ncluster_LayoutModule_exports\n\n\n\n\nJSatOrbLinkComponent\n\nJSatOrbLinkComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nJSatOrbLinkComponent->LayoutModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nLayoutModule -->\n\nLayoutComponent->LayoutModule\n\n\n\n\n\nViewComponent\n\nViewComponent\n\nLayoutModule -->\n\nViewComponent->LayoutModule\n\n\n\n\n\nJSatOrbLinkComponent \n\nJSatOrbLinkComponent \n\nJSatOrbLinkComponent  -->\n\nLayoutModule->JSatOrbLinkComponent \n\n\n\n\n\nLayoutComponent \n\nLayoutComponent \n\nLayoutComponent  -->\n\nLayoutModule->LayoutComponent \n\n\n\n\n\nViewComponent \n\nViewComponent \n\nViewComponent  -->\n\nLayoutModule->ViewComponent \n\n\n\n\n\nCardModule\n\nCardModule\n\nLayoutModule -->\n\nCardModule->LayoutModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nLayoutModule -->\n\nFormModule->LayoutModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nLayoutModule -->\n\nLoggerModule->LayoutModule\n\n\n\n\n\nNavigationSidebarModule\n\nNavigationSidebarModule\n\nLayoutModule -->\n\nNavigationSidebarModule->LayoutModule\n\n\n\n\n\nResultSidebarModule\n\nResultSidebarModule\n\nLayoutModule -->\n\nResultSidebarModule->LayoutModule\n\n\n\n\n\nSimpleDocumentationModule\n\nSimpleDocumentationModule\n\nLayoutModule -->\n\nSimpleDocumentationModule->LayoutModule\n\n\n\n\n\nStepbarModule\n\nStepbarModule\n\nLayoutModule -->\n\nStepbarModule->LayoutModule\n\n\n\n\n\nJSatOrbLinkService\n\nJSatOrbLinkService\n\nLayoutModule -->\n\nJSatOrbLinkService->LayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/ui/layout.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JSatOrbLinkComponent\n                        \n                        \n                            LayoutComponent\n                        \n                        \n                            ViewComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            JSatOrbLinkService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardModule\n                        \n                        \n                            FormModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            NavigationSidebarModule\n                        \n                        \n                            ResultSidebarModule\n                        \n                        \n                            SimpleDocumentationModule\n                        \n                        \n                            StepbarModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JSatOrbLinkComponent\n                        \n                        \n                            LayoutComponent\n                        \n                        \n                            ViewComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { LayoutComponent } from './link-budget/layout.component';\nimport { CardModule } from '../components/card/card.module';\nimport { FormModule } from '../form/form.module';\nimport { LoggerModule } from '../shared/logger/logger.module';\nimport { SimpleDocumentationModule } from '../components/simple-documentation/simple-documentation.module';\nimport { StepbarModule } from '../components/stepbar/stepbar.module';\nimport { NavigationSidebarModule } from '../components/navigation-sidebar/navigation-sidebar.module';\nimport { ResultSidebarModule } from '../components/results/results.module';\nimport { routes } from './app.routes';\nimport { ViewComponent } from './view/view.component';\nimport { JSatOrbLinkComponent } from '../luplink-jsatorb-import/luplink-jsatorb-import.component';\nimport { JSatOrbLinkService } from '../luplink-jsatorb-import/jsatorb-link.service';\nimport { CustomRouteReuseStrategy } from '../shared/CustomRouteReuseStrategy';\n\n@NgModule({\n  declarations: [\n    LayoutComponent,\n    ViewComponent,\n    JSatOrbLinkComponent,\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CardModule,\n    FormModule,\n    LoggerModule,\n    SimpleDocumentationModule,\n    StepbarModule,\n    NavigationSidebarModule,\n    ResultSidebarModule,\n    ReactiveFormsModule,\n\n  ],\n  exports: [\n    LayoutComponent,\n    ViewComponent,\n    JSatOrbLinkComponent,\n  ],\n  providers: [\n    JSatOrbLinkService,\n    // Reusing routes allow us to avoid recreating our components on each router change.\n    // Also, faster change between tabs\n    // {\n    //   provide: RouteReuseStrategy,\n    //   useClass: CustomRouteReuseStrategy,\n    // }\n  ],\n})\nexport class LayoutModule {\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LinkBudgetComponent.html":{"url":"interfaces/LinkBudgetComponent.html","title":"interface - LinkBudgetComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LinkBudgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gain\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            linear\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gain:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linear:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LinkBudgetComponent {\n  label: string;\n  gain: number;\n  linear: boolean;\n  position: number;\n  width: number; // These values are defined in percent\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport class LinkBudgetScenario {\n  private powerIn: number = 0;\n\n  private powerOut: number = 0;\n\n  private components: {\n    [id: string]: LinkBudgetComponent;\n  };\n\n  private points: Point[];\n\n  constructor(power: number) {\n    this.powerIn = power;\n    this.components = {};\n    this.points = [];\n  }\n\n  public setPowerIn(power: number) {\n    this.powerIn = power;\n  }\n\n  public getPowerOut() {\n    return this.powerOut;\n  }\n\n  public getLabels() {\n    /**\n     * Returns the different labels for the components with their associated positions in\n     * the form of a list of {label, position};\n     */\n    const labels: { name: string; position: number }[] = [];\n    Object.entries(this.components).forEach(([key, value]) => {\n      const label = { name: value.label, position: value.position + value.width / 2 };\n      labels.push(label);\n    });\n    // for (const key in this.components) {\n    //     const c = this.components[key];\n    //     const label = { name: c.label, position: c.position + c.width / 2 };\n    //     labels.push(label);\n    // }\n    return labels;\n  }\n\n  public addComponent(id: string, LinkBudgetComponent: LinkBudgetComponent) {\n    this.components[id] = LinkBudgetComponent;\n  }\n\n  public addComponents(components: { id: string; component: LinkBudgetComponent }[]) {\n    /**\n     * This method adds multiples components at once\n     */\n\n    components.forEach((s) => {\n      this.addComponent(s.id, s.component);\n    });\n  }\n\n  public editGain(id: string, value: number) {\n    this.components[id].gain = value;\n  }\n\n  public editGains(gains: { [key: string]: number }) {\n    /**\n     * Edit multiple gains at once, these can be provided by a formGroup using the formGroup.formValues attribute\n     */\n    // console.log(gains.keys());\n\n    Object.keys(gains).forEach((key: any) => {\n      this.editGain(key, gains[key]);\n    });\n  }\n\n  public numberOfComponents(): number {\n    return Object.keys(this.components).length;\n  }\n\n  public getPoints(): Point[] {\n    return this.points;\n  }\n\n  public randomize(amplitude: number = 30): { [id: string]: LinkBudgetComponent } {\n    /** This changes the gain from the components with random values and return the new components */\n    const excluded = ['tx', 'rx'];\n    Object.keys(this.components).forEach((id) => {\n      if (!excluded.includes(id)) {\n        this.components[id].gain = Math.round((Math.random() - 0.8) * amplitude); // Rounded to nearest integer\n      }\n    });\n    this.powerIn = Math.random() * amplitude;\n    return this.components;\n  }\n\n  public compute(link: 'uplink' | 'downlink' = 'uplink') {\n    /** This function gives us the points needed to plot our LB graph */\n    \n    // Depending on the kind of link we want to go backward\n    const isUp = link === 'uplink';\n    const lastPoint: Point = { x: isUp ? 0 : 100, y: this.powerIn };\n    const points: Point[] = [{ x: lastPoint.x, y: lastPoint.y }];\n    const discontinuityPoint: Point = { x: 0, y: 0 };\n    Object.values(this.components).forEach((LinkBudgetComponent) => {\n      if (!LinkBudgetComponent.linear) {\n        // Here we create the discontinuity by adding a point with same abscissa\n        discontinuityPoint.x = lastPoint.x;\n        discontinuityPoint.y = lastPoint.y + LinkBudgetComponent.gain;\n        points.push({ x: discontinuityPoint.x, y: discontinuityPoint.y });\n      }\n\n      if (isUp) lastPoint.x += LinkBudgetComponent.width;\n      if (!isUp) lastPoint.x -= LinkBudgetComponent.width;\n      lastPoint.y += LinkBudgetComponent.gain;\n\n      points.push({ x: lastPoint.x, y: lastPoint.y });\n    });\n    this.powerOut = lastPoint.y;\n    this.points = points;\n    // for (const id in this.components) {\n    //   if (Object.prototype.hasOwnProperty.call(this.components, id)) {\n    //     const LinkBudgetComponent = this.components[id];\n\n    //     if (!LinkBudgetComponent.linear) {\n    //     // Here we create the discontinuity by adding a point with same abscissa\n    //       discontinuityPoint.x = lastPoint.x;\n    //       discontinuityPoint.y = lastPoint.y + LinkBudgetComponent.gain;\n    //       points.push({ x: discontinuityPoint.x, y: discontinuityPoint.y });\n    //     }\n\n    //     (lastPoint.x += LinkBudgetComponent.width);\n    //     (lastPoint.y += LinkBudgetComponent.gain);\n\n    //     points.push({ x: lastPoint.x, y: lastPoint.y });\n    //   }\n\n    //   this.powerOut = lastPoint.y;\n    //   this.points = points;\n    // // return points;\n    // }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkBudgetScenario.html":{"url":"classes/LinkBudgetScenario.html","title":"class - LinkBudgetScenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkBudgetScenario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                components\n                            \n                            \n                                    Private\n                                points\n                            \n                            \n                                    Private\n                                powerIn\n                            \n                            \n                                    Private\n                                powerOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addComponent\n                            \n                            \n                                    Public\n                                addComponents\n                            \n                            \n                                    Public\n                                compute\n                            \n                            \n                                    Public\n                                editGain\n                            \n                            \n                                    Public\n                                editGains\n                            \n                            \n                                    Public\n                                getLabels\n                            \n                            \n                                    Public\n                                getPoints\n                            \n                            \n                                    Public\n                                getPowerOut\n                            \n                            \n                                    Public\n                                numberOfComponents\n                            \n                            \n                                    Public\n                                randomize\n                            \n                            \n                                    Public\n                                setPowerIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(power: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        power\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        points\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        powerIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        powerOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    addComponent(id: string, LinkBudgetComponent: LinkBudgetComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    LinkBudgetComponent\n                                    \n                                                LinkBudgetComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addComponents\n                        \n                    \n                \n            \n            \n                \n                    \n                    addComponents(components: literal type[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    components\n                                    \n                                            literal type[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        compute\n                        \n                    \n                \n            \n            \n                \n                    \n                    compute(link: \"uplink\" | \"downlink\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                            \"uplink\" | \"downlink\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'uplink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editGain\n                        \n                    \n                \n            \n            \n                \n                    \n                    editGain(id: string, value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editGains\n                        \n                    \n                \n            \n            \n                \n                    \n                    editGains(gains: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gains\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getLabels\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLabels()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getPoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoints()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Point[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getPowerOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPowerOut()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        numberOfComponents\n                        \n                    \n                \n            \n            \n                \n                    \n                    numberOfComponents()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        randomize\n                        \n                    \n                \n            \n            \n                \n                    \n                    randomize(amplitude: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    amplitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        30\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPowerIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPowerIn(power: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    power\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface LinkBudgetComponent {\n  label: string;\n  gain: number;\n  linear: boolean;\n  position: number;\n  width: number; // These values are defined in percent\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport class LinkBudgetScenario {\n  private powerIn: number = 0;\n\n  private powerOut: number = 0;\n\n  private components: {\n    [id: string]: LinkBudgetComponent;\n  };\n\n  private points: Point[];\n\n  constructor(power: number) {\n    this.powerIn = power;\n    this.components = {};\n    this.points = [];\n  }\n\n  public setPowerIn(power: number) {\n    this.powerIn = power;\n  }\n\n  public getPowerOut() {\n    return this.powerOut;\n  }\n\n  public getLabels() {\n    /**\n     * Returns the different labels for the components with their associated positions in\n     * the form of a list of {label, position};\n     */\n    const labels: { name: string; position: number }[] = [];\n    Object.entries(this.components).forEach(([key, value]) => {\n      const label = { name: value.label, position: value.position + value.width / 2 };\n      labels.push(label);\n    });\n    // for (const key in this.components) {\n    //     const c = this.components[key];\n    //     const label = { name: c.label, position: c.position + c.width / 2 };\n    //     labels.push(label);\n    // }\n    return labels;\n  }\n\n  public addComponent(id: string, LinkBudgetComponent: LinkBudgetComponent) {\n    this.components[id] = LinkBudgetComponent;\n  }\n\n  public addComponents(components: { id: string; component: LinkBudgetComponent }[]) {\n    /**\n     * This method adds multiples components at once\n     */\n\n    components.forEach((s) => {\n      this.addComponent(s.id, s.component);\n    });\n  }\n\n  public editGain(id: string, value: number) {\n    this.components[id].gain = value;\n  }\n\n  public editGains(gains: { [key: string]: number }) {\n    /**\n     * Edit multiple gains at once, these can be provided by a formGroup using the formGroup.formValues attribute\n     */\n    // console.log(gains.keys());\n\n    Object.keys(gains).forEach((key: any) => {\n      this.editGain(key, gains[key]);\n    });\n  }\n\n  public numberOfComponents(): number {\n    return Object.keys(this.components).length;\n  }\n\n  public getPoints(): Point[] {\n    return this.points;\n  }\n\n  public randomize(amplitude: number = 30): { [id: string]: LinkBudgetComponent } {\n    /** This changes the gain from the components with random values and return the new components */\n    const excluded = ['tx', 'rx'];\n    Object.keys(this.components).forEach((id) => {\n      if (!excluded.includes(id)) {\n        this.components[id].gain = Math.round((Math.random() - 0.8) * amplitude); // Rounded to nearest integer\n      }\n    });\n    this.powerIn = Math.random() * amplitude;\n    return this.components;\n  }\n\n  public compute(link: 'uplink' | 'downlink' = 'uplink') {\n    /** This function gives us the points needed to plot our LB graph */\n    \n    // Depending on the kind of link we want to go backward\n    const isUp = link === 'uplink';\n    const lastPoint: Point = { x: isUp ? 0 : 100, y: this.powerIn };\n    const points: Point[] = [{ x: lastPoint.x, y: lastPoint.y }];\n    const discontinuityPoint: Point = { x: 0, y: 0 };\n    Object.values(this.components).forEach((LinkBudgetComponent) => {\n      if (!LinkBudgetComponent.linear) {\n        // Here we create the discontinuity by adding a point with same abscissa\n        discontinuityPoint.x = lastPoint.x;\n        discontinuityPoint.y = lastPoint.y + LinkBudgetComponent.gain;\n        points.push({ x: discontinuityPoint.x, y: discontinuityPoint.y });\n      }\n\n      if (isUp) lastPoint.x += LinkBudgetComponent.width;\n      if (!isUp) lastPoint.x -= LinkBudgetComponent.width;\n      lastPoint.y += LinkBudgetComponent.gain;\n\n      points.push({ x: lastPoint.x, y: lastPoint.y });\n    });\n    this.powerOut = lastPoint.y;\n    this.points = points;\n    // for (const id in this.components) {\n    //   if (Object.prototype.hasOwnProperty.call(this.components, id)) {\n    //     const LinkBudgetComponent = this.components[id];\n\n    //     if (!LinkBudgetComponent.linear) {\n    //     // Here we create the discontinuity by adding a point with same abscissa\n    //       discontinuityPoint.x = lastPoint.x;\n    //       discontinuityPoint.y = lastPoint.y + LinkBudgetComponent.gain;\n    //       points.push({ x: discontinuityPoint.x, y: discontinuityPoint.y });\n    //     }\n\n    //     (lastPoint.x += LinkBudgetComponent.width);\n    //     (lastPoint.y += LinkBudgetComponent.gain);\n\n    //     points.push({ x: lastPoint.x, y: lastPoint.y });\n    //   }\n\n    //   this.powerOut = lastPoint.y;\n    //   this.points = points;\n    // // return points;\n    // }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogEntry.html":{"url":"classes/LogEntry.html","title":"class - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/logger/logger.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entryDate\n                            \n                            \n                                extraInfo\n                            \n                            \n                                level\n                            \n                            \n                                logWithDate\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildLogString\n                            \n                            \n                                    Static\n                                formatParams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        entryDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extraInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogLevel\n\n                    \n                \n                \n                    \n                        Default value : LogLevel.Debug\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logWithDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildLogString\n                        \n                    \n                \n            \n            \n                \nbuildLogString()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        formatParams\n                        \n                    \n                \n            \n            \n                \n                    \n                    formatParams(params: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { LoggerModule } from './logger.module';\n\nexport enum LogLevel {\n  All = 0,\n  Debug = 1,\n  Info = 2,\n  Warn = 3,\n  Error = 4,\n  Fatal = 5,\n  Off = 6,\n}\n\nexport class LogEntry {\n  // Public Properties\n  entryDate: Date = new Date();\n\n  message: string = '';\n\n  level: LogLevel = LogLevel.Debug;\n\n  extraInfo: any[] = [];\n\n  logWithDate: boolean = true;\n\n  buildLogString(): string {\n    let ret: string = '';\n\n    if (this.logWithDate) {\n      ret = `${new Date()} - `;\n    }\n\n    ret += LogLevel[this.level];\n    ret += ` - ${this.message}`;\n    if (this.extraInfo.length) {\n      ret += ` - Extra Info: ${LogEntry.formatParams(this.extraInfo)}`;\n    }\n\n    return ret;\n  }\n\n  static formatParams(params: any[]): string {\n    let ret: string = params.join(',');\n\n    // Is there at least one object in the array?\n    if (params.some((p) => typeof p === 'object')) {\n      ret = '';\n\n      // Build comma-delimited string\n      params.forEach((item) => {\n        ret += `${JSON.stringify(item)},`;\n      });\n      // for (const item of params) {\n\n      // }\n    }\n\n    return ret;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggerService {\n  /**\n   * A custom service to log errors https://www.codemag.com/Article/1711021/Logging-in-Angular-Applications\n   */\n  constructor(private toastr: ToastrService) { }\n\n  // Miscellanious debugging variables\n  developer: boolean = false;\n\n  // End\n\n  level: LogLevel = LogLevel.Debug;\n\n  logWithDate: boolean = false;\n\n  logWithToast: boolean = true;\n\n  debug(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Debug, optionalParams);\n  }\n\n  info(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Info, optionalParams);\n  }\n\n  warn(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Warn, optionalParams);\n    this.sendToast(msg, LogLevel.Warn, LogEntry.formatParams(optionalParams));\n  }\n\n  error(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Error, optionalParams);\n    // console.log(typeof optionalParams[0])\n    // if (optionalParams.length>0){\n    // let entry = new LogEntry\n    this.sendToast(msg, LogLevel.Error, LogEntry.formatParams(optionalParams));\n  }\n\n  success(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Info, optionalParams);\n    this.sendToast(msg, LogLevel.Info, LogEntry.formatParams(optionalParams));\n  }\n\n  fatal(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Fatal, optionalParams);\n  }\n\n  log(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.All, optionalParams);\n  }\n\n  private sendToast(title: string, level: LogLevel, message?:string, params?: any[]) {\n    if (this.shouldLog(level) && this.logWithToast) {\n      switch (level) {\n        case LogLevel.Error:\n          this.toastr.error(message, title);\n          break;\n        case LogLevel.Warn:\n          this.toastr.warning(message, title);\n          break;\n        case LogLevel.Info:\n          this.toastr.success(message, title);\n          break;\n        default:\n          this.toastr.show(title);\n      }\n    }\n  }\n\n  private writeToLog(msg: string, level: LogLevel, params: any[]) {\n    if (this.shouldLog(level)) {\n      const entry: LogEntry = new LogEntry();\n      entry.message = msg;\n      entry.level = level;\n      entry.extraInfo = params;\n      entry.logWithDate = this.logWithDate;\n      switch (level) {\n        case LogLevel.Warn: console.warn(entry.buildLogString()); break;\n        case LogLevel.Error: console.error(entry.buildLogString()); break;\n        case LogLevel.Debug: console.debug(entry.buildLogString()); break;\n        default: console.log(entry.buildLogString());\n      }\n    }\n  }\n\n  private shouldLog(level: LogLevel): boolean {\n    let ret: boolean = false;\n    if ((level >= this.level && level !== LogLevel.Off) || this.level === LogLevel.All) {\n      ret = true;\n    }\n    return ret;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLoggerService\n\nLoggerService\n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.module.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { LoggerService } from './logger.service';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule, // Required by Toastr\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right',\n    }),\n  ],\n  providers: [\n    LoggerService,\n  ],\n})\nexport class LoggerModule {\n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: LoggerModule,\n      providers: [\n        { provide: LoggerService },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/logger/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                developer\n                            \n                            \n                                level\n                            \n                            \n                                logWithDate\n                            \n                            \n                                logWithToast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                fatal\n                            \n                            \n                                info\n                            \n                            \n                                log\n                            \n                            \n                                    Private\n                                sendToast\n                            \n                            \n                                    Private\n                                shouldLog\n                            \n                            \n                                success\n                            \n                            \n                                warn\n                            \n                            \n                                    Private\n                                writeToLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:73\n                            \n                        \n\n                \n                    \n                            A custom service to log errors https://www.codemag.com/Article/1711021/Logging-in-Angular-Applications\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        sendToast\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendToast(title: string, level: LogLevel, message?: string, params?: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        shouldLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldLog(level: LogLevel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        writeToLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeToLog(msg: string, level: LogLevel, params: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        developer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogLevel\n\n                    \n                \n                \n                    \n                        Default value : LogLevel.Debug\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logWithDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logWithToast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:88\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { LoggerModule } from './logger.module';\n\nexport enum LogLevel {\n  All = 0,\n  Debug = 1,\n  Info = 2,\n  Warn = 3,\n  Error = 4,\n  Fatal = 5,\n  Off = 6,\n}\n\nexport class LogEntry {\n  // Public Properties\n  entryDate: Date = new Date();\n\n  message: string = '';\n\n  level: LogLevel = LogLevel.Debug;\n\n  extraInfo: any[] = [];\n\n  logWithDate: boolean = true;\n\n  buildLogString(): string {\n    let ret: string = '';\n\n    if (this.logWithDate) {\n      ret = `${new Date()} - `;\n    }\n\n    ret += LogLevel[this.level];\n    ret += ` - ${this.message}`;\n    if (this.extraInfo.length) {\n      ret += ` - Extra Info: ${LogEntry.formatParams(this.extraInfo)}`;\n    }\n\n    return ret;\n  }\n\n  static formatParams(params: any[]): string {\n    let ret: string = params.join(',');\n\n    // Is there at least one object in the array?\n    if (params.some((p) => typeof p === 'object')) {\n      ret = '';\n\n      // Build comma-delimited string\n      params.forEach((item) => {\n        ret += `${JSON.stringify(item)},`;\n      });\n      // for (const item of params) {\n\n      // }\n    }\n\n    return ret;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggerService {\n  /**\n   * A custom service to log errors https://www.codemag.com/Article/1711021/Logging-in-Angular-Applications\n   */\n  constructor(private toastr: ToastrService) { }\n\n  // Miscellanious debugging variables\n  developer: boolean = false;\n\n  // End\n\n  level: LogLevel = LogLevel.Debug;\n\n  logWithDate: boolean = false;\n\n  logWithToast: boolean = true;\n\n  debug(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Debug, optionalParams);\n  }\n\n  info(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Info, optionalParams);\n  }\n\n  warn(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Warn, optionalParams);\n    this.sendToast(msg, LogLevel.Warn, LogEntry.formatParams(optionalParams));\n  }\n\n  error(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Error, optionalParams);\n    // console.log(typeof optionalParams[0])\n    // if (optionalParams.length>0){\n    // let entry = new LogEntry\n    this.sendToast(msg, LogLevel.Error, LogEntry.formatParams(optionalParams));\n  }\n\n  success(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Info, optionalParams);\n    this.sendToast(msg, LogLevel.Info, LogEntry.formatParams(optionalParams));\n  }\n\n  fatal(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Fatal, optionalParams);\n  }\n\n  log(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.All, optionalParams);\n  }\n\n  private sendToast(title: string, level: LogLevel, message?:string, params?: any[]) {\n    if (this.shouldLog(level) && this.logWithToast) {\n      switch (level) {\n        case LogLevel.Error:\n          this.toastr.error(message, title);\n          break;\n        case LogLevel.Warn:\n          this.toastr.warning(message, title);\n          break;\n        case LogLevel.Info:\n          this.toastr.success(message, title);\n          break;\n        default:\n          this.toastr.show(title);\n      }\n    }\n  }\n\n  private writeToLog(msg: string, level: LogLevel, params: any[]) {\n    if (this.shouldLog(level)) {\n      const entry: LogEntry = new LogEntry();\n      entry.message = msg;\n      entry.level = level;\n      entry.extraInfo = params;\n      entry.logWithDate = this.logWithDate;\n      switch (level) {\n        case LogLevel.Warn: console.warn(entry.buildLogString()); break;\n        case LogLevel.Error: console.error(entry.buildLogString()); break;\n        case LogLevel.Debug: console.debug(entry.buildLogString()); break;\n        default: console.log(entry.buildLogString());\n      }\n    }\n  }\n\n  private shouldLog(level: LogLevel): boolean {\n    let ret: boolean = false;\n    if ((level >= this.level && level !== LogLevel.Off) || this.level === LogLevel.All) {\n      ret = true;\n    }\n    return ret;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LuplinkConfig.html":{"url":"interfaces/LuplinkConfig.html","title":"interface - LuplinkConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LuplinkConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/luplink.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultForm\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isStandalone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultForm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultForm:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isStandalone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isStandalone:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NanospaceRequestService, NanospaceService, NgxNanospaceClientLibModule } from 'ngx-nanospace-client-lib';\nimport { CardModule } from './components/card/card.module';\nimport ComputeLinkBudgetService from './services/compute-link-budget.service';\nimport { SaveLoadService } from './services/save-load.service';\nimport { ENVIRONMENT_TOKEN, FORM_TEMPLATE_TOKEN } from './shared/dependencies';\n\ninterface LuplinkConfig {\n  defaultForm: any;\n  environment: any;\n  isStandalone?: boolean;\n}\nconst NanospaceConfig = {\n  endpoint: 'https://dcas-nanostar.isae.fr/api/',\n};\n\n// This is a workaround to avoid forRoot being called twice (see: https://github.com/angular/angular/issues/38376#issuecomment-670551280)\nconst NgxNanospace = NgxNanospaceClientLibModule.forRoot(NanospaceConfig);\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, FormsModule, CardModule, HttpClientModule, NgxNanospace],\n  providers: [ComputeLinkBudgetService, SaveLoadService, NanospaceService, NanospaceRequestService],\n  exports: [],\n})\nexport class LuplinkModule {\n  static forRoot(config: LuplinkConfig): ModuleWithProviders {\n    console.log(config);\n    return {\n      ngModule: LuplinkModule,\n      providers: [\n        {\n          provide: FORM_TEMPLATE_TOKEN,\n          useValue: config.defaultForm,\n        },\n        {\n          provide: ENVIRONMENT_TOKEN,\n          useValue: { ...config.environment, isStandalone: config.isStandalone, version: '0.2.1' },\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LuplinkModule.html":{"url":"modules/LuplinkModule.html","title":"module - LuplinkModule","body":"\n                   \n\n\n\n\n    Modules\n    LuplinkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LuplinkModule\n\n\n\ncluster_LuplinkModule_imports\n\n\n\ncluster_LuplinkModule_providers\n\n\n\n\nCardModule\n\nCardModule\n\n\n\nLuplinkModule\n\nLuplinkModule\n\nLuplinkModule -->\n\nCardModule->LuplinkModule\n\n\n\n\n\nComputeLinkBudgetService\n\nComputeLinkBudgetService\n\nLuplinkModule -->\n\nComputeLinkBudgetService->LuplinkModule\n\n\n\n\n\nSaveLoadService\n\nSaveLoadService\n\nLuplinkModule -->\n\nSaveLoadService->LuplinkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/luplink.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ComputeLinkBudgetService\n                        \n                        \n                            SaveLoadService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: LuplinkConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink.module.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                LuplinkConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NanospaceRequestService, NanospaceService, NgxNanospaceClientLibModule } from 'ngx-nanospace-client-lib';\nimport { CardModule } from './components/card/card.module';\nimport ComputeLinkBudgetService from './services/compute-link-budget.service';\nimport { SaveLoadService } from './services/save-load.service';\nimport { ENVIRONMENT_TOKEN, FORM_TEMPLATE_TOKEN } from './shared/dependencies';\n\ninterface LuplinkConfig {\n  defaultForm: any;\n  environment: any;\n  isStandalone?: boolean;\n}\nconst NanospaceConfig = {\n  endpoint: 'https://dcas-nanostar.isae.fr/api/',\n};\n\n// This is a workaround to avoid forRoot being called twice (see: https://github.com/angular/angular/issues/38376#issuecomment-670551280)\nconst NgxNanospace = NgxNanospaceClientLibModule.forRoot(NanospaceConfig);\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, FormsModule, CardModule, HttpClientModule, NgxNanospace],\n  providers: [ComputeLinkBudgetService, SaveLoadService, NanospaceService, NanospaceRequestService],\n  exports: [],\n})\nexport class LuplinkModule {\n  static forRoot(config: LuplinkConfig): ModuleWithProviders {\n    console.log(config);\n    return {\n      ngModule: LuplinkModule,\n      providers: [\n        {\n          provide: FORM_TEMPLATE_TOKEN,\n          useValue: config.defaultForm,\n        },\n        {\n          provide: ENVIRONMENT_TOKEN,\n          useValue: { ...config.environment, isStandalone: config.isStandalone, version: '0.2.1' },\n        },\n      ],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockComputeService.html":{"url":"classes/MockComputeService.html","title":"class - MockComputeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockComputeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormBuilder, FormGroup } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n// Mocking the Toastr module thanks to https://github.com/scttcper/ngx-toastr/issues/339#issuecomment-508750488\nimport { Injectable, NgModule } from '@angular/core';\nimport { IndividualConfig, ToastPackage, ToastRef, ToastrModule } from 'ngx-toastr';\n// import mockPOSTData from './mockPOSTData.json';\n// Mocking  FormService\nexport class MockFormService {\n  public result: BehaviorSubject = new BehaviorSubject('');\n  fb = new FormBuilder();\n  public getFormData(): FormGroup {\n    // Objects.mockPOSTData.geometry\n    // const geo = this.fb.group(mockPOSTData.geometry);\n    return new FormBuilder().group({ test: 5, u: 3.14159265358979323846 });\n  }\n  public initForms(): void {}\n\n  public getFormData$(): Observable {\n    return of(new FormBuilder().group({ test: 5, u: 3.14159265358979323846 }));\n  }\n}\n// Mocking ComputeLinkBudgetService\nexport class MockComputeService {}\n// Mocking LoggerService\nexport class MockupLoggerService {\n  public log() {}\n  public debug() {}\n  public error() {}\n  public info() {}\n  public warn() {}\n}\n\n@Injectable()\nclass MockToastPackage extends ToastPackage {\n  constructor() {\n    const toastConfig = { toastClass: 'custom-toast' };\n    super(1, toastConfig, 'test message', 'test title', 'show', new ToastRef(null!));\n  }\n}\n\n@NgModule({\n  providers: [{ provide: ToastPackage, useClass: MockToastPackage }],\n  imports: [ToastrModule.forRoot()],\n  exports: [ToastrModule],\n})\nexport class ToastrTestingModule {}\n\n// INJECTION TOKENS\nexport const mockEnvironment = {\n  production: false,\n  debugMode: true,\n  enableNanospace: true,\n  luplinkEndpoint: 'http://localhost:8001',\n  version: 0.0,\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockFormService.html":{"url":"classes/MockFormService.html","title":"class - MockFormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fb\n                            \n                            \n                                    Public\n                                result\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormData\n                            \n                            \n                                    Public\n                                getFormData$\n                            \n                            \n                                    Public\n                                initForms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormBuilder()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:12\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFormData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFormData$\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormData$()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initForms\n                        \n                    \n                \n            \n            \n                \n                    \n                    initForms()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FormBuilder, FormGroup } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n// Mocking the Toastr module thanks to https://github.com/scttcper/ngx-toastr/issues/339#issuecomment-508750488\nimport { Injectable, NgModule } from '@angular/core';\nimport { IndividualConfig, ToastPackage, ToastRef, ToastrModule } from 'ngx-toastr';\n// import mockPOSTData from './mockPOSTData.json';\n// Mocking  FormService\nexport class MockFormService {\n  public result: BehaviorSubject = new BehaviorSubject('');\n  fb = new FormBuilder();\n  public getFormData(): FormGroup {\n    // Objects.mockPOSTData.geometry\n    // const geo = this.fb.group(mockPOSTData.geometry);\n    return new FormBuilder().group({ test: 5, u: 3.14159265358979323846 });\n  }\n  public initForms(): void {}\n\n  public getFormData$(): Observable {\n    return of(new FormBuilder().group({ test: 5, u: 3.14159265358979323846 }));\n  }\n}\n// Mocking ComputeLinkBudgetService\nexport class MockComputeService {}\n// Mocking LoggerService\nexport class MockupLoggerService {\n  public log() {}\n  public debug() {}\n  public error() {}\n  public info() {}\n  public warn() {}\n}\n\n@Injectable()\nclass MockToastPackage extends ToastPackage {\n  constructor() {\n    const toastConfig = { toastClass: 'custom-toast' };\n    super(1, toastConfig, 'test message', 'test title', 'show', new ToastRef(null!));\n  }\n}\n\n@NgModule({\n  providers: [{ provide: ToastPackage, useClass: MockToastPackage }],\n  imports: [ToastrModule.forRoot()],\n  exports: [ToastrModule],\n})\nexport class ToastrTestingModule {}\n\n// INJECTION TOKENS\nexport const mockEnvironment = {\n  production: false,\n  debugMode: true,\n  enableNanospace: true,\n  luplinkEndpoint: 'http://localhost:8001',\n  version: 0.0,\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockToastPackage.html":{"url":"injectables/MockToastPackage.html","title":"injectable - MockToastPackage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockToastPackage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ToastPackage\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:37\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { FormBuilder, FormGroup } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n// Mocking the Toastr module thanks to https://github.com/scttcper/ngx-toastr/issues/339#issuecomment-508750488\nimport { Injectable, NgModule } from '@angular/core';\nimport { IndividualConfig, ToastPackage, ToastRef, ToastrModule } from 'ngx-toastr';\n// import mockPOSTData from './mockPOSTData.json';\n// Mocking  FormService\nexport class MockFormService {\n  public result: BehaviorSubject = new BehaviorSubject('');\n  fb = new FormBuilder();\n  public getFormData(): FormGroup {\n    // Objects.mockPOSTData.geometry\n    // const geo = this.fb.group(mockPOSTData.geometry);\n    return new FormBuilder().group({ test: 5, u: 3.14159265358979323846 });\n  }\n  public initForms(): void {}\n\n  public getFormData$(): Observable {\n    return of(new FormBuilder().group({ test: 5, u: 3.14159265358979323846 }));\n  }\n}\n// Mocking ComputeLinkBudgetService\nexport class MockComputeService {}\n// Mocking LoggerService\nexport class MockupLoggerService {\n  public log() {}\n  public debug() {}\n  public error() {}\n  public info() {}\n  public warn() {}\n}\n\n@Injectable()\nclass MockToastPackage extends ToastPackage {\n  constructor() {\n    const toastConfig = { toastClass: 'custom-toast' };\n    super(1, toastConfig, 'test message', 'test title', 'show', new ToastRef(null!));\n  }\n}\n\n@NgModule({\n  providers: [{ provide: ToastPackage, useClass: MockToastPackage }],\n  imports: [ToastrModule.forRoot()],\n  exports: [ToastrModule],\n})\nexport class ToastrTestingModule {}\n\n// INJECTION TOKENS\nexport const mockEnvironment = {\n  production: false,\n  debugMode: true,\n  enableNanospace: true,\n  luplinkEndpoint: 'http://localhost:8001',\n  version: 0.0,\n};\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockupLoggerService.html":{"url":"classes/MockupLoggerService.html","title":"class - MockupLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockupLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Public\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        debug\n                        \n                    \n                \n            \n            \n                \n                    \n                    debug()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        info\n                        \n                    \n                \n            \n            \n                \n                    \n                    info()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        warn\n                        \n                    \n                \n            \n            \n                \n                    \n                    warn()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FormBuilder, FormGroup } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n// Mocking the Toastr module thanks to https://github.com/scttcper/ngx-toastr/issues/339#issuecomment-508750488\nimport { Injectable, NgModule } from '@angular/core';\nimport { IndividualConfig, ToastPackage, ToastRef, ToastrModule } from 'ngx-toastr';\n// import mockPOSTData from './mockPOSTData.json';\n// Mocking  FormService\nexport class MockFormService {\n  public result: BehaviorSubject = new BehaviorSubject('');\n  fb = new FormBuilder();\n  public getFormData(): FormGroup {\n    // Objects.mockPOSTData.geometry\n    // const geo = this.fb.group(mockPOSTData.geometry);\n    return new FormBuilder().group({ test: 5, u: 3.14159265358979323846 });\n  }\n  public initForms(): void {}\n\n  public getFormData$(): Observable {\n    return of(new FormBuilder().group({ test: 5, u: 3.14159265358979323846 }));\n  }\n}\n// Mocking ComputeLinkBudgetService\nexport class MockComputeService {}\n// Mocking LoggerService\nexport class MockupLoggerService {\n  public log() {}\n  public debug() {}\n  public error() {}\n  public info() {}\n  public warn() {}\n}\n\n@Injectable()\nclass MockToastPackage extends ToastPackage {\n  constructor() {\n    const toastConfig = { toastClass: 'custom-toast' };\n    super(1, toastConfig, 'test message', 'test title', 'show', new ToastRef(null!));\n  }\n}\n\n@NgModule({\n  providers: [{ provide: ToastPackage, useClass: MockToastPackage }],\n  imports: [ToastrModule.forRoot()],\n  exports: [ToastrModule],\n})\nexport class ToastrTestingModule {}\n\n// INJECTION TOKENS\nexport const mockEnvironment = {\n  production: false,\n  debugMode: true,\n  enableNanospace: true,\n  luplinkEndpoint: 'http://localhost:8001',\n  version: 0.0,\n};\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isNanospaceEnabled\n                            \n                            \n                                angleLeft\n                            \n                            \n                                    Public\n                                computeLinkBudget\n                            \n                            \n                                debugMode\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                globalFormValue\n                            \n                            \n                                    Public\n                                isEditingTitle\n                            \n                            \n                                    Public\n                                isMenuBarVisible\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                logger\n                            \n                            \n                                    Public\n                                pencil\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                titleInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                compute\n                            \n                            \n                                editTitle\n                            \n                            \n                                load\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isNanospaceEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: any, saveLoadService: SaveLoadService, computeLinkBudget: ComputeLinkBudgetService, formService: FormService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        saveLoadService\n                                                  \n                                                        \n                                                                        SaveLoadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        computeLinkBudget\n                                                  \n                                                        \n                                                                        ComputeLinkBudgetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        compute\n                        \n                    \n                \n            \n            \n                \ncompute()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTitle\n                        \n                    \n                \n            \n            \n                \neditTitle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(files: FileList | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur($event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isNanospaceEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        angleLeft\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleLeft\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        computeLinkBudget\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComputeLinkBudgetService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        globalFormValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isEditingTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isMenuBarVisible\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggerService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pencil\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPencilAlt\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Luplink-v0.2'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        titleInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('titleInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isNanospaceEnabled\n                    \n                \n\n                \n                    \n                        getisNanospaceEnabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:25\n                                \n                            \n\n                \n                    \n                        setisNanospaceEnabled(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { faAngleLeft, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport sanitize from 'sanitize-filename';\nimport ComputeLinkBudgetService from '../../services/compute-link-budget.service';\nimport { SaveLoadService } from '../../services/save-load.service';\nimport { FormService } from '../../form/form.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { ENVIRONMENT_TOKEN } from '../../shared/dependencies';\n// import { environment } from 'projects/luplink-app/src/environments/environment';\n\n@Component({\n  selector: 'lib-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss'],\n})\nexport class NavbarComponent implements OnInit {\n  @ViewChild('titleInput') titleInput?: ElementRef;\n\n  title = 'Luplink-v0.2';\n  // For now debug mode disables the reload warning. Debug mode is disabled automatically in prod mode but can be disabled manually\n  debugMode = false;\n  public isMenuBarVisible = false;\n  private _isNanospaceEnabled = true;\n  get isNanospaceEnabled(): boolean {\n    return this._isNanospaceEnabled;\n  }\n  set isNanospaceEnabled(value: boolean) {\n    this.environment.enableNanospace = value;\n    this._isNanospaceEnabled = value;\n  }\n  angleLeft = faAngleLeft;\n  public isEditingTitle: boolean = false;\n  public pencil = faPencilAlt;\n  public loading: boolean = false;\n  public globalFormValue: FormGroup = new FormGroup({});\n  constructor(\n    @Inject(ENVIRONMENT_TOKEN) private environment: any,\n    private saveLoadService: SaveLoadService,\n    public computeLinkBudget: ComputeLinkBudgetService,\n    public formService: FormService,\n    public logger: LoggerService\n  ) {\n    this.isNanospaceEnabled = this.environment.enableNanospace;\n    if (!this.formService.isInitialized) this.formService.initForms();\n    this.formService.getFormData$().subscribe((value: FormGroup) => {\n      this.globalFormValue = value;\n    });\n  }\n  onBlur($event: any): void {\n    // We use the sanitize-filename node module to make sure everything is fine with the selected fileName (length, characters, ...)\n    this.formService.title = sanitize($event.target.value);\n    this.isEditingTitle = false;\n  }\n\n  editTitle() {\n    this.isEditingTitle = true;\n    setTimeout(() => {\n      // this will make the execution after the above boolean has changed\n      this.titleInput?.nativeElement.focus();\n    }, 0);\n  }\n\n  ngOnInit(): void {\n    this.logger.info('Logging is enabled');\n    // Prevent the user from losing data if he hasn't saved the current scenario\n    // if (!this.debugMode) {\n    window.addEventListener('beforeunload', (event) => {\n      if (!this.formService.isCurrentFormSaved) {\n        event.preventDefault();\n        // eslint-disable-next-line no-param-reassign\n        // event.returnValue = 'Unsaved modifications';\n      }\n      return event;\n    });\n    // }\n  }\n  save() {\n    this.saveLoadService.exportConfigFile(this.formService.getFormData());\n  }\n\n  load(files: FileList | null) {\n    if (files) {\n      this.saveLoadService.importConfigFile(files);\n    }\n  }\n  compute() {\n    const obs = this.computeLinkBudget.computeLinkBudget();\n    if (obs) {\n      this.loading = true;\n      const subscription = obs.subscribe(\n        (value) => {\n          // this.logger.debug('value', value);\n          this.computeLinkBudget.updateResult(value);\n          // this.logger.debug(\"API response:\", value)\n          this.loading = false;\n          subscription?.unsubscribe();\n        },\n        (err) => {\n          this.loading = false;\n          this.logger.debug('error in compute()', err);\n          subscription?.unsubscribe();\n        }\n      );\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    Luplink\n    \n      \n      \n      \n    \n  \n  \n    \n       Diagram \n       Simple Link Budget \n       Full Link Budget  -->\n      \n        New Link Budget\n        \n          Developer mode\n          \n        \n        \n          Enable Nanospace\n          \n        \n\n        \n        Save\n        \n          \n            \n            Import\n          \n          Load\n        \n        \n          \n        \n\n      \n    \n  \n  \n    \n    \n      \n        \n        {{this.formService.title}}{{!this.formService.isCurrentFormSaved ? '*' :\n          ''}}\n        \n      \n      \n        New Link Budget\n        \n          Developer mode\n          \n        \n        \n          Enable Nanospace\n          \n        \n\n        \n        Save\n        \n          \n            \n            Import\n          \n          Load\n        \n        \n          \n        \n\n      \n    \n    \n      \n        \n        {{this.formService.title}}{{!this.formService.isCurrentFormSaved ? '*' :\n          ''}}\n        \n      \n    \n    \n      \n        Compute\n      \n    \n     -->\n  \n\n\n -->\n\n -->\n -->\n\n -->\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                .navbar {\n  min-height: auto;\n}\n.navbar {\n  padding-top: 0; //Remove the padding for smaller navbar\n  padding-bottom: 0;\n}\n.navbar .navbar-link:focus-within {\n  background-color: #00b89c;\n}\n.navbar-dropdown > .navbar-item {\n  color: #4a4a4a !important;\n}\n.navbar-end {\n  display: inline-flex;\n  align-items: center;\n}\n.navbar-link:not(.is-arrowless)::after {\n  border-color: #fff !important;\n}\n.button.is-secondary {\n  color: initial;\n}\n.buttons {\n  color: initial;\n}\n// .has-dropdown > .navbar-link a:not([href]):not([tabindex]) {\n//   color: initial;\n// }\n.navbar-link {\n  color: #fff;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Luplink                                         Diagram        Simple Link Budget        Full Link Budget  -->              New Link Budget                  Developer mode                                    Enable Nanospace                                  Save                                          Import                    Load                                                                              {{this.formService.title}}{{!this.formService.isCurrentFormSaved ? \\'*\\' :          \\'\\'}}                            New Link Budget                  Developer mode                                    Enable Nanospace                                  Save                                          Import                    Load                                                                      {{this.formService.title}}{{!this.formService.isCurrentFormSaved ? \\'*\\' :          \\'\\'}}                                    Compute               -->   --> --> --> -->'\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavbarModule.html":{"url":"modules/NavbarModule.html","title":"module - NavbarModule","body":"\n                   \n\n\n\n\n    Modules\n    NavbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NavbarModule\n\n\n\ncluster_NavbarModule_exports\n\n\n\ncluster_NavbarModule_declarations\n\n\n\ncluster_NavbarModule_imports\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\n\n\nNavbarModule\n\nNavbarModule\n\nNavbarModule -->\n\nNavbarComponent->NavbarModule\n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nNavbarModule->NavbarComponent \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNavbarModule -->\n\nLoggerModule->NavbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/navbar/navbar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { Router, RouterModule } from '@angular/router';\nimport { NavbarComponent } from './navbar.component';\nimport { FormService } from '../../form/form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\n\n@NgModule({\n  declarations: [\n    NavbarComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    FontAwesomeModule,\n    RouterModule,\n    FormsModule,\n    LoggerModule,\n  ],\n  exports: [\n    NavbarComponent,\n  ],\n})\nexport class NavbarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationSidebarComponent.html":{"url":"components/NavigationSidebarComponent.html","title":"component - NavigationSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-navigation-sidebar\n            \n\n            \n                styleUrls\n                ./navigation-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                collapsed\n                            \n                            \n                                    Public\n                                collapseDownlink\n                            \n                            \n                                    Public\n                                collapseUplink\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                    Public\n                                mail\n                            \n                            \n                                    Public\n                                showAbout\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collapseSidebar\n                            \n                            \n                                switchTemplate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentComponent\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentComponent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'geometry'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:20\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        collapseSidebar\n                        \n                    \n                \n            \n            \n                \ncollapseSidebar()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchTemplate\n                        \n                    \n                \n            \n            \n                \nswitchTemplate(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        collapsed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        collapseDownlink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        collapseUplink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        mail\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faEnvelope\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        showAbout\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.environment.version\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { animate, style, transition, trigger } from '@angular/animations';\nimport { Component, Inject, Input } from '@angular/core';\nimport { faAngleDown, faEnvelope } from '@fortawesome/free-solid-svg-icons';\nimport { ENVIRONMENT_TOKEN } from '../../shared/dependencies';\n\n// import packageInfo from '../../../../package.json';\n\n@Component({\n  selector: 'lib-navigation-sidebar',\n  templateUrl: './navigation-sidebar.component.html',\n  styleUrls: ['./navigation-sidebar.component.scss'],\n  animations: [\n    trigger('panelInOut', [\n      transition('void => *', [style({ transform: 'translateY(-100%)' }), animate(100)]),\n      transition('* => void', [animate(100, style({ transform: 'translateY(-100%)' }))]),\n    ]),\n  ],\n})\nexport class NavigationSidebarComponent {\n  @Input() public currentComponent: string = 'geometry';\n  constructor(@Inject(ENVIRONMENT_TOKEN) private environment: any) {\n    // console.log(environment);\n  }\n  public collapseUplink: boolean = true;\n  public collapseDownlink: boolean = true;\n\n  public mail = faEnvelope;\n  public collapsed: boolean = false;\n  public showAbout: boolean = false; //Controls the visibility of 'about' modal\n  // version = packageInfo.version;\n  version = this.environment.version;\n  faAngleDown = faAngleDown;\n\n  switchTemplate(name: string) {\n    this.currentComponent = name;\n  }\n  collapseSidebar() {\n    this.collapsed = !this.collapsed;\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n      \n        \n          Welcome\n        \n        Link Budget\n\n        \n          Geometry\n        \n        \n          \n            \n              \n            \n            Uplink\n        \n        \n          \n            \n              Carrier & Environment\n            \n            \n              Transmitter\n            \n            \n              Receiver\n            \n          \n        \n        \n          \n            \n              \n             -->\n            \n              \n            Downlink\n          \n        \n        \n          \n             -->\n            Carrier & Environment\n            Transmitter\n            Receiver\n          \n        \n        \n          Results\n        \n        \n          About\n        \n      \n      Tools\n      \n        \n          UI Experiments\n        \n        VSWR Pattern Calculation\n        LUTs\n       -->\n\n    \n\n    \n      {{\"v\"+version}}\n\n -->\n\n  \n\n\n\n  \n  \n    \n      \n        \n      \n     -->\n    \n      Luplink{{'v'+version}}\n      License AGPL v3\n      \n        \n          \n            \n          \n         -->\n        \n          \n            \n              Luplink: See on Gitlab\n              \n              ngx-luplink: See on\n                npmjs.com\n              python-linkpredict (backend): https://gitlab.com/librecube/lib/python-linkpredict/\n              John Smith @johnsmith 31m -->\n\n              \n              Built by: Julien Prissimitzis / \n                   Contact\n                \n              Supervisor: Thibault Gateau\n            \n          \n          \n            \n              \n              \n            \n            \n              \n              \n            \n            \n              \n            \n          \n        \n      \n    \n  \n  \n\n\n  {{ this.collapsed ? \">\" : \"\n     -->\n\n\n    \n  Collapse\n-->\n    \n\n    \n                \n                    ./navigation-sidebar.component.scss\n                \n                a:hover {\n  text-decoration: none; //Remove underline from links\n  background-color: #ececec;\n}\na {\n  color: rgb(100, 100, 100);\n}\n.version {\n  float: right;\n  padding: 10px;\n  color: #464646be;\n}\n\n.fixed {\n  position: fixed;\n  left: 5px;\n  bottom: 30px;\n  z-index: -5;\n}\n.menu-label {\n  padding: 0px 12px;\n}\nli {\n  overflow: hidden;\n}\nli > a {\n  padding-left: 24px;\n  color: rgb(100, 100, 100);\n}\n.menu-label {\n  margin: 0px;\n  padding: 12px;\n  // border: 0px;\n  // border-bottom: 1px;\n  // border-color:#8080802e;\n  // border-style: solid;\n}\n#sidebar {\n  height: 100vh;\n  position: sticky;\n  top: 0;\n  margin: 10px;\n\n  background-color: #fbfbfb;\n  border-style: solid;\n  border-color: #8080802e;\n  border-width: 0px;\n  border-right-width: 1px;\n  width: 200px; //Fixed sidebar to avoid issues when collapsing. Adapt to maximum required width\n}\n\n.navbar-menu.is-active {\n  background-color: #ececec !important;\n  color: #3273dc;\n  font-weight: bold;\n  animation: navAnim 0.2s ease-in-out;\n\n  border-style: solid;\n  border-color: #3273dc;\n  border-width: 0px;\n  border-left-width: 5px;\n}\n// .active-route {\n//   background-color: #ececec !important;\n//   color: #3273dc;\n//   font-weight: bold;\n//   animation: navAnim 0.2s ease-in-out;\n\n//   border-style: solid;\n//   border-color: #3273dc;\n//   border-width: 0px;\n// }\n@keyframes navAnim {\n  0% {\n    opacity: 0;\n    background-color: transparent;\n    transform: scaleX(0);\n  }\n  100% {\n    opacity: 1;\n    // color:white;\n    transform: scaleX(100%);\n  }\n}\n// @keyframes navAnim {\n//   0% {\n//     display: none;\n//     opacity: 0;\n//     height: 0;\n//   }\n//   1% {\n//     display: block;\n//     opacity: 0;\n//   }\n//   100% {\n//     opacity: 1;\n//     height: 396px;\n//   }\n//   }\n.modal-content {\n  width: 640px;\n  margin: 0 auto;\n  max-height: calc(100vh - 40px);\n}\n.logos > a > img {\n  max-height: 60px;\n}\n.logos {\n  display: flex;\n  justify-content: space-evenly;\n}\n\n// a {\n//   // color: $link;\n//   text-decoration: initial;\n// }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Welcome                Link Budget                  Geometry                                                                            Uplink                                                    Carrier & Environment                                      Transmitter                                      Receiver                                                                                       -->                                      Downlink                                                 -->            Carrier & Environment            Transmitter            Receiver                                    Results                          About                    Tools                        UI Experiments                VSWR Pattern Calculation        LUTs       -->              {{\"v\"+version}} -->                                   -->          Luplink{{\\'v\\'+version}}      License AGPL v3                                                       -->                                            Luplink: See on Gitlab                            ngx-luplink: See on                npmjs.com              python-linkpredict (backend): https://gitlab.com/librecube/lib/python-linkpredict/              John Smith @johnsmith 31m -->                            Built by: Julien Prissimitzis /                    Contact                              Supervisor: Thibault Gateau                                                                                                                                                                                                                {{ this.collapsed ? \">\" : \"     -->      Collapse-->'\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavigationSidebarModule.html":{"url":"modules/NavigationSidebarModule.html","title":"module - NavigationSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    NavigationSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NavigationSidebarModule\n\n\n\ncluster_NavigationSidebarModule_declarations\n\n\n\ncluster_NavigationSidebarModule_exports\n\n\n\n\nNavigationSidebarComponent\n\nNavigationSidebarComponent\n\n\n\nNavigationSidebarModule\n\nNavigationSidebarModule\n\nNavigationSidebarModule -->\n\nNavigationSidebarComponent->NavigationSidebarModule\n\n\n\n\n\nNavigationSidebarComponent \n\nNavigationSidebarComponent \n\nNavigationSidebarComponent  -->\n\nNavigationSidebarModule->NavigationSidebarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavigationSidebarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { RouterModule } from '@angular/router';\nimport { NavigationSidebarComponent } from './navigation-sidebar.component';\n\n@NgModule({\n  declarations: [NavigationSidebarComponent],\n  imports: [CommonModule, FormsModule, FontAwesomeModule, RouterModule],\n  exports: [NavigationSidebarComponent],\n})\nexport class NavigationSidebarModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Point.html":{"url":"interfaces/Point.html","title":"interface - Point","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Point\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LinkBudgetComponent {\n  label: string;\n  gain: number;\n  linear: boolean;\n  position: number;\n  width: number; // These values are defined in percent\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport class LinkBudgetScenario {\n  private powerIn: number = 0;\n\n  private powerOut: number = 0;\n\n  private components: {\n    [id: string]: LinkBudgetComponent;\n  };\n\n  private points: Point[];\n\n  constructor(power: number) {\n    this.powerIn = power;\n    this.components = {};\n    this.points = [];\n  }\n\n  public setPowerIn(power: number) {\n    this.powerIn = power;\n  }\n\n  public getPowerOut() {\n    return this.powerOut;\n  }\n\n  public getLabels() {\n    /**\n     * Returns the different labels for the components with their associated positions in\n     * the form of a list of {label, position};\n     */\n    const labels: { name: string; position: number }[] = [];\n    Object.entries(this.components).forEach(([key, value]) => {\n      const label = { name: value.label, position: value.position + value.width / 2 };\n      labels.push(label);\n    });\n    // for (const key in this.components) {\n    //     const c = this.components[key];\n    //     const label = { name: c.label, position: c.position + c.width / 2 };\n    //     labels.push(label);\n    // }\n    return labels;\n  }\n\n  public addComponent(id: string, LinkBudgetComponent: LinkBudgetComponent) {\n    this.components[id] = LinkBudgetComponent;\n  }\n\n  public addComponents(components: { id: string; component: LinkBudgetComponent }[]) {\n    /**\n     * This method adds multiples components at once\n     */\n\n    components.forEach((s) => {\n      this.addComponent(s.id, s.component);\n    });\n  }\n\n  public editGain(id: string, value: number) {\n    this.components[id].gain = value;\n  }\n\n  public editGains(gains: { [key: string]: number }) {\n    /**\n     * Edit multiple gains at once, these can be provided by a formGroup using the formGroup.formValues attribute\n     */\n    // console.log(gains.keys());\n\n    Object.keys(gains).forEach((key: any) => {\n      this.editGain(key, gains[key]);\n    });\n  }\n\n  public numberOfComponents(): number {\n    return Object.keys(this.components).length;\n  }\n\n  public getPoints(): Point[] {\n    return this.points;\n  }\n\n  public randomize(amplitude: number = 30): { [id: string]: LinkBudgetComponent } {\n    /** This changes the gain from the components with random values and return the new components */\n    const excluded = ['tx', 'rx'];\n    Object.keys(this.components).forEach((id) => {\n      if (!excluded.includes(id)) {\n        this.components[id].gain = Math.round((Math.random() - 0.8) * amplitude); // Rounded to nearest integer\n      }\n    });\n    this.powerIn = Math.random() * amplitude;\n    return this.components;\n  }\n\n  public compute(link: 'uplink' | 'downlink' = 'uplink') {\n    /** This function gives us the points needed to plot our LB graph */\n    \n    // Depending on the kind of link we want to go backward\n    const isUp = link === 'uplink';\n    const lastPoint: Point = { x: isUp ? 0 : 100, y: this.powerIn };\n    const points: Point[] = [{ x: lastPoint.x, y: lastPoint.y }];\n    const discontinuityPoint: Point = { x: 0, y: 0 };\n    Object.values(this.components).forEach((LinkBudgetComponent) => {\n      if (!LinkBudgetComponent.linear) {\n        // Here we create the discontinuity by adding a point with same abscissa\n        discontinuityPoint.x = lastPoint.x;\n        discontinuityPoint.y = lastPoint.y + LinkBudgetComponent.gain;\n        points.push({ x: discontinuityPoint.x, y: discontinuityPoint.y });\n      }\n\n      if (isUp) lastPoint.x += LinkBudgetComponent.width;\n      if (!isUp) lastPoint.x -= LinkBudgetComponent.width;\n      lastPoint.y += LinkBudgetComponent.gain;\n\n      points.push({ x: lastPoint.x, y: lastPoint.y });\n    });\n    this.powerOut = lastPoint.y;\n    this.points = points;\n    // for (const id in this.components) {\n    //   if (Object.prototype.hasOwnProperty.call(this.components, id)) {\n    //     const LinkBudgetComponent = this.components[id];\n\n    //     if (!LinkBudgetComponent.linear) {\n    //     // Here we create the discontinuity by adding a point with same abscissa\n    //       discontinuityPoint.x = lastPoint.x;\n    //       discontinuityPoint.y = lastPoint.y + LinkBudgetComponent.gain;\n    //       points.push({ x: discontinuityPoint.x, y: discontinuityPoint.y });\n    //     }\n\n    //     (lastPoint.x += LinkBudgetComponent.width);\n    //     (lastPoint.y += LinkBudgetComponent.gain);\n\n    //     points.push({ x: lastPoint.x, y: lastPoint.y });\n    //   }\n\n    //   this.powerOut = lastPoint.y;\n    //   this.points = points;\n    // // return points;\n    // }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultSidebarComponent.html":{"url":"components/ResultSidebarComponent.html","title":"component - ResultSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResultSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/results/components/sidebar/result-sidebar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-result-sidebar\n            \n\n            \n                styleUrls\n                ./result-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./result-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                computeLinkBudget\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(computeLinkBudget: ComputeLinkBudgetService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/results/components/sidebar/result-sidebar.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        computeLinkBudget\n                                                  \n                                                        \n                                                                        ComputeLinkBudgetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        computeLinkBudget\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComputeLinkBudgetService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/results/components/sidebar/result-sidebar.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport ComputeLinkBudgetService from '../../../../services/compute-link-budget.service';\n\n@Component({\n  selector: 'lib-result-sidebar',\n  templateUrl: './result-sidebar.component.html',\n  styleUrls: ['./result-sidebar.component.scss'],\n})\nexport class ResultSidebarComponent {\n  constructor(public computeLinkBudget: ComputeLinkBudgetService) { }\n}\n\n    \n\n    \n        \n -->\n -->\n -->\n\n -->\n -->\n -->\n\n  {{ this.computeLinkBudget.displayingResults ? \">\" : \"\n    \n\n    \n                \n                    ./result-sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' --> --> --> --> --> -->  {{ this.computeLinkBudget.displayingResults ? \">\" : \"'\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultSidebarModule.html":{"url":"modules/ResultSidebarModule.html","title":"module - ResultSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ResultSidebarModule\n\n\n\ncluster_ResultSidebarModule_exports\n\n\n\ncluster_ResultSidebarModule_declarations\n\n\n\ncluster_ResultSidebarModule_imports\n\n\n\n\nResultSidebarComponent\n\nResultSidebarComponent\n\n\n\nResultSidebarModule\n\nResultSidebarModule\n\nResultSidebarModule -->\n\nResultSidebarComponent->ResultSidebarModule\n\n\n\n\n\nResultsComponent\n\nResultsComponent\n\nResultSidebarModule -->\n\nResultsComponent->ResultSidebarModule\n\n\n\n\n\nResultSidebarComponent \n\nResultSidebarComponent \n\nResultSidebarComponent  -->\n\nResultSidebarModule->ResultSidebarComponent \n\n\n\n\n\nResultsComponent \n\nResultsComponent \n\nResultsComponent  -->\n\nResultSidebarModule->ResultsComponent \n\n\n\n\n\nCardModule\n\nCardModule\n\nResultSidebarModule -->\n\nCardModule->ResultSidebarModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nResultSidebarModule -->\n\nLoggerModule->ResultSidebarModule\n\n\n\n\n\nNavigationSidebarModule\n\nNavigationSidebarModule\n\nResultSidebarModule -->\n\nNavigationSidebarModule->ResultSidebarModule\n\n\n\n\n\nSyntheticDrawingModule\n\nSyntheticDrawingModule\n\nResultSidebarModule -->\n\nSyntheticDrawingModule->ResultSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/results/results.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultSidebarComponent\n                        \n                        \n                            ResultsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            NavigationSidebarModule\n                        \n                        \n                            SyntheticDrawingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultSidebarComponent\n                        \n                        \n                            ResultsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormService } from '../../form/form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\nimport { ResultSidebarComponent } from './components/sidebar/result-sidebar.component';\nimport { ResultsComponent } from './components/results/results.component';\nimport { SyntheticDrawingModule } from '../synthetic-drawing/synthetic-drawing.module';\nimport { NavigationSidebarModule } from '../navigation-sidebar/navigation-sidebar.module';\nimport { CardModule } from '../card/card.module';\n\n@NgModule({\n  declarations: [\n    ResultSidebarComponent,\n    ResultsComponent,\n  ],\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    RouterModule,\n    FormsModule,\n    LoggerModule.forRoot(),\n    CardModule,\n    SyntheticDrawingModule,\n    NavigationSidebarModule,\n  ],\n  exports: [\n    ResultSidebarComponent,\n    ResultsComponent,\n  ],\n})\nexport class ResultSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaveLoadService.html":{"url":"injectables/SaveLoadService.html","title":"injectable - SaveLoadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SaveLoadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/services/save-load.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                parseJSOData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exportConfigFile\n                            \n                            \n                                    Public\n                                formatJSOData\n                            \n                            \n                                    Public\n                                generateConfig\n                            \n                            \n                                    Public\n                                importConfigFile\n                            \n                            \n                                    Public\n                                importJSatOrbConfigFile\n                            \n                            \n                                    Public\n                                importJSOData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: any, logger: LoggerService, formService: FormService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:35\n                            \n                        \n\n                \n                    \n                            This service handles both saving and loading of configuration files, JSatOrb config files.\nNote: Using promises here might not be the best choice considering we have used only observable so far. At least, it is independant from the rest so we don't mix both.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        exportConfigFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportConfigFile(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:185\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        formatJSOData\n                        \n                    \n                \n            \n            \n                \n                    \n                    formatJSOData(satellites: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    satellites\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        generateConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateConfig(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:177\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        importConfigFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    importConfigFile(files: FileList | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:143\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        importJSatOrbConfigFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    importJSatOrbConfigFile(files: FileList | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        importJSOData\n                        \n                    \n                \n            \n            \n                \n                    \n                    importJSOData(title: string, satellite: any, station: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:119\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    satellite\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    station\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        parseJSOData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:48\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\n// import packageInfo from 'package.json';\nimport { Observable } from 'rxjs';\nimport sanitize from 'sanitize-filename';\nimport { FormBuilder } from '@angular/forms';\nimport { FormService } from '../form/form.service';\nimport { HelperFunctions } from '../shared/helper-functions';\nimport { LoggerService } from '../shared/logger/logger.service';\nimport { ENVIRONMENT_TOKEN } from '../shared/dependencies';\n\nconst readFile = (files: FileList | null): Observable =>\n  new Observable((obs) => {\n    // This is a helper function that opens the provided file and passes its content to the provided callback function.\n    if (!files || !files.item(0)) {\n      // this.logger.warn('Error', 'Unexpected error, cannot open imported file');\n      obs.error(new Error('cannot open imported file'));\n      return;\n    }\n\n    const file: File = files.item(0)!;\n    const fileReader = new FileReader();\n\n    fileReader.onerror = (err) => obs.error(err);\n    fileReader.onabort = (err) => obs.error(err);\n    fileReader.onload = () => obs.next(fileReader.result);\n    fileReader.onloadend = () => obs.complete();\n\n    fileReader.readAsText(file, 'utf8');\n  });\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SaveLoadService {\n  /**\n   * This service handles both saving and loading of configuration files, JSatOrb config files.\n   * Note: Using promises here might not be the best choice considering we have used only observable so far. At least, it is independant from the rest so we don't mix both.\n   */\n  constructor(\n    @Inject(ENVIRONMENT_TOKEN) private environment: any,\n    private logger: LoggerService,\n    private formService: FormService,\n    private fb: FormBuilder\n  ) {}\n  // Defining a callback function to which we will feed the provided file\n  // Replace by Observables !!!\n  parseJSOData = (results: any): { title: any; satellites: any; groundStations: any } | null => {\n    // console.log(results);\n    if (results && results !== {}) {\n      const title = results.header?.mission;\n      let { satellites } = results;\n      const { groundStations } = results;\n      satellites = this.formatJSOData(satellites);\n      /**\n       * 1. Display available options\n       * 2. Create a scenario : choose satellite, choose groundstation.\n       * 3. Convert that to a LB\n       */\n\n      // To move elsewhere !\n      return { title, satellites, groundStations };\n    }\n    return null;\n  };\n  public importJSatOrbConfigFile(\n    files: FileList | null\n  ): Observable {\n    /*\n     * This allows the user to import a JSatOrb Configuration file (.jso) into this app\n     */\n    return new Observable((obs) => {\n      readFile(files).subscribe(\n        (value: string) => {\n          obs.next(this.parseJSOData(JSON.parse(value)));\n          obs.complete();\n        },\n        (error) => {\n          obs.error(error);\n        }\n      );\n    });\n    // We then pass this callback function to our function that imports the file\n    // this.importFile(files)\n    //   .pipe(\n    //     mergeMap((result) => callbackFn(result)),\n    //   )\n    // return new Observable(\n    //   (subscriber) => {\n    //     this.importFile(files).subscribe((results) => {\n    //       console.log(results);\n\n    //     });\n    // },\n    // );\n    // .then((results) => new Promise(() => callbackFn(results)));\n    // return of({ title: '', satellites: [], groundStations: [] });\n  }\n  public formatJSOData(satellites: any) {\n    /**\n     * Takes the satellite list from a .jso file and converts all TLE-types satellites to Keplerian-type\n     */\n    if (!satellites) return {}; // input is undefined or null\n\n    Object.entries(satellites).forEach(([key, satellite]: [string, any]) => {\n      if (satellite.type === 'tle') {\n        satellites[key] = { ...satellite, ...HelperFunctions.convertTLEtoKeplearian(satellite.line1, satellite.line2) }; // HelperFunctions.convertTLEtoKeplearian('', ''),\n        // console.log(satellites)\n        // console.log(HelperFunctions.convertTLEtoKeplearian(satellite.line1, satellite.line2));\n      } else {\n        Object.values(['sma', 'ecc', 'inc', 'pa', 'raan', 'meanAnomaly']).forEach((val) => {\n          satellites[key][val] = parseFloat(satellite[val]);\n        });\n      }\n      // results.satellite = satellites\n    });\n    return satellites;\n  }\n  public importJSOData(title: string, satellite: any, station: any) {\n    /**\n     * Given data extracted from JSatOrb, updates the current link budget\n     */\n    if (!this.formService.isCurrentFormSaved) {\n      this.logger.warn('Warning', 'You have unsaved data');\n      return;\n    }\n    this.formService.title = title;\n    const { geometry } = this.formService.getFormData();\n\n    // Here AMSAT uses mean altitude which is equivalent to SMA but we will be using maximum Altitude corresponding to worst case scenario\n    geometry.altitude.value = (1 + satellite.ecc) * satellite.sma;\n    geometry.elevation.value = station.elevation;\n\n    // Updating slantRange also\n    geometry.slantRange.value = HelperFunctions.slantRangeFromAltElev(satellite.sma, station.elevation);\n\n    // this.formService.addArchive('geometry', this.fb.group(geometry));\n    this.formService.globalForm.setControl('geometry', this.fb.group(geometry));\n\n    console.log(this.formService.globalForm.value);\n    this.logger.success('importing data');\n  }\n  public importConfigFile(files: FileList | null): void {\n    /*\n     * This allows importing a json config file containing a scenario using the save/load buttons\n     */\n    // #TODO: SOME FILE VERIFICATION\n    // Defining a callback function to which we will feed the provided file\n    const callbackFn = (results: any) => {\n      if (results && results.metadata) {\n        if (results.metadata.version !== this.environment.version) {\n          this.logger.warn('Version Warning', 'The imported file has been generated with a different version');\n        }\n        const safeResults = results;\n        // We want to make sure to import a file-safe name\n        safeResults.metadata.title = sanitize(results.metadata.title);\n        this.formService.importForm(safeResults);\n        this.logger.success('Successfully loaded config file');\n      } else {\n        // If the file doesn't contain metadata or if its content is null or undefined, this probably hasn't been generated with Luplink\n        this.logger.error(\"This file doesn't look like a Luplink configuration file\", 'Missing content or metadata');\n      }\n    };\n    // We then pass this callback function to our function that imports the file\n\n    readFile(files).subscribe(\n      (value: string) => {\n        callbackFn(JSON.parse(value));\n      },\n      (error) => {\n        this.logger.error('Error while importing file', error);\n      }\n    );\n    // this.importFile(files);\n    // .then(() => new Promise((results) => callbackFn(results)));\n  }\n  public generateConfig(data: any): { metadata: any; data: any } {\n    const metadata = {\n      title: this.formService.title,\n      date: Date.now(),\n      version: this.environment.version,\n    };\n    return { metadata, data };\n  }\n  public exportConfigFile(data: any) {\n    // #TODO: This is working, now are we sure we can't inject javascript using this (XSS injection) ?\n    // #TODO: Also, given a large enough JSON, this won't work, -> switch to blob\n    // this.logger.debug('exporting config!');\n\n    // FIXME: USING DATA URI IS PRETTY STRAIGHTFORWARD YET THE MAX SIZE DEPENDS ON THE BROWSER (2MB for Chrome, unlimited for Firefox), BETTER TO USE BLOB\n    // See https://stackoverflow.com/questions/695151/data-protocol-url-size-limitations\n    const configData = this.generateConfig(data);\n    const configURL = `data:application/json;charset=UTF-8,${encodeURIComponent(\n      JSON.stringify(configData, undefined, 2)\n    )}`;\n    // Create a placeholder element for this data\n    const anchor = document.createElement('a');\n    anchor.href = configURL;\n    anchor.target = '_blank';\n    anchor.download = `${configData.metadata.title}.json`;\n\n    anchor.click();\n    // Removing placeholder element\n    anchor.remove();\n\n    // Mark the current form as saved\n    this.formService.isCurrentFormSaved = true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleDocumentationComponent.html":{"url":"components/SimpleDocumentationComponent.html","title":"component - SimpleDocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SimpleDocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-simple-documentation\n            \n\n            \n                styleUrls\n                ./simple-documentation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simple-documentation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alt\n                            \n                            \n                                delta\n                            \n                            \n                                eirp\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                formulas\n                            \n                            \n                                geometry\n                            \n                            \n                                hasGeometryBeenDrawn\n                            \n                            \n                                lineLosses\n                            \n                            \n                                sr\n                            \n                            \n                                svg\n                            \n                            \n                                systemTemperature\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawGeometry\n                            \n                            \n                                getFormData\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateDiagram\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService, logger: LoggerService, changeDetector: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetector\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drawGeometry\n                        \n                    \n                \n            \n            \n                \ndrawGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFormData\n                        \n                    \n                \n            \n            \n                \ngetFormData(component: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    component\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDiagram\n                        \n                    \n                \n            \n            \n                \nupdateDiagram(geo: any, precision: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    geo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        3\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        eirp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.0\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formulas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        geometry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `\n  $\\\\delta$ is the minimum acceptable elevation angle. It is used for the calculation of the maximum slant range to the spacecraft. This range is then used to compute path losses.\n\n  The slant range is calculated using the following formula :\n  $$S=R_e(\\\\sqrt{[\\\\frac{r}{R_e}]^2-\\\\cos^2{\\\\delta}}-\\\\sin{\\\\delta})$$\n  with:\n  \n  $S$, the slant range in km\n  $r$, the distance of satellite from center of Earth in km ($r= R_e+h$)\n  $R_e$, the Earth's radius (in km) $\\\\delta$, the minimum acceptable elevation angle\n  `\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasGeometryBeenDrawn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lineLosses\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0.0\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        svg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        systemTemperature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `\n    $$T_s = T_a + T_1 + \\\\frac{T_2}{G_1} + \\\\frac{T_3}{G_1G_2}$$\n  `\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import * as d3 from 'd3';\n\nimport { AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnInit } from '@angular/core';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { FormService } from '../../form/form.service';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'lib-simple-documentation',\n  templateUrl: './simple-documentation.component.html',\n  styleUrls: ['./simple-documentation.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SimpleDocumentationComponent implements AfterViewInit, OnInit {\n  @Input() component: string = '';\n  public formulas: { [id: string]: string };\n  public form: any; // Keeping a copy of the global form to fetch data from it\n  hasGeometryBeenDrawn: boolean = false;\n  lineLosses: number = 0.0;\n  eirp: number = 0.0;\n  geometry: string = `\n  $\\\\delta$ is the minimum acceptable elevation angle. It is used for the calculation of the maximum slant range to the spacecraft. This range is then used to compute path losses.\n\n  The slant range is calculated using the following formula :\n  $$S=R_e(\\\\sqrt{[\\\\frac{r}{R_e}]^2-\\\\cos^2{\\\\delta}}-\\\\sin{\\\\delta})$$\n  with:\n  \n  $S$, the slant range in km\n  $r$, the distance of satellite from center of Earth in km ($r= R_e+h$)\n  $R_e$, the Earth's radius (in km) $\\\\delta$, the minimum acceptable elevation angle\n  `;\n\n  systemTemperature: string = `\n    $$T_s = T_a + T_1 + \\\\frac{T_2}{G_1} + \\\\frac{T_3}{G_1G_2}$$\n  `;\n  // cf: https://github.com/garciparedes/ng-katex\n  constructor(\n    public formService: FormService,\n    private logger: LoggerService,\n    private changeDetector: ChangeDetectorRef\n  ) {\n    this.formulas = {\n      sr: 'S=R_e(\\\\sqrt{(\\\\frac{r}{R_e})^2-\\\\cos{2\\\\delta}}-\\\\sin{\\\\delta})',\n    };\n  }\n\n  svg: any;\n  delta: any;\n  alt: any;\n  sr: any;\n\n  drawGeometry(): void {\n    this.svg = d3.select('#sr').select('svg');\n\n    this.delta = this.svg\n      .append('text')\n      .attr('x', 73)\n      .attr('y', 59)\n      .attr('text-anchor', 'left')\n      .style('font-size', '4px');\n\n    this.alt = this.svg.append('text').attr('x', 5).attr('y', 20).attr('text-anchor', 'left').style('font-size', '4px');\n\n    this.sr = this.svg.append('text').attr('x', 42).attr('y', 42).attr('text-anchor', 'left').style('font-size', '4px');\n    this.hasGeometryBeenDrawn = true;\n\n    const geo = this.formService.getFormData().geometry;\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    geo && this.updateDiagram(geo);\n    this.formService.getFormData$().subscribe((obs: any) => {\n      // console.log(obs.getRawValue().geometry);\n      // console.log(obs.geometry);\n      this.updateDiagram(obs.geometry);\n    });\n  }\n  ngAfterViewInit(): void {\n    // If the text hasn't been drawn, we draw it (#sr is always present since we are just hiding it)\n    if (!this.hasGeometryBeenDrawn) {\n      this.drawGeometry();\n    }\n  }\n  ngOnInit() {\n    this.formService.globalForm.valueChanges.subscribe((newForm) => {\n      this.form = newForm;\n      // let transmitter = this.form.\n      this.changeDetector.detectChanges();\n    });\n  }\n  getFormData(component: string): any {\n    if (component === 'ULTransmitter') {\n      return this.formService.globalForm.value.uplink.transmitter;\n    } else if (component === 'DLTransmitter') {\n      return this.formService.globalForm.value.downlink.transmitter;\n    } else {\n      console.warn('Unknown component in simple-documentation.component.ts::getFormData()');\n    }\n  }\n\n  updateDiagram(geo: any, precision: number = 3) {\n    const alt: number = parseFloat(geo.altitude.value);\n    const sr: number = parseFloat(geo.slantRange.value);\n\n    this.delta.text(`ẟ=${geo.elevation.value} ${geo.elevation.unit}`);\n    this.alt.text(`${alt.toPrecision(precision)} ${geo.altitude.unit}`);\n    this.sr.text(`${sr.toPrecision(precision + 1)} ${geo.slantRange.unit}`);\n  }\n}\n\n    \n\n    \n        \n  Slant Range: -->\n  \n    \n      \n        \n          \n        \n      \n      \n        \n        \n        \n        \n        \n        \n          \n            \n            \n          \n        \n        \n        \n        \n        \n          \n            HORIZON LINE\n          \n        \n        \n          \n            SLANT RANGE\n          \n        \n        \n          \n            ALTITUDE\n          \n        \n        \n          \n            MINIMUM ELEVATION\n          \n        \n        \n          \n          \n          \n          \n        \n      \n    \n  \n  \n    \n  \n\n\n\n  Carrier & Environment\n  Here we can define the carrier used for the uplink.\n    The Free Space Path Loss (FSPL) and atmospheric losses depend on frequency but also polarization of the carrier.\n    This graph shows the losses in dB due to propagation in free space as a function of distance between antennas and\n    frequency of the carrier\n  \n  \n  &copy; Splash, CC BY-SA 3.0, via Wikimedia Commons\n\n\n  \n    \n      The transmitter has the following architecture: \n       -->\n      \n        \n          \n            \n          \n          \n            \n          \n        \n        \n          \n          \n            Tx\n          \n          \n            \n          \n          \n            \n            \n            \n          \n          \n          \n          \n            \n              Filter\n            \n          \n          \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n          \n          \n          \n            Antenna Mismatch\n          \n        \n      \n      \n      We need to calculate the total line losses to determine the power actually delivered to the antenna. These line\n        losses depend on the line length and quality. We usually try to make these as short as possible on the space\n        segment since we have tight power requirements.\n      \n        Power in: {{this.form?.uplink?.transmitter.power.value}}\n        {{this.form?.uplink?.transmitter.power.unit}}\n        Total line losses: {{this.form?.uplink?.tx-cable-loss}}\n        {{this.form?.uplink?.transmitter.power.unit}} -->\n        \n        Total line losses: {{this.form?.uplink?.transmitter.line_losses.value}}\n        {{this.form?.uplink?.transmitter.line_losses.unit}} -->\n      \n\n    \n    \n\n      \n        \n          \n            {{this.form?.uplink?.transmitter | json}}\n          \n        \n        \n          \n            {{this.formService.getFormData().uplink.transmitter | json}}\n          \n        \n      \n\n    \n  \n\n\n  \n    \n      \n        \n          \n            Tx\n          \n          \n            \n            \n            \n          \n          \n          \n          \n          \n            \n              Filter\n            \n          \n          \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n            \n          \n          \n            \n          \n          \n            \n              \n            \n            \n              Rx\n            \n          \n        \n      \n\n    \n    \n      Temperatures:\n      We define a system temperature that is used to determine the noise in the link.\n      The system temperature is defined as:\n      \n      This is the Friis\n        formula for noise temperature. We use this temperature in order to compute G/T out of the antena.\n\n      Here we consider the system to only have a LNA.\n    \n  \n\n\n    \n\n    \n                \n                    ./simple-documentation.component.scss\n                \n                svg {\n  width: 85%;\n  height: auto;\n}\n.column {\n  min-width: 320px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Slant Range: -->                                                                                                                                                                                                            HORIZON LINE                                                SLANT RANGE                                                ALTITUDE                                                MINIMUM ELEVATION                                                                                                Carrier & Environment  Here we can define the carrier used for the uplink.    The Free Space Path Loss (FSPL) and atmospheric losses depend on frequency but also polarization of the carrier.    This graph shows the losses in dB due to propagation in free space as a function of distance between antennas and    frequency of the carrier      © Splash, CC BY-SA 3.0, via Wikimedia Commons            The transmitter has the following architecture:        -->                                                                                                                              Tx                                                                                                                                                          Filter                                                                                                                                                                                                                                                                                                              Antenna Mismatch                                    We need to calculate the total line losses to determine the power actually delivered to the antenna. These line        losses depend on the line length and quality. We usually try to make these as short as possible on the space        segment since we have tight power requirements.              Power in: {{this.form?.uplink?.transmitter.power.value}}        {{this.form?.uplink?.transmitter.power.unit}}        Total line losses: {{this.form?.uplink?.tx-cable-loss}}        {{this.form?.uplink?.transmitter.power.unit}} -->                Total line losses: {{this.form?.uplink?.transmitter.line_losses.value}}        {{this.form?.uplink?.transmitter.line_losses.unit}} -->                                                  {{this.form?.uplink?.transmitter | json}}                                                {{this.formService.getFormData().uplink.transmitter | json}}                                                                        Tx                                                                                                                                    Filter                                                                                                                                                                                                                                                                                                                                                                                        Rx                                                  Temperatures:      We define a system temperature that is used to determine the noise in the link.      The system temperature is defined as:            This is the Friis        formula for noise temperature. We use this temperature in order to compute G/T out of the antena.      Here we consider the system to only have a LNA.      '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimpleDocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimpleDocumentationModule.html":{"url":"modules/SimpleDocumentationModule.html","title":"module - SimpleDocumentationModule","body":"\n                   \n\n\n\n\n    Modules\n    SimpleDocumentationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SimpleDocumentationModule\n\n\n\ncluster_SimpleDocumentationModule_imports\n\n\n\ncluster_SimpleDocumentationModule_exports\n\n\n\ncluster_SimpleDocumentationModule_declarations\n\n\n\n\nSimpleDocumentationComponent\n\nSimpleDocumentationComponent\n\n\n\nSimpleDocumentationModule\n\nSimpleDocumentationModule\n\nSimpleDocumentationModule -->\n\nSimpleDocumentationComponent->SimpleDocumentationModule\n\n\n\n\n\nSimpleDocumentationComponent \n\nSimpleDocumentationComponent \n\nSimpleDocumentationComponent  -->\n\nSimpleDocumentationModule->SimpleDocumentationComponent \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nSimpleDocumentationModule -->\n\nLoggerModule->SimpleDocumentationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SimpleDocumentationComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SimpleDocumentationComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { Router, RouterModule } from '@angular/router';\nimport { KatexModule } from 'ng-katex';\nimport { FormService } from '../../form/form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\nimport { SyntheticDrawingModule } from '../synthetic-drawing/synthetic-drawing.module';\nimport { NavigationSidebarModule } from '../navigation-sidebar/navigation-sidebar.module';\nimport { CardModule } from '../card/card.module';\nimport { SimpleDocumentationComponent } from './simple-documentation.component';\n\n@NgModule({\n  declarations: [\n    SimpleDocumentationComponent,\n  ],\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    FormsModule,\n    LoggerModule.forRoot(),\n    KatexModule,\n  ],\n  exports: [\n    SimpleDocumentationComponent,\n  ],\n})\nexport class SimpleDocumentationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StepbarComponent.html":{"url":"components/StepbarComponent.html","title":"component - StepbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StepbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-stepbar\n            \n\n            \n                styleUrls\n                ./stepbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stepbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _step\n                            \n                            \n                                    Private\n                                _validity\n                            \n                            \n                                faCheck\n                            \n                            \n                                faExclamation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                    Public\n                                updateValidity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                step\n                            \n                            \n                                validity\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    validity\n                                \n                                \n                                    step\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:37\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validity\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive(step: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    step\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateValidity\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateValidity()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _step\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'geometry'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _validity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faExclamation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faExclamation\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        validity\n                    \n                \n\n                \n                    \n                        getvalidity()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:16\n                                \n                            \n\n                \n                    \n                        setvalidity(value: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:19\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n\n                \n                    \n                        getstep()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:26\n                                \n                            \n\n                \n                    \n                        setstep(value: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:29\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { faCheck, faExclamation } from '@fortawesome/free-solid-svg-icons';\n\n// interface Validity {\n//   steps: { [key: string]: string };\n//   forms: { [key: string]: string };\n// }\n\n@Component({\n  selector: 'lib-stepbar',\n  templateUrl: './stepbar.component.html',\n  styleUrls: ['./stepbar.component.scss'],\n})\nexport class StepbarComponent {\n  @Input()\n  get validity(): any {\n    return this._validity;\n  }\n  set validity(value: any) {\n    if (value) {\n      this._validity = value;\n    }\n  }\n\n  @Input()\n  get step(): string {\n    return this._step;\n  }\n  set step(value: string) {\n    this._step = value;\n  }\n  private _validity: any; // Validity = { steps: {}, forms: {} };\n\n  faCheck = faCheck;\n  faExclamation = faExclamation;\n\n  private _step: string = 'geometry';\n  constructor() {}\n\n  public updateValidity(): void {}\n  public isActive(step: string): boolean {\n    /**\n     * Determines if one of the step is active depending on other steps validity\n     */\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in this.validity.steps) {\n      if (Object.prototype.hasOwnProperty.call(this.validity.steps, key)) {\n        if (this.validity.steps[key] !== 'valid' || this.step === step) {\n          // We don't want the progress bar to continue after a warning\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n           -->\n          \n          \n        \n      \n\n      \n        Geometry\n      \n\n    \n    \n      \n        \n           -->\n          \n          \n        \n      \n      \n        Uplink\n      \n    \n    \n      \n        \n           -->\n           -->\n          \n          \n        \n      \n      \n        Downlink\n      \n    \n    \n      \n      \n            \n              \n            \n           -->\n      \n        Result\n      \n    \n  \n\n    \n\n    \n                \n                    ./stepbar.component.scss\n                \n                // @import \"~node_modules/bulma\";\n@import '~bulma/sass/utilities/derived-variables.sass';\n@import \"~node_modules/bulma-o-steps/bulma-steps.sass\";\n@import \"~node_modules/bulma-o-steps/index.sass\";\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                               -->                                                Geometry                                       -->                                                Uplink                                       -->           -->                                                Downlink                                                                           -->              Result            '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StepbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StepbarModule.html":{"url":"modules/StepbarModule.html","title":"module - StepbarModule","body":"\n                   \n\n\n\n\n    Modules\n    StepbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StepbarModule\n\n\n\ncluster_StepbarModule_exports\n\n\n\ncluster_StepbarModule_imports\n\n\n\ncluster_StepbarModule_declarations\n\n\n\n\nStepbarComponent\n\nStepbarComponent\n\n\n\nStepbarModule\n\nStepbarModule\n\nStepbarModule -->\n\nStepbarComponent->StepbarModule\n\n\n\n\n\nStepbarComponent \n\nStepbarComponent \n\nStepbarComponent  -->\n\nStepbarModule->StepbarComponent \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nStepbarModule -->\n\nLoggerModule->StepbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/stepbar/stepbar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StepbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StepbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormService } from '../../form/form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\nimport { SyntheticDrawingModule } from '../synthetic-drawing/synthetic-drawing.module';\nimport { NavigationSidebarModule } from '../navigation-sidebar/navigation-sidebar.module';\nimport { CardModule } from '../card/card.module';\nimport { StepbarComponent } from './stepbar.component';\n\n@NgModule({\n  declarations: [\n    StepbarComponent,\n  ],\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    LoggerModule.forRoot(),\n  ],\n  exports: [\n    StepbarComponent,\n  ],\n})\nexport class StepbarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SynthesisComponent.html":{"url":"components/SynthesisComponent.html","title":"component - SynthesisComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SynthesisComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/synthesis/synthesis.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-synthesis\n            \n\n            \n                styleUrls\n                ./synthesis.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./synthesis.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/synthesis/synthesis.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-synthesis',\n  templateUrl: './synthesis.component.html',\n  styleUrls: ['./synthesis.component.scss'],\n})\nexport class SynthesisComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n  \n      \n\n        \n          \n        \n\n      \n\n\n      \n        \n          \n        \n      \n  \n\n\n    \n\n    \n                \n                    ./synthesis.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SynthesisComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SynthesisModule.html":{"url":"modules/SynthesisModule.html","title":"module - SynthesisModule","body":"\n                   \n\n\n\n\n    Modules\n    SynthesisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SynthesisModule\n\n\n\ncluster_SynthesisModule_declarations\n\n\n\ncluster_SynthesisModule_imports\n\n\n\ncluster_SynthesisModule_exports\n\n\n\n\nSynthesisComponent\n\nSynthesisComponent\n\n\n\nSynthesisModule\n\nSynthesisModule\n\nSynthesisModule -->\n\nSynthesisComponent->SynthesisModule\n\n\n\n\n\nSynthesisComponent \n\nSynthesisComponent \n\nSynthesisComponent  -->\n\nSynthesisModule->SynthesisComponent \n\n\n\n\n\nCardModule\n\nCardModule\n\nSynthesisModule -->\n\nCardModule->SynthesisModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nSynthesisModule -->\n\nLoggerModule->SynthesisModule\n\n\n\n\n\nSyntheticDrawingModule\n\nSyntheticDrawingModule\n\nSynthesisModule -->\n\nSyntheticDrawingModule->SynthesisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/synthesis/synthesis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SynthesisComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            SyntheticDrawingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SynthesisComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormService } from '../../form/form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\nimport { SyntheticDrawingModule } from '../synthetic-drawing/synthetic-drawing.module';\nimport { NavigationSidebarModule } from '../navigation-sidebar/navigation-sidebar.module';\nimport { CardModule } from '../card/card.module';\nimport { SynthesisComponent } from './synthesis.component';\n\n@NgModule({\n  declarations: [\n    SynthesisComponent,\n  ],\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    CardModule,\n    SyntheticDrawingModule,\n    LoggerModule.forRoot(),\n  ],\n  exports: [\n    SynthesisComponent,\n  ],\n})\nexport class SynthesisModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SyntheticDrawingComponent.html":{"url":"components/SyntheticDrawingComponent.html","title":"component - SyntheticDrawingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SyntheticDrawingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-synthetic-drawing\n            \n\n            \n                styleUrls\n                ./synthetic-drawing.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./synthetic-drawing.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _components\n                            \n                            \n                                    Private\n                                _powerIn\n                            \n                            \n                                    Private\n                                budgetText\n                            \n                            \n                                diagram\n                            \n                            \n                                graphPoints\n                            \n                            \n                                    Private\n                                height\n                            \n                            \n                                    Private\n                                labels\n                            \n                            \n                                    Private\n                                mainSVG\n                            \n                            \n                                    Private\n                                margin\n                            \n                            \n                                    Private\n                                verticalLinesGroup\n                            \n                            \n                                    Private\n                                width\n                            \n                            \n                                    Private\n                                x\n                            \n                            \n                                    Private\n                                y\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initGraph\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Private\n                                updateGraphData\n                            \n                            \n                                    Private\n                                updateLabels\n                            \n                            \n                                    Private\n                                updateLBScenario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                components\n                            \n                            \n                                displayGraph\n                            \n                            \n                                linkType\n                            \n                            \n                                powerIn\n                            \n                            \n                                scenarioId\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    powerIn\n                                \n                                \n                                    components\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawingService: SyntheticDrawingFormService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        drawingService\n                                                  \n                                                        \n                                                                        SyntheticDrawingFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        components\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayGraph\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        linkType\n                    \n                \n                \n                    \n                        Type :     \"uplink\" | \"downlink\"\n\n                    \n                \n                \n                    \n                        Default value : 'uplink'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        powerIn\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scenarioId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:40\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initGraph\n                        \n                    \n                \n            \n            \n                \n                    \n                    initGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateGraphData\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGraphData(newScenario: LinkBudgetScenario)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:138\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newScenario\n                                    \n                                                LinkBudgetScenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateLabels\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLabels(newScenario: LinkBudgetScenario)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newScenario\n                                    \n                                                LinkBudgetScenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateLBScenario\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLBScenario(power: number, components: any, linkType: \"uplink\" | \"downlink\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    power\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    components\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    linkType\n                                    \n                                            \"uplink\" | \"downlink\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _components\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : DrawingDefault.defaultComponents\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _powerIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        budgetText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        diagram\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('diagram')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphPoints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mainSVG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        margin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    top: 30,\n    right: 30,\n    bottom: 0,\n    left: 30,\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        verticalLinesGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        powerIn\n                    \n                \n\n                \n                    \n                        getpowerIn()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:44\n                                \n                            \n\n                \n                    \n                        setpowerIn(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:47\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        components\n                    \n                \n\n                \n                    \n                        getcomponents()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:53\n                                \n                            \n\n                \n                    \n                        setcomponents(value: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:56\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { AfterViewInit, Component, Input, ViewChild } from '@angular/core';\nimport * as d3 from 'd3';\nimport { LinkBudgetScenario, Point } from '../../../shared/models/LinkBudgetScenario.model';\nimport { LoggerService } from '../../../shared/logger/logger.service';\nimport { SyntheticDrawingFormService } from '../synthetic-drawing-form.service';\nimport { DrawingDefault } from '../models/default';\n\n@Component({\n  selector: 'lib-synthetic-drawing',\n  templateUrl: './synthetic-drawing.component.html',\n  styleUrls: ['./synthetic-drawing.component.scss'],\n})\nexport class SyntheticDrawingComponent implements AfterViewInit {\n  private height: number = 0;\n  private width: number = 0;\n  private margin: { top: number; bottom: number; left: number; right: number } = {\n    top: 30,\n    right: 30,\n    bottom: 0,\n    left: 30,\n  };\n\n  // The x and y axis used by D3\n  private x: any;\n  private y: any;\n\n  @ViewChild('diagram') diagram: any;\n  graphPoints: Point[] = [];\n\n  private budgetText: any;\n  private mainSVG: any;\n  private labels: any;\n  private verticalLinesGroup: any;\n\n  // DefaultLBScenario:LinkBudgetScenario;\n  // private drawing: any;\n  // private graph: any;\n\n  @Input() linkType: 'uplink' | 'downlink' = 'uplink'; // If not used by results component, choose uplink as default\n  @Input() scenarioId: string = 'default';\n  @Input() displayGraph: boolean = true;\n\n  // Setters and getter for powerIn and components variables because they require to update the graph\n  @Input() get powerIn(): number {\n    return this._powerIn;\n  }\n  set powerIn(value: number) {\n    this._powerIn = value;\n    this.updateLBScenario(value, this.components, this.linkType);\n  }\n  private _powerIn: any = 0;\n  @Input()\n  get components(): any {\n    return this._components;\n  }\n  set components(value: any) {\n    this._components = value;\n    this.updateLBScenario(this.powerIn, value, this.linkType);\n  }\n  private _components: any = DrawingDefault.defaultComponents;\n\n  constructor(private drawingService: SyntheticDrawingFormService, private logger: LoggerService) {}\n\n  private updateLBScenario(power: number, components: any, linkType: 'uplink' | 'downlink'): void {\n    const scenario = new LinkBudgetScenario(power);\n    scenario.addComponents(components);\n    scenario.compute(linkType);\n    this.drawingService.updateLBScenario(this.scenarioId, scenario);\n  }\n\n  ngAfterViewInit(): void {\n    // We need to do this after view init because else, the ViewChild result might still be undefined\n    if (this.displayGraph) {\n      // In some cases, we might just be interested by the drawing\n      this.initGraph();\n      // Subscribing to the LBScenario models in case they are modified\n      this.drawingService.getLBScenario$(this.scenarioId).subscribe((value: LinkBudgetScenario) => {\n        this.updateGraphData(value);\n      });\n\n      // Initial update with all the current data\n      this.updateLBScenario(this.powerIn, this.components, this.linkType);\n    }\n  }\n\n  private updateLabels(newScenario: LinkBudgetScenario): void {\n    const labels = newScenario.getLabels();\n    this.labels\n      .selectAll('text')\n      .data(labels)\n      .enter()\n      .append('text')\n      .text((d: any) => d.name)\n      .attr('x', (d: any) => d.position * 9)\n      .attr('text-anchor', 'middle');\n  }\n\n  private initGraph(): void {\n    // points = this.DefaultLBScenario.getPoints();\n\n    this.width = 960 - this.margin.left - this.margin.right; // Same value as for the drawing\n    this.height = 240 - this.margin.top - this.margin.bottom;\n\n    this.x = d3.scaleLinear().range([0, this.width]);\n    this.y = d3.scaleLinear().range([0, this.height]);\n    this.x.domain([0, 100]);\n\n    // Setting the viewbox and div for the graph\n    this.mainSVG = d3\n      .select(this.diagram.nativeElement)\n      .append('svg')\n      .attr('id', 'graph')\n      .attr(\n        'viewBox',\n        `${-this.margin.left} ${-this.margin.top} ${this.width + this.margin.left + this.margin.right} ${\n          this.height + this.margin.top + this.margin.bottom + 60\n        }`\n      );\n    this.mainSVG\n      .append('path')\n      .attr('width', this.width + this.margin.left + this.margin.right)\n      .attr('height', this.height + this.margin.top + this.margin.bottom);\n\n    // Adding the summary text at the bottom, centered.\n    this.budgetText = this.mainSVG\n      .append('text')\n      .attr('x', (this.width + this.margin.left + this.margin.right) / 2)\n      .attr('y', this.height + this.margin.top + this.margin.bottom + 15)\n      .attr('text-anchor', 'middle');\n\n    this.verticalLinesGroup = this.mainSVG.append('g').attr('class', 'group');\n\n    this.mainSVG.append('g').attr('class', 'YAxis');\n\n    this.labels = this.mainSVG.append('g').attr('class', 'labels').attr('transform', 'translate(0,-10)');\n  }\n\n  private updateGraphData(newScenario: LinkBudgetScenario) {\n    const { x, y } = this;\n    const points = newScenario.getPoints();\n    const powerOut = newScenario.getPowerOut();\n\n    this.updateLabels(newScenario);\n\n    // this.logger.debug('Updating graph, points are :', points);\n    // this.logger.debug('newScenario is:', newScenario);\n\n    // Careful with this one, returns (min, max) but domain expects (up, down) so trouble with yaxis\n    const [min, max] = d3.extent(points, (point: { x: number; y: number }) => point.y) ?? [0, -150];\n\n    this.y.domain([max, min]);\n\n    const valueline = d3\n      .line()\n      .x((d: any) => x(d.x) ?? x(0))\n      .y((d: any) => y(d.y) ?? y(0));\n\n    // Setting the plot line\n    this.mainSVG\n      .select('path')\n      .datum(points)\n      .attr('class', 'line')\n      .transition()\n      .duration(1000)\n      .attr('d', valueline)\n      .attr('stroke-width', 2)\n      .attr('fill', '#FFFFFF')\n      .attr('stroke', '#111111');\n\n    // Setting the YAxis\n    this.mainSVG.select('.YAxis').transition().duration(1000).call(d3.axisLeft(this.y));\n\n    // The vertical lines, here the *9 factor is explained by the 100px -> (960-60)px conversion\n    this.verticalLinesGroup.selectAll('line').remove();\n\n    this.verticalLinesGroup\n      .selectAll('line')\n      .data(points)\n      .enter()\n      .append('line')\n      .attr('class', 'vert-line')\n      .attr('x1', (d: any) => d.x * 9)\n      .attr('y1', this.height)\n      .attr('x2', (d: any) => d.x * 9)\n      .attr('y2', 0)\n      .attr('stroke-width', 1)\n      .attr('stroke-dasharray', '5,5')\n      .attr('stroke', '#888888');\n\n    // Adding a line with power out\n    // this.svg\n    //   .append('line')\n    //   .attr('class', 'horz-line')\n    //   .attr('x1', (d:any) => 0)\n    //   .attr('y1', powerOut)\n    //   .attr('x2', (d:any) => this.width)\n    //   .attr('y2', powerOut)\n    //   .attr('stroke-width', 1)\n    //   .attr('stroke-dasharray', '5,5')\n    //   .attr('stroke', '#888888');\n\n    // Adding the formula at bottom\n    this.budgetText.text(`Prx = Ptx - Ltx + Gtx - Lpath + Grx - Lrx = ${powerOut.toFixed(1)} dB`);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n          \n            \n            \n          \n          \n            \n            \n          \n          \n            \n          \n          \n          \n          \n            \n            Tx\n            \n            Ground Segment\n            \n            Space Segment\n            \n            \n            \n            \n            \n            \n          \n          \n            \n          \n          \n            \n            \n            \n          \n          \n            \n            \n              \n              \n              \n            \n            \n          \n          \n            \n          \n          \n            \n            \n            \n            Rx\n          \n          \n        \n\n      \n\n      \n      \n    \n    \n    \n      \n            \n            \n              \n              \n            \n            \n              \n              \n            \n            \n              \n            \n            \n            \n            \n              \n              Tx\n              \n            \n            \n              \n            \n            \n              \n              \n              \n            \n            \n              \n              \n                \n                \n                \n              \n              \n            \n            \n              \n            \n            \n              \n              \n              \n              Rx\n            \n            \n            Ground Segment\n            Space Segment\n            \n            \n            \n            \n            \n            \n            \n      \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./synthetic-drawing.component.scss\n                \n                \n#side {\n  display:inline-block;\n  width: 50%;\n  height: 800px\n}\n\n// .line {\n//   fill: #FFFFFF;\n//   stroke: black;\n//   stroke-width: 2;\n// }\n\nform {\n  //float:left;\n  width:50%;\n  margin-right:auto;\n}\ninput{\n  float:right;\n}\n\ndiv {\n  margin: 10px 0px 10px  0px;\n}\n// #container{\n\n// }\n#diagram {\n  margin:24px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                              Tx                        Ground Segment                        Space Segment                                                                                                                                                                                                                                                                                                                                                                                  Rx                                                                                                                                                                                                                                                                                          Tx                                                                                                                                                                                                                                                                                                                                                                            Rx                                    Ground Segment            Space Segment                                                                                                            '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SyntheticDrawingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SyntheticDrawingFormComponent.html":{"url":"components/SyntheticDrawingFormComponent.html","title":"component - SyntheticDrawingFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SyntheticDrawingFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-synthetic-drawing-form\n            \n\n            \n                styleUrls\n                ./synthetic-drawing-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./synthetic-drawing-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentScenario\n                            \n                            \n                                drawingForm\n                            \n                            \n                                drawingFormSub\n                            \n                            \n                                LBScenarioSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                randomizeInputs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scenarioId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, drawingService: SyntheticDrawingFormService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        drawingService\n                                                  \n                                                        \n                                                                        SyntheticDrawingFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scenarioId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:22\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomizeInputs\n                        \n                    \n                \n            \n            \n                \nrandomizeInputs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentScenario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawingForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawingFormSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LBScenarioSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component, Input, OnDestroy, OnInit,\n} from '@angular/core';\nimport {\n  AbstractControlOptions, FormBuilder, FormGroup, Validators,\n} from '@angular/forms';\nimport { LinkBudgetComponent, LinkBudgetScenario } from '../../../shared/models/LinkBudgetScenario.model';\nimport { DrawingDefault } from '../models/default';\nimport { SyntheticDrawingFormService } from '../synthetic-drawing-form.service';\n\n@Component({\n  selector: 'lib-synthetic-drawing-form',\n  templateUrl: './synthetic-drawing-form.component.html',\n  styleUrls: ['./synthetic-drawing-form.component.scss'],\n})\nexport class SyntheticDrawingFormComponent implements OnInit, OnDestroy {\n  drawingForm: FormGroup;\n  currentScenario: any;\n  drawingFormSub: any;\n  LBScenarioSub: any;\n  // This ties the form to the right LBScenario model, don't forget to include it\n  @Input() scenarioId: string = 'default';\n\n  constructor(private formBuilder: FormBuilder, private drawingService:SyntheticDrawingFormService) {\n    // This sets the options for our form group\n    const controlOptions: AbstractControlOptions = { validators: [Validators.required], updateOn: 'blur' };\n    this.drawingForm = this.formBuilder.group({\n      power: DrawingDefault.powerIn,\n      gains: this.formBuilder.group(DrawingDefault.defaultGains),\n    }, controlOptions);\n  }\n\n  ngOnInit(): void {\n    // When the 'updateOn:blur' is triggered, we call the onSubmit within the new context\n    this.drawingFormSub = this.drawingForm.valueChanges.subscribe({\n      next: this.onSubmit.bind(this),\n    });\n    this.LBScenarioSub = this.drawingService.getLBScenario$(this.scenarioId).subscribe((next) => {\n      this.currentScenario = next;\n    });\n  }\n\n  ngOnDestroy() {\n    this.drawingFormSub.unsubscribe();\n    this.LBScenarioSub.unsubscribe();\n  }\n\n  randomizeInputs() {\n    // Randomize belongs to the form component, we should randomize here and send data to model after\n    const defaultLBScenario: LinkBudgetScenario = this.drawingService.getLBScenario(this.scenarioId);\n    const components: { [id: string]: LinkBudgetComponent; } = defaultLBScenario.randomize();\n\n    const newGains: { [id:string]:number } = {};\n    const excluded = ['tx', 'rx'];\n    Object.entries(components).forEach(([key, value]) => {\n      if (!excluded.includes(key)) {\n        newGains[key] = value.gain;\n      }\n    });\n    this.drawingForm.patchValue({ gains: newGains });// Update the form values\n    defaultLBScenario.compute();\n    this.drawingService.updateLBScenario(this.scenarioId, defaultLBScenario);\n  }\n\n  onSubmit() {\n    const defaultLBScenario = this.drawingService.getLBScenario(this.scenarioId);\n    defaultLBScenario.setPowerIn( this.drawingForm.value.power);\n\n    const formValues = this.drawingForm.value.gains;\n\n    defaultLBScenario.editGains(formValues);\n    defaultLBScenario.compute();\n    this.drawingService.updateLBScenario(this.scenarioId, defaultLBScenario);\n  }\n}\n\n    \n\n    \n        \n  \n    Power in: \n  \n\n  \n    \n      \n        Tx Cable Loss: \n      \n      \n        Tx Antenna Gain: \n      \n      \n        FSL: \n      \n      \n        Rx Antenna Gain: \n      \n      \n        Rx Cable Loss: \n      \n    \n  \n  \n    \n      \n        Update Graph\n      \n    \n    \n      \n        Random values\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./synthetic-drawing-form.component.scss\n                \n                .ng-valid[required], .ng-valid.required {\n  border-left: 5px solid green;\n}\n.ng-invalid:not(form) {\n  border-left: 5px solid red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Power in:                       Tx Cable Loss:                     Tx Antenna Gain:                     FSL:                     Rx Antenna Gain:                     Rx Cable Loss:                                 Update Graph                            Random values            '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SyntheticDrawingFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SyntheticDrawingFormService.html":{"url":"injectables/SyntheticDrawingFormService.html","title":"injectable - SyntheticDrawingFormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SyntheticDrawingFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                components\n                            \n                            \n                                    Public\n                                LBScenario\n                            \n                            \n                                    Public\n                                LBScenario$\n                            \n                            \n                                powerIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLBScenario\n                            \n                            \n                                getLBScenario$\n                            \n                            \n                                updateLBScenario\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLBScenario\n                        \n                    \n                \n            \n            \n                \ngetLBScenario(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LinkBudgetScenario\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLBScenario$\n                        \n                    \n                \n            \n            \n                \ngetLBScenario$(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Subject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLBScenario\n                        \n                    \n                \n            \n            \n                \nupdateLBScenario(id: string, newLBScenario: LinkBudgetScenario)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newLBScenario\n                                    \n                                                LinkBudgetScenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : DrawingDefault.defaultComponents\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        LBScenario\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:18\n                        \n                    \n\n            \n                \n                    This class handles the form part where the user can input some values in order to display them on the graph.\nIt is not required for the graph to display. The graph can be used as standalone.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        LBScenario$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        powerIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : DrawingDefault.powerIn\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LinkBudgetComponent, LinkBudgetScenario } from '../../shared/models/LinkBudgetScenario.model';\nimport { DrawingDefault } from './models/default';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SyntheticDrawingFormService {\n  /**\n   * This class handles the form part where the user can input some values in order to display them on the graph.\n   * It is not required for the graph to display. The graph can be used as standalone.\n   */\n\n  // That is not exactly a good practice but we are keeping the last value of LBScenario\n  // This is used by drawingFormService as a basis for randomizing\n  public LBScenario: { [id: string]: LinkBudgetScenario } = { };\n  public LBScenario$: { [id: string]: Subject } = { };\n\n  components: { id: string, component: LinkBudgetComponent }[] = DrawingDefault.defaultComponents;\n  powerIn: number = DrawingDefault.powerIn;\n\n  constructor() {\n    // THIS is the wrong way to do it, subscribing to one of the object's parameters overrides other subscription.\n    // Terrible bug to solve, still not sure why it did not work...\n    // this.LBScenario$.default = new Subject();\n    // this.LBScenario$.uplink = new Subject();\n    // this.LBScenario$.downlink = new Subject();\n    this.LBScenario$ = {\n      default: new Subject(),\n      uplink: new Subject(),\n      downlink: new Subject(),\n    };\n  }\n  // // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  // initLBScenario(id: string, powerIn = this.powerIn, components = this.components, type: 'uplink' | 'downlink' = 'uplink') {\n  // }\n\n  updateLBScenario(id: string, newLBScenario: LinkBudgetScenario) {\n    this.LBScenario[id] = newLBScenario;\n    this.LBScenario$[id].next(newLBScenario);\n  }\n\n  getLBScenario$(id: string): Subject {\n    return this.LBScenario$[id];\n  }\n\n  getLBScenario(id: string) : LinkBudgetScenario {\n    /** Do not use this function unless absolutely necessary */\n    return this.LBScenario[id]; // ?? this.LBScenario$.default.getValue();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SyntheticDrawingModule.html":{"url":"modules/SyntheticDrawingModule.html","title":"module - SyntheticDrawingModule","body":"\n                   \n\n\n\n\n    Modules\n    SyntheticDrawingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SyntheticDrawingModule\n\n\n\ncluster_SyntheticDrawingModule_exports\n\n\n\ncluster_SyntheticDrawingModule_providers\n\n\n\ncluster_SyntheticDrawingModule_declarations\n\n\n\ncluster_SyntheticDrawingModule_imports\n\n\n\n\nSyntheticDrawingComponent\n\nSyntheticDrawingComponent\n\n\n\nSyntheticDrawingModule\n\nSyntheticDrawingModule\n\nSyntheticDrawingModule -->\n\nSyntheticDrawingComponent->SyntheticDrawingModule\n\n\n\n\n\nSyntheticDrawingFormComponent\n\nSyntheticDrawingFormComponent\n\nSyntheticDrawingModule -->\n\nSyntheticDrawingFormComponent->SyntheticDrawingModule\n\n\n\n\n\nSyntheticDrawingComponent \n\nSyntheticDrawingComponent \n\nSyntheticDrawingComponent  -->\n\nSyntheticDrawingModule->SyntheticDrawingComponent \n\n\n\n\n\nSyntheticDrawingFormComponent \n\nSyntheticDrawingFormComponent \n\nSyntheticDrawingFormComponent  -->\n\nSyntheticDrawingModule->SyntheticDrawingFormComponent \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nSyntheticDrawingModule -->\n\nLoggerModule->SyntheticDrawingModule\n\n\n\n\n\nSyntheticDrawingFormService\n\nSyntheticDrawingFormService\n\nSyntheticDrawingModule -->\n\nSyntheticDrawingFormService->SyntheticDrawingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SyntheticDrawingComponent\n                        \n                        \n                            SyntheticDrawingFormComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SyntheticDrawingFormService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SyntheticDrawingComponent\n                        \n                        \n                            SyntheticDrawingFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SyntheticDrawingFormComponent } from './synthetic-drawing-form/synthetic-drawing-form.component';\nimport { SyntheticDrawingComponent } from './synthetic-drawing-display/synthetic-drawing.component';\nimport { SyntheticDrawingFormService } from './synthetic-drawing-form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\n\n@NgModule({\n  declarations: [\n    SyntheticDrawingFormComponent,\n    SyntheticDrawingComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    LoggerModule,\n  ],\n  exports: [\n    SyntheticDrawingFormComponent,\n    SyntheticDrawingComponent,\n  ],\n  providers: [\n    SyntheticDrawingFormService,\n  ],\n\n})\nexport class SyntheticDrawingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Template.html":{"url":"interfaces/Template.html","title":"interface - Template","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Template\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            components\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        components:         Form[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Form[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Field {\n  id: string; // id used by API to recognize label\n  desc: string; // the label displayed, human-readable\n  type?: 'gain' | 'loss'; // Used to display appropriate warning (e.g. user types a positive loss)\n  units: string[]; // A list of possible units, the first one being displayed by default\n  options?: 'field' | 'antenna'; // Optional, since by default we'll assume it's a field\n  optionsField?: Field[];\n  default: number;\n  alternative?: Form;\n}\n\nexport interface Form {\n  /// /componentType:string,\n  componentId: string;\n  parentComponent?: string;\n  hasAntenna?: boolean;\n  componentName?: string;\n  image?: string;\n  params: Field[];\n\n  parent?: string;\n  computeFn?: string;\n}\n\nexport interface AntennaField {\n  id: string;\n  antennaId: string;\n\n  antennaValues: Field[];\n}\n\nexport interface Template {\n  components: Form[];\n}\n\nexport class EmptyForm implements Form {\n  // componentType: '',\n  componentId: string;\n  parentComponent?: string;\n  params: Field[];\n\n  constructor() {\n    this.componentId = 'empty';\n    this.parentComponent = 'uplink';\n    this.params = [];\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToastrTestingModule.html":{"url":"modules/ToastrTestingModule.html","title":"module - ToastrTestingModule","body":"\n                   \n\n\n\n\n    Modules\n    ToastrTestingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable max-classes-per-file */\n/* eslint-disable class-methods-use-this */\n\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n// Mocking the Toastr module thanks to https://github.com/scttcper/ngx-toastr/issues/339#issuecomment-508750488\nimport { Injectable, NgModule } from '@angular/core';\nimport { IndividualConfig, ToastPackage, ToastRef, ToastrModule } from 'ngx-toastr';\n// import mockPOSTData from './mockPOSTData.json';\n// Mocking  FormService\nexport class MockFormService {\n  public result: BehaviorSubject = new BehaviorSubject('');\n  fb = new FormBuilder();\n  public getFormData(): FormGroup {\n    // Objects.mockPOSTData.geometry\n    // const geo = this.fb.group(mockPOSTData.geometry);\n    return new FormBuilder().group({ test: 5, u: 3.14159265358979323846 });\n  }\n  public initForms(): void {}\n\n  public getFormData$(): Observable {\n    return of(new FormBuilder().group({ test: 5, u: 3.14159265358979323846 }));\n  }\n}\n// Mocking ComputeLinkBudgetService\nexport class MockComputeService {}\n// Mocking LoggerService\nexport class MockupLoggerService {\n  public log() {}\n  public debug() {}\n  public error() {}\n  public info() {}\n  public warn() {}\n}\n\n@Injectable()\nclass MockToastPackage extends ToastPackage {\n  constructor() {\n    const toastConfig = { toastClass: 'custom-toast' };\n    super(1, toastConfig, 'test message', 'test title', 'show', new ToastRef(null!));\n  }\n}\n\n@NgModule({\n  providers: [{ provide: ToastPackage, useClass: MockToastPackage }],\n  imports: [ToastrModule.forRoot()],\n  exports: [ToastrModule],\n})\nexport class ToastrTestingModule {}\n\n// INJECTION TOKENS\nexport const mockEnvironment = {\n  production: false,\n  debugMode: true,\n  enableNanospace: true,\n  luplinkEndpoint: 'http://localhost:8001',\n  version: 0.0,\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewComponent.html":{"url":"components/ViewComponent.html","title":"component - ViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/ui/view/view.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-view\n            \n\n            \n                styleUrls\n                ./view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/ui/view/view.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.scss'],\n})\nexport class ViewComponent {\n  constructor() { }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./view.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WarnFn.html":{"url":"interfaces/WarnFn.html","title":"interface - WarnFn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WarnFn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/custom-field.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidatorFn\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractControl, FormControl, ValidationErrors, ValidatorFn } from '@angular/forms';\n// https://dev.to/vishesh/custom-error-handling-in-angular-reactive-forms-5f05\n\nexport class FormControlWarn extends FormControl {\n  warnings: any;\n}\n\nexport interface WarnFn extends ValidatorFn {}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class CustomValidators {\n  constructor() {}\n\n  public positiveLossWarningValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    (control).warnings =\n      control.get('value')?.value > 0 ? 'Loss is algebraic here and usually  {\n    if (!control && control !== 0) {\n      return {\n        error: 'Please enter a value here',\n      };\n    }\n    return null;\n  };\n\n  public validValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (control.errors === null) {\n      return null;\n    }\n    let { pattern } = control.errors;\n    if (pattern) {\n      return {\n        error: 'Please enter a numerical value',\n      };\n    }\n    return {\n      error: 'Unknown error (3)',\n    };\n  };\n\n  public fieldValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    let value = control.get('value');\n    const unit = control.get('unit');\n\n    /*\n  Pass value Abstract control through multiple validators and output the result\n  TODO: order them by importance and only show the most jarring issue (or should we show all errors at once?)\n  -required\n  -numerical\n  -bounds\n  - ?\n  */\n    let req = this.requiredValidator(value?.value);\n    //let val = this.validValidator(value.value)\n    //let errList = [req, val];\n\n    // for(let i = 0; i \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WelcomeComponent.html":{"url":"components/WelcomeComponent.html","title":"component - WelcomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WelcomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-welcome\n            \n\n            \n                styleUrls\n                ./welcome.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./welcome.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debugMode\n                            \n                            \n                                    Public\n                                environment\n                            \n                            \n                                    Public\n                                jsoData\n                            \n                            \n                                jsoForm\n                            \n                            \n                                    Public\n                                selectedSatellite\n                            \n                            \n                                    Public\n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildForm\n                            \n                            \n                                importJSatOrbData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                useSelectedData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: any, logger: LoggerService, saveLoadService: SaveLoadService, formService: FormService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:15\n                            \n                        \n\n                \n                    \n                            Import Data from JSatOrb, select satellites and groundstations to study. Maybe also import from nanospace.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        saveLoadService\n                                                  \n                                                        \n                                                                        SaveLoadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildForm\n                        \n                    \n                \n            \n            \n                \nbuildForm(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.jsoData\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        importJSatOrbData\n                        \n                    \n                \n            \n            \n                \nimportJSatOrbData(files: FileList | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useSelectedData\n                        \n                    \n                \n            \n            \n                \nuseSelectedData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        debugMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.environment.debugMode\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(ENVIRONMENT_TOKEN)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        jsoData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { title: '', satellites: undefined, groundStations: undefined }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jsoForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    satellite: new FormControl(),\n    station: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedSatellite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl } from '@angular/forms';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { SaveLoadService } from '../../services/save-load.service';\nimport { HelperFunctions } from '../../shared/helper-functions';\nimport mockJSatOrbData from '../../shared/testing/mockJSatOrbData.json';\nimport { FormService } from '../../form/form.service';\nimport { ENVIRONMENT_TOKEN } from '../../shared/dependencies';\n\n@Component({\n  selector: 'lib-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss'],\n})\nexport class WelcomeComponent implements OnInit {\n  /**\n   * Import Data from JSatOrb, select satellites and groundstations to study. Maybe also import from nanospace.\n   */\n  constructor(@Inject(ENVIRONMENT_TOKEN) public environment: any, private logger: LoggerService, private saveLoadService: SaveLoadService, private formService: FormService, private fb:FormBuilder) { }\n  public selectedSatellite: any;\n  public selectedStation: any;\n  public jsoData: { title: string, satellites: any, groundStations: any } = { title: '', satellites: undefined, groundStations: undefined };\n  debugMode = this.environment.debugMode;\n\n  jsoForm = new FormGroup({\n    satellite: new FormControl(),\n    station: new FormControl(),\n  });\n\n  ngOnInit(): void {\n    if (this.debugMode) {\n      const testData = mockJSatOrbData;\n      const title = testData.header?.mission;\n      const satellites = this.saveLoadService.formatJSOData(testData.satellites);\n      const { groundStations } = testData;\n      this.jsoData = { title, satellites, groundStations };\n      this.buildForm();\n    }\n  }\n\n  importJSatOrbData(files: FileList | null) {\n    const obs = this.saveLoadService.importJSatOrbConfigFile(files)\n      .subscribe(\n        (value:any) => {\n          if (value) this.jsoData = value;\n          console.log('import from jso');\n          console.log(this.jsoData);\n          this.buildForm();\n          obs.unsubscribe();\n        },\n        (error:any) => {\n          this.logger.error('Error', 'Could not open file provided');\n          obs.unsubscribe();\n        },\n        // When complete\n        () => { obs.unsubscribe(); },\n      );\n    // return;\n  }\n\n  buildForm(data: any = this.jsoData): FormGroup {\n    /**\n     * This builds the reactive part of the form from jsoData so that it can be displayed by template\n     */\n    this.jsoForm.patchValue({\n      satellite: this.jsoData.satellites[0], // MIGHT CRASH IF EMPTY\n      station: this.jsoData.groundStations[0],\n    });\n    return this.jsoForm;\n  }\n  useSelectedData() {\n    this.logger.debug('jsoForm value:', this.jsoForm.value);\n    this.selectedSatellite = this.jsoForm.controls.satellite.value;\n    this.selectedStation = this.jsoForm.controls.station.value;\n    if (!(this.selectedSatellite && this.selectedStation)) {\n      this.logger.warn('Warning', 'Station or satellite not selected!');\n      return;\n    }\n    this.saveLoadService.importJSOData(this.jsoData.title, this.selectedSatellite, this.selectedStation);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      Welcome to Luplink\n      Start importing data from JSatOrb or use default data to compute a link budget!\n      \n        \n          \n        \n        Dummy import\n       -->\n      \n        \n\n           -->\n          \n\n            \n              \n                \n                  \n                  Import -->\n                \n                Load JSatOrb file (.jso)\n              \n              \n                Imported project: {{this.jsoData.title}}Satellites:\n                  ({{this.jsoData.satellites?.length}})Groundstations:\n                  ({{this.jsoData.groundStations?.length}})\n                \n              \n            \n          \n          \n            \n              Choose a satellite and a groundstation to import: \n              \n                \n\n                  \n                    \n                      Satellites\n                      Characteristics\n                    \n                    \n                      \n                        {{satellite.name}}\n                        {{satellite.type}}\n                        \n                          Select\n                        \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      Stations\n                    \n                    \n                      \n                        {{station.name}}\n                        \n                          Select\n                        \n                      \n                    \n                  \n                \n               -->\n              \n                \n                  \n                    \n                      Satellite:\n                      \n                        \n                          \n                            {{satellite.name}}\n                        \n                      \n                    \n                    \n                      Station:\n                      \n                        \n                          \n                            {{station.name}}\n                          \n                        \n                      \n                    \n                  \n                \n                \n                  \n                    \n                  \n                  \n                    \n                      Import\n                    \n                  \n                \n              \n            \n            Selected Satellite:\n            {{selectedSatellite | json}}\n            \n              Semi-Major Axis (SMA): {{((selectedSatellite.sma)).toPrecision(3)}}\n              Excentricity: {{selectedSatellite.ecc}}\n              Minimum Altitude: {{((1-selectedSatellite.ecc)*selectedSatellite.sma).toPrecision(3)}} km\n              Maximum Altitude (imported into geometry):\n                  {{((1+selectedSatellite.ecc)*selectedSatellite.sma).toPrecision(3)}} km\n\n              Mean Altitude: {{(selectedSatellite.sma).toPrecision(3)}} km -->\n            \n            Selected groundstation\n            {{selectedStation | json}}\n            \n              Elevation: {{(selectedStation.elevation).toPrecision(3)}}\n            \n            Import -->\n          \n\n\n        \n\n         -->\n        \n          \n            \n              \n              \n            \n          \n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./welcome.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Welcome to Luplink      Start importing data from JSatOrb or use default data to compute a link budget!                                        Dummy import       -->                         -->                                                                                        Import -->                                Load JSatOrb file (.jso)                                            Imported project: {{this.jsoData.title}}Satellites:                  ({{this.jsoData.satellites?.length}})Groundstations:                  ({{this.jsoData.groundStations?.length}})                                                                                        Choose a satellite and a groundstation to import:                                                                                           Satellites                      Characteristics                                                                                      {{satellite.name}}                        {{satellite.type}}                                                  Select                                                                                                                                                                                Stations                                                                                      {{station.name}}                                                  Select                                                                                                                   -->                                                                                          Satellite:                                                                                                    {{satellite.name}}                                                                                                            Station:                                                                                                    {{station.name}}                                                                                                                                                                                                                                                                  Import                                                                                            Selected Satellite:            {{selectedSatellite | json}}                          Semi-Major Axis (SMA): {{((selectedSatellite.sma)).toPrecision(3)}}              Excentricity: {{selectedSatellite.ecc}}              Minimum Altitude: {{((1-selectedSatellite.ecc)*selectedSatellite.sma).toPrecision(3)}} km              Maximum Altitude (imported into geometry):                  {{((1+selectedSatellite.ecc)*selectedSatellite.sma).toPrecision(3)}} km              Mean Altitude: {{(selectedSatellite.sma).toPrecision(3)}} km -->                        Selected groundstation            {{selectedStation | json}}                          Elevation: {{(selectedStation.elevation).toPrecision(3)}}                        Import -->                           -->                                                                                                    '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WelcomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WelcomeModule.html":{"url":"modules/WelcomeModule.html","title":"module - WelcomeModule","body":"\n                   \n\n\n\n\n    Modules\n    WelcomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WelcomeModule\n\n\n\ncluster_WelcomeModule_imports\n\n\n\ncluster_WelcomeModule_exports\n\n\n\ncluster_WelcomeModule_declarations\n\n\n\n\nWelcomeComponent\n\nWelcomeComponent\n\n\n\nWelcomeModule\n\nWelcomeModule\n\nWelcomeModule -->\n\nWelcomeComponent->WelcomeModule\n\n\n\n\n\nWelcomeComponent \n\nWelcomeComponent \n\nWelcomeComponent  -->\n\nWelcomeModule->WelcomeComponent \n\n\n\n\n\nCardModule\n\nCardModule\n\nWelcomeModule -->\n\nCardModule->WelcomeModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nWelcomeModule -->\n\nFormModule->WelcomeModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nWelcomeModule -->\n\nLoggerModule->WelcomeModule\n\n\n\n\n\nNavigationSidebarModule\n\nNavigationSidebarModule\n\nWelcomeModule -->\n\nNavigationSidebarModule->WelcomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/welcome/welcome.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            WelcomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardModule\n                        \n                        \n                            FormModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            NavigationSidebarModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            WelcomeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { Router, RouterModule } from '@angular/router';\nimport { NanospaceRequestService, NanospaceService, NgxNanospaceClientLibModule } from 'ngx-nanospace-client-lib';\nimport { FormService } from '../../form/form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\nimport { SyntheticDrawingModule } from '../synthetic-drawing/synthetic-drawing.module';\nimport { NavigationSidebarModule } from '../navigation-sidebar/navigation-sidebar.module';\nimport { CardModule } from '../card/card.module';\nimport { WelcomeComponent } from './welcome.component';\nimport { FormModule } from '../../form/form.module';\n\n@NgModule({\n  declarations: [\n    WelcomeComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\n    LoggerModule.forRoot(),\n    FormModule,\n    CardModule,\n    NavigationSidebarModule,\n    NgxNanospaceClientLibModule,\n  ],\n  exports: [\n    WelcomeComponent,\n  ],\n  providers: [\n    // NanospaceRequestService,\n    // NanospaceService,\n  ],\n})\nexport class WelcomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/21)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts\n            \n            component\n            NavigationSidebarComponent\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/results/components/results/results.component.ts\n            \n            component\n            ResultsComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/results/components/sidebar/result-sidebar.component.ts\n            \n            component\n            ResultSidebarComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts\n            \n            component\n            SimpleDocumentationComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts\n            \n            component\n            StepbarComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/synthesis/synthesis.component.ts\n            \n            component\n            SynthesisComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/synthetic-drawing/models/default.ts\n            \n            class\n            DrawingDefault\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts\n            \n            component\n            SyntheticDrawingComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts\n            \n            injectable\n            SyntheticDrawingFormService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts\n            \n            component\n            SyntheticDrawingFormComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts\n            \n            component\n            WelcomeComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/form/component/form.component.ts\n            \n            component\n            FormComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/form/form.service.ts\n            \n            injectable\n            FormService\n            \n                5 %\n                (1/17)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts\n            \n            injectable\n            JSatOrbLinkService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts\n            \n            component\n            JSatOrbLinkComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/luplink.module.ts\n            \n            interface\n            LuplinkConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/luplink.module.ts\n            \n            variable\n            NanospaceConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/luplink.module.ts\n            \n            variable\n            NgxNanospace\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts\n            \n            injectable\n            ComputeLinkBudgetService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/services/save-load.service.ts\n            \n            injectable\n            SaveLoadService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/services/save-load.service.ts\n            \n            variable\n            readFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts\n            \n            class\n            CustomRouteReuseStrategy\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/custom-field.ts\n            \n            class\n            FormControlWarn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/custom-field.ts\n            \n            injectable\n            CustomValidators\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/custom-field.ts\n            \n            interface\n            WarnFn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/data.mock.ts\n            \n            variable\n            jsoMockData\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/dependencies.ts\n            \n            variable\n            ENVIRONMENT_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/dependencies.ts\n            \n            variable\n            FORM_TEMPLATE_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/helper-functions.ts\n            \n            class\n            HelperFunctions\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/logger/logger.service.ts\n            \n            class\n            LogEntry\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/logger/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Antennas.ts\n            \n            class\n            Antennas\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Antennas.ts\n            \n            interface\n            Antenna\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Antennas.ts\n            \n            variable\n            AntennasUtilsFunctions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n            \n            class\n            EmptyForm\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n            \n            interface\n            AntennaField\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n            \n            interface\n            Field\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n            \n            interface\n            Form\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n            \n            interface\n            Template\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts\n            \n            class\n            LinkBudgetScenario\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts\n            \n            interface\n            LinkBudgetComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts\n            \n            interface\n            Point\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts\n            \n            class\n            FormsTemplate\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n            \n            class\n            MockComputeService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n            \n            class\n            MockFormService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n            \n            class\n            MockupLoggerService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n            \n            injectable\n            MockToastPackage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n            \n            variable\n            mockEnvironment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/ui/view/view.component.ts\n            \n            component\n            ViewComponent\n            \n                0 %\n                (0/2)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.14\n        \n            @angular/common : ~11.2.1\n        \n            @angular/compiler : ~11.2.1\n        \n            @angular/core : ~11.2.1\n        \n            @angular/forms : ^11.2.14\n        \n            @angular/platform-browser : ~11.2.1\n        \n            @angular/platform-browser-dynamic : ~11.2.1\n        \n            @angular/router : ~11.2.1\n        \n            @creativebulma/bulma-tooltip : ^1.2.0\n        \n            @fortawesome/angular-fontawesome : ^0.9.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.35\n        \n            @fortawesome/free-solid-svg-icons : ^5.15.3\n        \n            @luplink/ngx-luplink : file:luplink-ngx-luplink-0.2.1.tgz\n        \n            @ng-bootstrap/ng-bootstrap : ^10.0.0\n        \n            bootstrap : ^5.0.2\n        \n            bulma : ^0.9.3\n        \n            bulma-o-steps : ^1.1.0\n        \n            d3 : ^7.0.0\n        \n            ng-katex : ^2.0.3\n        \n            ngx-nanospace-client-lib : ^0.4.2\n        \n            ngx-toastr : ^14.0.0\n        \n            rxjs : ~6.6.0\n        \n            sanitize-filename : ^1.6.3\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LogLevel   (projects/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-luplink/src/lib/shared/logger/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                        \n                            \n                                 All\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 Fatal\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 Off\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLuplink\n\nThis workspace contains two projects :\n\nngx-luplink, the library containing modules, components & services of luplink (see ngx-luplink's README.md for more information)\nluplink-app, the app that bootstraps ngx-luplink for standalone use or development of the library\n\nThis library was generated with Angular CLI version 11.2.14.\nCode scaffolding\nRun ng generate component component-name --project ngx-luplink to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module --project ngx-luplink.\n\nNote: Don't forget to add --project ngx-luplink or else it will be added to the default project in your angular.json file. \n\nBuild\nRun ng build ngx-luplink to build the project in production mode. The build artifacts will be stored in the dist/ directory.\nPublishing\nAfter building your library with ng build ngx-luplink, go to the dist folder cd dist/ngx-luplink and run npm publish.\nRunning unit tests\nRun ng test ngx-luplink to execute the unit tests via Karma.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LuplinkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavigationSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimpleDocumentationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StepbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SynthesisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SyntheticDrawingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToastrTestingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WelcomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CardModule\n\n\n\ncluster_CardModule_declarations\n\n\n\ncluster_CardModule_exports\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_imports\n\n\n\ncluster_LayoutModule_exports\n\n\n\ncluster_LayoutModule_providers\n\n\n\ncluster_LuplinkModule\n\n\n\ncluster_LuplinkModule_providers\n\n\n\ncluster_NavbarModule\n\n\n\ncluster_NavbarModule_declarations\n\n\n\ncluster_NavbarModule_exports\n\n\n\ncluster_NavigationSidebarModule\n\n\n\ncluster_NavigationSidebarModule_declarations\n\n\n\ncluster_NavigationSidebarModule_exports\n\n\n\ncluster_ResultSidebarModule\n\n\n\ncluster_ResultSidebarModule_declarations\n\n\n\ncluster_ResultSidebarModule_imports\n\n\n\ncluster_ResultSidebarModule_exports\n\n\n\ncluster_SimpleDocumentationModule\n\n\n\ncluster_SimpleDocumentationModule_declarations\n\n\n\ncluster_SimpleDocumentationModule_exports\n\n\n\ncluster_StepbarModule\n\n\n\ncluster_StepbarModule_declarations\n\n\n\ncluster_StepbarModule_exports\n\n\n\ncluster_SynthesisModule\n\n\n\ncluster_SynthesisModule_declarations\n\n\n\ncluster_SynthesisModule_exports\n\n\n\ncluster_SyntheticDrawingModule\n\n\n\ncluster_SyntheticDrawingModule_declarations\n\n\n\ncluster_SyntheticDrawingModule_exports\n\n\n\ncluster_SyntheticDrawingModule_providers\n\n\n\ncluster_WelcomeModule\n\n\n\ncluster_WelcomeModule_declarations\n\n\n\ncluster_WelcomeModule_exports\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nCardModule\n\nCardModule\n\nCardModule -->\n\nCardComponent->CardModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardModule->CardComponent \n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nCardModule->LayoutModule\n\n\n\n\n\nResultSidebarModule\n\nResultSidebarModule\n\nResultSidebarModule -->\n\nCardModule->ResultSidebarModule\n\n\n\n\n\nLuplinkModule\n\nLuplinkModule\n\nLuplinkModule -->\n\nCardModule->LuplinkModule\n\n\n\n\n\nSynthesisModule\n\nSynthesisModule\n\nSynthesisModule -->\n\nCardModule->SynthesisModule\n\n\n\n\n\nWelcomeModule\n\nWelcomeModule\n\nWelcomeModule -->\n\nCardModule->WelcomeModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\nLayoutModule -->\n\nFormModule->LayoutModule\n\n\n\nWelcomeModule -->\n\nFormModule->WelcomeModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nFormModule -->\n\nLoggerModule->FormModule\n\n\n\nLayoutModule -->\n\nLoggerModule->LayoutModule\n\n\n\nResultSidebarModule -->\n\nLoggerModule->ResultSidebarModule\n\n\n\n\n\nSimpleDocumentationModule\n\nSimpleDocumentationModule\n\nSimpleDocumentationModule -->\n\nLoggerModule->SimpleDocumentationModule\n\n\n\n\n\nStepbarModule\n\nStepbarModule\n\nStepbarModule -->\n\nLoggerModule->StepbarModule\n\n\n\n\n\nNavbarModule\n\nNavbarModule\n\nNavbarModule -->\n\nLoggerModule->NavbarModule\n\n\n\n\n\nSyntheticDrawingModule\n\nSyntheticDrawingModule\n\nSyntheticDrawingModule -->\n\nLoggerModule->SyntheticDrawingModule\n\n\n\nSynthesisModule -->\n\nLoggerModule->SynthesisModule\n\n\n\nWelcomeModule -->\n\nLoggerModule->WelcomeModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nFormModule -->\n\nLoggerService->FormModule\n\n\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\nJSatOrbLinkComponent\n\nJSatOrbLinkComponent\n\nLayoutModule -->\n\nJSatOrbLinkComponent->LayoutModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nLayoutModule -->\n\nLayoutComponent->LayoutModule\n\n\n\n\n\nViewComponent\n\nViewComponent\n\nLayoutModule -->\n\nViewComponent->LayoutModule\n\n\n\n\n\nJSatOrbLinkComponent \n\nJSatOrbLinkComponent \n\nJSatOrbLinkComponent  -->\n\nLayoutModule->JSatOrbLinkComponent \n\n\n\n\n\nLayoutComponent \n\nLayoutComponent \n\nLayoutComponent  -->\n\nLayoutModule->LayoutComponent \n\n\n\n\n\nViewComponent \n\nViewComponent \n\nViewComponent  -->\n\nLayoutModule->ViewComponent \n\n\n\n\n\nNavigationSidebarModule\n\nNavigationSidebarModule\n\nLayoutModule -->\n\nNavigationSidebarModule->LayoutModule\n\n\n\nResultSidebarModule -->\n\nNavigationSidebarModule->ResultSidebarModule\n\n\n\n\n\nNavigationSidebarComponent \n\nNavigationSidebarComponent \n\nNavigationSidebarComponent  -->\n\nNavigationSidebarModule->NavigationSidebarComponent \n\n\n\nWelcomeModule -->\n\nNavigationSidebarModule->WelcomeModule\n\n\n\nLayoutModule -->\n\nResultSidebarModule->LayoutModule\n\n\n\n\n\nResultSidebarComponent \n\nResultSidebarComponent \n\nResultSidebarComponent  -->\n\nResultSidebarModule->ResultSidebarComponent \n\n\n\n\n\nResultsComponent \n\nResultsComponent \n\nResultsComponent  -->\n\nResultSidebarModule->ResultsComponent \n\n\n\nLayoutModule -->\n\nSimpleDocumentationModule->LayoutModule\n\n\n\n\n\nSimpleDocumentationComponent \n\nSimpleDocumentationComponent \n\nSimpleDocumentationComponent  -->\n\nSimpleDocumentationModule->SimpleDocumentationComponent \n\n\n\nLayoutModule -->\n\nStepbarModule->LayoutModule\n\n\n\n\n\nStepbarComponent \n\nStepbarComponent \n\nStepbarComponent  -->\n\nStepbarModule->StepbarComponent \n\n\n\n\n\nJSatOrbLinkService\n\nJSatOrbLinkService\n\nLayoutModule -->\n\nJSatOrbLinkService->LayoutModule\n\n\n\n\n\nComputeLinkBudgetService\n\nComputeLinkBudgetService\n\nLuplinkModule -->\n\nComputeLinkBudgetService->LuplinkModule\n\n\n\n\n\nSaveLoadService\n\nSaveLoadService\n\nLuplinkModule -->\n\nSaveLoadService->LuplinkModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nNavbarModule -->\n\nNavbarComponent->NavbarModule\n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nNavbarModule->NavbarComponent \n\n\n\n\n\nNavigationSidebarComponent\n\nNavigationSidebarComponent\n\nNavigationSidebarModule -->\n\nNavigationSidebarComponent->NavigationSidebarModule\n\n\n\n\n\nResultSidebarComponent\n\nResultSidebarComponent\n\nResultSidebarModule -->\n\nResultSidebarComponent->ResultSidebarModule\n\n\n\n\n\nResultsComponent\n\nResultsComponent\n\nResultSidebarModule -->\n\nResultsComponent->ResultSidebarModule\n\n\n\nResultSidebarModule -->\n\nSyntheticDrawingModule->ResultSidebarModule\n\n\n\nSynthesisModule -->\n\nSyntheticDrawingModule->SynthesisModule\n\n\n\n\n\nSyntheticDrawingComponent \n\nSyntheticDrawingComponent \n\nSyntheticDrawingComponent  -->\n\nSyntheticDrawingModule->SyntheticDrawingComponent \n\n\n\n\n\nSyntheticDrawingFormComponent \n\nSyntheticDrawingFormComponent \n\nSyntheticDrawingFormComponent  -->\n\nSyntheticDrawingModule->SyntheticDrawingFormComponent \n\n\n\n\n\nSimpleDocumentationComponent\n\nSimpleDocumentationComponent\n\nSimpleDocumentationModule -->\n\nSimpleDocumentationComponent->SimpleDocumentationModule\n\n\n\n\n\nStepbarComponent\n\nStepbarComponent\n\nStepbarModule -->\n\nStepbarComponent->StepbarModule\n\n\n\n\n\nSynthesisComponent\n\nSynthesisComponent\n\nSynthesisModule -->\n\nSynthesisComponent->SynthesisModule\n\n\n\n\n\nSynthesisComponent \n\nSynthesisComponent \n\nSynthesisComponent  -->\n\nSynthesisModule->SynthesisComponent \n\n\n\n\n\nSyntheticDrawingComponent\n\nSyntheticDrawingComponent\n\nSyntheticDrawingModule -->\n\nSyntheticDrawingComponent->SyntheticDrawingModule\n\n\n\n\n\nSyntheticDrawingFormComponent\n\nSyntheticDrawingFormComponent\n\nSyntheticDrawingModule -->\n\nSyntheticDrawingFormComponent->SyntheticDrawingModule\n\n\n\n\n\nSyntheticDrawingFormService\n\nSyntheticDrawingFormService\n\nSyntheticDrawingModule -->\n\nSyntheticDrawingFormService->SyntheticDrawingModule\n\n\n\n\n\nWelcomeComponent\n\nWelcomeComponent\n\nWelcomeModule -->\n\nWelcomeComponent->WelcomeModule\n\n\n\n\n\nWelcomeComponent \n\nWelcomeComponent \n\nWelcomeComponent  -->\n\nWelcomeModule->WelcomeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    9 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APIResult   (projects/.../Results.model.ts)\n                        \n                        \n                            Element   (projects/.../Results.model.ts)\n                        \n                        \n                            Result   (projects/.../Results.model.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-luplink/src/lib/shared/models/Results.model.ts\n    \n    \n        \n            \n                \n                    \n                    APIResult\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Element\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Result\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AntennasUtilsFunctions   (projects/.../Antennas.ts)\n                        \n                        \n                            ENVIRONMENT_TOKEN   (projects/.../dependencies.ts)\n                        \n                        \n                            FORM_TEMPLATE_TOKEN   (projects/.../dependencies.ts)\n                        \n                        \n                            jsoMockData   (projects/.../data.mock.ts)\n                        \n                        \n                            mockEnvironment   (projects/.../mocks.ts)\n                        \n                        \n                            NanospaceConfig   (projects/.../luplink.module.ts)\n                        \n                        \n                            NgxNanospace   (projects/.../luplink.module.ts)\n                        \n                        \n                            readFile   (projects/.../save-load.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-luplink/src/lib/shared/models/Antennas.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AntennasUtilsFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  yagiGainComputation: function (params: any): number {\n    /**\n     * AMSAT uses a LUT for this computation.\n     * There seems to exist Python library that could handle these calculations.\n     * For now, we're interpolating the data used in AMSAT\n     * This function could also call API for complex calculations\n     */\n    console.warn('Yagi Gain Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round(12.316 * length ** 0.2665 * 100) / 100;\n  },\n  yagiOptimumElements: function (params: any): number {\n    console.warn('Yagi Beamwidth Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round((2.632 * length ** 0.2665 + 3.149) * 100) / 100;\n  },\n  yagiBeamwidthComputation: function (params: any): number {\n    console.warn('Yagi Beamwidth Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round(Math.sqrt(40000 / (10 ** (this.yagiGainComputation(params) / 10))) * 100) / 100;\n  },\n}\n                    \n                \n\n\n        \n    \n\n    projects/ngx-luplink/src/lib/shared/dependencies.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENVIRONMENT_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('environment')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FORM_TEMPLATE_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('FormTemplate')\n                    \n                \n\n\n        \n    \n\n    projects/ngx-luplink/src/lib/shared/data.mock.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jsoMockData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  header: {\n    mission: 'Default-mission',\n    celestialBody: 'EARTH',\n    timeStart: '2021-07-22T01:53:36',\n    timeEnd: '2021-07-23T01:53:41',\n    step: '600',\n  },\n  satellites: [\n    {\n      name: 'SunSynchronous',\n      type: 'keplerian',\n      sma: '7000000',\n      ecc: '0',\n      inc: 97.8736,\n      pa: 0,\n      raan: 0,\n      meanAnomaly: 0,\n    },\n    {\n      name: 'CALSPHERE 4A',\n      type: 'tle',\n      line1: '1 01520U 65065H   21200.78530898  .00000048  00000-0  74357-4 0  9995',\n      line2: '2 01520  90.0154 130.0589 0071394 120.1784 294.1357 13.35847446723246',\n    },\n    {\n      name: 'CALSPHERE 2',\n      type: 'tle',\n      line1: '1 00902U 64063E   21200.88552299  .00000048  00000-0  58478-4 0  9991',\n      line2: '2 00902  90.1726  37.8678 0019554  38.2840  29.0114 13.52697507613817',\n    },\n  ],\n  constellations: [],\n  groundStations: [\n    {\n      name: 'aaa',\n      latitude: '1',\n      longitude: '1',\n      altitude: '1',\n      elevation: '1',\n    },\n    {\n      name: 'bbb',\n      latitude: '1',\n      longitude: '1',\n      altitude: '1',\n      elevation: 1,\n    },\n  ],\n  options: {},\n}\n                    \n                \n\n            \n                \n                    This is used by jsatorb-link.service.ts when debugMode is true\nIt allows testing jsatorb link functionnalities directly inside luplink.\n\n                \n            \n\n        \n    \n\n    projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockEnvironment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  debugMode: true,\n  enableNanospace: true,\n  luplinkEndpoint: 'http://localhost:8001',\n  version: 0.0,\n}\n                    \n                \n\n\n        \n    \n\n    projects/ngx-luplink/src/lib/luplink.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NanospaceConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  endpoint: 'https://dcas-nanostar.isae.fr/api/',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NgxNanospace\n                        \n                    \n                \n            \n                \n                    \n                        Default value : NgxNanospaceClientLibModule.forRoot(NanospaceConfig)\n                    \n                \n\n\n        \n    \n\n    projects/ngx-luplink/src/lib/services/save-load.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        readFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (files: FileList | null): Observable =>\n  new Observable((obs) => {\n    // This is a helper function that opens the provided file and passes its content to the provided callback function.\n    if (!files || !files.item(0)) {\n      // this.logger.warn('Error', 'Unexpected error, cannot open imported file');\n      obs.error(new Error('cannot open imported file'));\n      return;\n    }\n\n    const file: File = files.item(0)!;\n    const fileReader = new FileReader();\n\n    fileReader.onerror = (err) => obs.error(err);\n    fileReader.onabort = (err) => obs.error(err);\n    fileReader.onload = () => obs.next(fileReader.result);\n    fileReader.onloadend = () => obs.complete();\n\n    fileReader.readAsText(file, 'utf8');\n  })\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
