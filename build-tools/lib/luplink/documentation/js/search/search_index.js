var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AbstractControlWarn.html",[0,0.865,1,2.404]],["body/interfaces/AbstractControlWarn.html",[0,1.252,1,3.911,2,1.892,3,0.146,4,0.146,5,0.127,6,0.075,7,2.801,8,2.801,9,2.271,10,5.158,11,0.414,12,0.822,13,4.169,14,0.511,15,0.016,16,0.46,17,1.102,18,0.414,19,2.458,20,4.393,21,5.478,22,5.633,23,3.674,24,0.941,25,3.302,26,2.744,27,3.302,28,2.319,29,2.616,30,2.458,31,3.302,32,0.272,33,2.801,34,1.519,35,3.024,36,3.493,37,3.302,38,1.714,39,3.302,40,2.616,41,2.404,42,3.302,43,2.801,44,3.302,45,1.393,46,3.283,47,4.779,48,1.246,49,3.302,50,3.727,51,4.022,52,1.223,53,1.892,54,1.519,55,2.801,56,2.801,57,3.302,58,4.393,59,4.022,60,4.022,61,3.024,62,1.984,63,3.302,64,3.302,65,1.109,66,3.085,67,3.302,68,2.319,69,2.458,70,3.302,71,2.616,72,3.024,73,0.011,74,3.283,75,2.458,76,3.302,77,3.085,78,3.302,79,3.302,80,2.458,81,2.319,82,2.458,83,3.302,84,4.393,85,3.302,86,4.393,87,3.302,88,3.302,89,3.302,90,4.393,91,1.728,92,4.022,93,2.616,94,1.654,95,2.616,96,2.196,97,3.302,98,1.519,99,2.196,100,0.052,101,2.319,102,3.302,103,2.921,104,4.393,105,3.302,106,2.774,107,2.616,108,3.024,109,3.302,110,1.807,111,3.302,112,0.011,113,0.008]],["title/interfaces/Antenna.html",[0,0.865,114,1.587]],["body/interfaces/Antenna.html",[0,0.842,2,1.693,3,0.13,4,0.13,5,0.114,6,0.067,9,2.145,11,0.37,12,0.762,14,0.63,15,0.016,16,0.309,32,0.262,34,2.313,38,1.415,45,1.278,48,1.376,65,1.269,69,2.199,73,0.007,96,1.965,98,1.359,100,0.074,110,2.75,112,0.01,113,0.007,114,3.089,115,2.705,116,1.684,117,1.376,118,5.593,119,5.867,120,1.433,121,3.287,122,3.287,123,0.876,124,1.308,125,2.619,126,4.602,127,0.658,128,4.533,129,1.067,130,5.867,131,2.075,132,1.616,133,0.986,134,3.287,135,0.948,136,3.287,137,3.287,138,4.533,139,3.287,140,3.287,141,2.705,142,4.073,143,3.471,144,3.73,145,2.705,146,2.954,147,5.026,148,2.705,149,2.199,150,2.954,151,2.705,152,3.73,153,1.616,154,2.954,155,2.954,156,1.616,157,1.799,158,2.341,159,1.693,160,2.954,161,4.662,162,4.662,163,5.353,164,4.662,165,2.954,166,4.073,167,3.625,168,2.954,169,2.954,170,2.954,171,2.954,172,2.954,173,3.471,174,2.954,175,2.199,176,2.802,177,3.287,178,2.954,179,2.075,180,1.693,181,3.275,182,2.944,183,2.367,184,2.954,185,3.923,186,2.075,187,3.527,188,2.954,189,2.954,190,1.299,191,3.287,192,2.954,193,2.954,194,2.954,195,3.287,196,3.228,197,3.287,198,2.861,199,2.954,200,3.287,201,3.287,202,4.602,203,5.026,204,5.272,205,4.073,206,4.533,207,4.533,208,3.287,209,3.287,210,4.533,211,2.954,212,3.287,213,3.287,214,2.954,215,3.287,216,4.533,217,1.48]],["title/interfaces/AntennaField.html",[0,0.865,218,2.131]],["body/interfaces/AntennaField.html",[0,1.602,2,2.254,3,0.173,4,0.173,5,0.152,6,0.089,9,1.81,11,0.493,12,0.92,14,0.87,15,0.016,32,0.287,54,2.263,73,0.01,98,2.829,100,0.062,112,0.012,113,0.01,114,2.573,116,2.031,117,1.077,120,1.647,123,1.166,124,1.262,125,1.81,127,0.877,143,2.955,157,1.736,159,2.254,181,2.762,182,3.105,183,2.382,185,2.762,187,3.105,190,1.247,198,2.762,218,3.454,219,3.116,220,4.769,221,4.769,222,4.172,223,3.337,224,2.955,225,3.896,226,3.337,227,3.337,228,2.484,229,3.116,230,2.762,231,2.254,232,2.928,233,1.538,234,3.116,235,2.616,236,3.337,237,2.928,238,3.337,239,3.337,240,3.337,241,3.116,242,3.337,243,3.337,244,3.337,245,3.337,246,3.896,247,3.116,248,3.337,249,2.928,250,3.337,251,1.166,252,2.616,253,1.736,254,3.116,255,2.762,256,3.337,257,1.97,258,3.337]],["title/classes/Antennas.html",[100,0.048,175,2.258]],["body/classes/Antennas.html",[0,0.724,3,0.112,4,0.112,5,0.098,6,0.106,9,1.684,11,0.318,12,0.685,14,0.664,15,0.016,16,0.266,32,0.247,34,2.162,38,1.271,45,1.207,48,1.31,52,0.998,65,1.187,69,1.89,73,0.006,96,1.688,98,1.168,100,0.068,110,2.84,112,0.009,113,0.006,114,3.123,115,2.325,116,1.322,118,2.825,119,4.777,120,0.963,121,2.825,122,2.825,123,0.753,124,1.378,125,2.567,126,4.561,127,0.566,128,4.074,129,0.917,130,6.093,131,1.783,132,1.389,133,0.848,134,2.825,135,0.815,136,2.825,137,2.825,138,4.074,139,2.825,140,2.825,141,2.325,142,4.293,143,3.482,144,3.352,145,2.325,146,2.539,147,4.699,148,2.325,149,1.89,150,2.539,151,2.325,152,3.352,153,1.389,154,2.539,155,2.539,156,1.389,157,1.895,158,2.012,159,1.455,160,2.539,161,4.293,162,4.293,163,5.433,164,4.293,165,2.539,166,3.661,167,3.451,168,2.539,169,2.539,170,2.539,171,2.539,172,2.539,173,3.498,174,2.539,175,2.725,176,3.352,177,4.777,178,3.661,179,2.571,180,2.098,181,3.645,182,3.277,183,2.498,184,3.661,185,4.139,186,2.571,187,3.721,188,3.661,189,3.661,190,1.395,191,4.074,192,3.661,193,3.661,194,3.661,195,4.074,196,3.723,197,4.074,198,3.3,199,3.661,200,4.074,201,4.074,202,5.014,203,5.475,204,5.662,205,4.699,206,5.229,207,5.543,208,4.074,209,4.074,210,5.229,211,3.661,212,4.074,213,4.074,214,3.661,215,4.074,216,5.229,217,1.833,259,1.328,260,0.878,261,3.26,262,3.26,263,3.26]],["title/components/CardComponent.html",[264,0.594,265,1.339]],["body/components/CardComponent.html",[3,0.144,4,0.144,5,0.126,6,0.13,11,0.408,12,0.815,14,0.81,15,0.016,16,0.548,18,0.408,32,0.162,46,2.898,48,1.378,52,1.217,73,0.011,94,2.622,100,0.052,112,0.011,113,0.008,120,1.377,123,1.553,124,1.047,129,1.892,180,2.497,190,1.217,233,2.421,251,1.292,260,1.148,264,0.96,265,2.312,266,1.707,267,1.707,268,1.707,269,3.63,270,1.634,271,2.624,272,7.006,273,2.182,274,6.3,275,2.182,276,5.595,277,5.46,278,6.247,279,1.242,280,6.724,281,3.243,282,6.3,283,6.3,284,2.937,285,4.189,286,4.189,287,4.189,288,4.189,289,0.858,290,0.93,291,4.189,292,4.189,293,2.428,294,2.169,295,2.169,296,2.428,297,4.849,298,3.63,299,3.63,300,4.189,301,4.849,302,3.696,303,3.63,304,2.767,305,4.189,306,3.63,307,3.63,308,3.63,309,4.189,310,4.189,311,4.189,312,6.3,313,5.595,314,4.794,315,5.248,316,4.849,317,4.849,318,4.189,319,4.189,320,2.987,321,3.262,322,4.189,323,5.595,324,1.707,325,2.28,326,2.091,327,1.707,328,2.74,329,1.707,330,1.193,331,1.707,332,1.44,333,2.28,334,1.328,335,1.328,336,1.328,337,1.707,338,1.44,339,1.707,340,1.328,341,1.707,342,1.44,343,1.328,344,2.28,345,1.501,346,1.707,347,1.44,348,1.44,349,1.634,350,1.707,351,1.383,352,1.707,353,1.44,354,1.707,355,1.44,356,1.704,357,1.707,358,1.44,359,1.44,360,1.44,361,1.707,362,1.44,363,1.707,364,1.707,365,1.707]],["title/modules/CardModule.html",[366,1.187,367,1.738]],["body/modules/CardModule.html",[3,0.195,4,0.195,5,0.171,6,0.1,15,0.016,16,0.613,18,0.555,32,0.22,73,0.011,100,0.07,112,0.013,113,0.011,265,2.784,367,3.517,368,2.039,369,2.538,370,4.93,371,4.93,372,4.93,373,2.767,374,2.219,375,1.956,376,5.689,377,2.767,378,2.335,379,2.242,380,2.767,381,2.219,382,5.689,383,3.34,384,2.663,385,2.663,386,1.733]],["title/injectables/ComputeLinkBudgetService.html",[17,1.013,387,1.66]],["body/injectables/ComputeLinkBudgetService.html",[3,0.115,4,0.115,5,0.101,6,0.132,11,0.326,12,0.698,14,0.881,15,0.016,16,0.577,17,1.245,18,0.326,26,2.811,32,0.129,45,1.22,48,1.483,50,3.165,52,1.217,53,1.493,56,2.211,65,0.658,73,0.012,74,2.897,75,2.777,80,1.94,91,1.364,100,0.041,112,0.009,113,0.006,116,0.942,117,1.302,120,1.146,123,1.106,127,0.581,129,0.942,132,2.384,133,1.455,135,1.526,156,3.154,158,2.065,159,1.493,176,1.566,179,2.62,190,1.217,229,2.065,235,1.733,260,1.179,279,1.063,289,1.324,290,1.063,330,1.302,387,2.041,388,1.733,389,6.48,390,2.571,391,2.9,392,5.595,393,4.79,394,4.79,395,5.595,396,3.165,397,6.107,398,2.026,399,4.151,400,6.107,401,4.79,402,2.065,403,6.923,404,1.8,405,4.79,406,1.718,407,1.646,408,3.347,409,5.595,410,3.347,411,4.79,412,3.73,413,3.482,414,3.54,415,3.347,416,3.873,417,4.79,418,6.107,419,3.347,420,3.347,421,3.347,422,3.347,423,4.756,424,4.79,425,3.347,426,3.347,427,3.347,428,1.68,429,3.347,430,1.733,431,2.606,432,3.347,433,1.566,434,3.347,435,3.347,436,1.493,437,1.426,438,2.9,439,3.347,440,1.566,441,1.566,442,1.831,443,1.831,444,3.347,445,3.347,446,3.768,447,3.347,448,3.347,449,2.9,450,1.646,451,3.347,452,2.9,453,2.9,454,3.347,455,3.347,456,3.347,457,2.9,458,2.065,459,2.211,460,3.347,461,2.606,462,3.347,463,3.347,464,4.848,465,3.347,466,3.243,467,4.79,468,2.065,469,2.065,470,3.347,471,4.79,472,3.347,473,2.606,474,3.347,475,2.9,476,4.79,477,2.211,478,3.347,479,3.347,480,3.347,481,1.566,482,2.386,483,3.347,484,5.595,485,3.347,486,3.347,487,3.347,488,4.79,489,3.347,490,3.347,491,3.347,492,1.831,493,2.9,494,3.347,495,3.347,496,2.9,497,1.94,498,2.9,499,5.595,500,3.347,501,2.065,502,3.347,503,2.606,504,1.94,505,1.94,506,1.831,507,1.733,508,3.347,509,3.347,510,3.347,511,3.347,512,2.386,513,3.347,514,3.347,515,4.79,516,3.347,517,2.211,518,4.151,519,4.79,520,4.79,521,3.347,522,4.79,523,3.347,524,3.347,525,2.9,526,4.79,527,2.211,528,2.9,529,3.347,530,3.347,531,3.347,532,2.065,533,3.347,534,3.347,535,3.347,536,2.9,537,3.347,538,3.347,539,3.347]],["title/classes/CustomRouteReuseStrategy.html",[100,0.048,540,2.778]],["body/classes/CustomRouteReuseStrategy.html",[3,0.163,4,0.163,5,0.142,6,0.134,11,0.462,12,0.883,14,0.878,15,0.016,16,0.494,18,0.462,32,0.183,36,2.113,45,1.33,52,0.857,73,0.009,74,2.452,96,3.651,100,0.058,112,0.012,113,0.009,117,1.554,123,1.722,135,1.183,153,2.017,190,0.857,253,2.084,259,1.929,260,1.187,279,1.345,289,1.492,290,1.345,330,1.554,398,1.957,406,2.05,428,1.576,540,4.322,541,4.103,542,5.794,543,6.686,544,5.253,545,6.062,546,6.062,547,6.062,548,6.686,549,4.72,550,4.734,551,6.062,552,8.091,553,4.734,554,5.675,555,7.455,556,6.062,557,4.734,558,6.062,559,4.734,560,6.062,561,6.686,562,4.734,563,4.734,564,6.062,565,4.734,566,4.734,567,2.216,568,4.734,569,6.062,570,4.103,571,4.103,572,4.734,573,4.734,574,4.734,575,4.734,576,4.322,577,4.734,578,4.734,579,4.734,580,4.734,581,4.734,582,4.734,583,4.734]],["title/injectables/CustomValidators.html",[17,1.013,101,2.131]],["body/injectables/CustomValidators.html",[0,1.207,1,3.355,3,0.138,4,0.138,5,0.121,6,0.122,7,4.563,8,2.653,9,1.949,10,4.925,11,0.392,12,0.792,13,2.477,14,0.743,15,0.016,16,0.443,17,1.044,18,0.392,19,2.327,20,5.147,21,5.378,22,5.846,23,3.574,24,0.891,25,3.127,26,2.694,27,3.127,28,2.196,29,2.477,30,2.327,31,3.127,32,0.267,33,2.653,34,1.439,35,2.863,36,3.466,37,3.127,38,1.668,39,3.127,40,2.477,41,2.317,42,3.127,43,2.653,44,3.127,45,1.374,46,3.194,47,4.704,48,1.476,49,3.127,50,3.593,51,3.878,52,1.318,53,1.792,54,1.439,55,2.653,56,2.653,57,4.802,58,4.235,59,3.878,60,3.878,61,2.863,62,1.879,63,4.802,64,3.127,65,1.069,66,2.974,67,3.127,68,2.196,69,2.327,70,3.127,71,2.477,72,2.863,73,0.01,74,3.194,75,2.327,76,3.127,77,2.974,78,3.127,79,3.127,80,2.327,81,2.196,82,2.327,83,3.127,84,4.235,85,3.127,86,4.235,87,3.127,88,3.127,89,3.127,90,4.235,91,1.636,92,3.878,93,2.477,94,1.566,95,2.477,96,2.079,97,3.127,98,1.439,99,2.079,100,0.049,101,2.974,102,3.127,103,2.816,104,4.235,105,3.127,106,2.674,107,2.477,108,2.863,109,3.127,110,1.711,111,3.127,112,0.01,113,0.008,127,0.944,190,1.116,260,1.053,388,2.079,584,4.015,585,4.015,586,4.015,587,4.015]],["title/classes/DrawingDefault.html",[100,0.048,588,2.404]],["body/classes/DrawingDefault.html",[3,0.137,4,0.137,5,0.12,6,0.116,11,0.39,12,0.789,14,0.795,15,0.016,16,0.326,32,0.155,38,1.923,52,1.113,62,2.536,69,2.315,73,0.008,100,0.067,110,3.326,112,0.01,113,0.008,120,0.818,125,1.431,129,1.855,135,1.895,157,1.373,173,4.395,176,3.509,180,3.483,183,2.589,190,1.194,224,3.653,259,1.627,260,0.979,264,1.195,356,1.216,359,1.373,366,1.216,588,3.343,589,4.069,590,3.461,591,6.15,592,6.15,593,3.794,594,1.869,595,3.343,596,4.696,597,5.565,598,4.816,599,5.536,600,6.595,601,4.696,602,5.419,603,6.595,604,4.696,605,5.419,606,4.696,607,5.715,608,4.696,609,5.419,610,5.715,611,3.58,612,6.595,613,4.696,614,5.419,615,5.419,616,6.595,617,4.696,618,5.419,619,5.419,620,3.141,621,4.696,622,4.696,623,3.994,624,2.639,625,4.696,626,5.419,627,2.418,628,3.994,629,3.994,630,2.964,631,2.848,632,3.11,633,1.782]],["title/interfaces/Field.html",[0,0.865,98,1.396]],["body/interfaces/Field.html",[0,1.573,2,2.145,3,0.165,4,0.165,5,0.144,6,0.085,9,1.722,11,0.469,12,0.892,14,0.928,15,0.016,32,0.283,54,2.193,73,0.009,98,2.853,100,0.059,112,0.012,113,0.009,114,2.889,116,2.106,117,1.622,120,1.648,123,1.11,124,1.201,125,2.413,127,0.834,143,2.864,157,1.653,159,2.145,181,2.629,182,3.01,183,2.34,185,3.878,187,3.6,190,1.355,198,2.629,218,2.629,219,2.966,220,3.175,221,3.175,222,4.043,223,3.175,224,2.864,225,3.776,226,3.175,227,3.175,228,2.364,229,2.966,230,2.629,231,2.145,232,2.786,233,1.464,234,2.966,235,3.672,236,3.175,237,2.786,238,3.175,239,4.684,240,4.684,241,2.966,242,3.175,243,3.175,244,3.175,245,3.175,246,3.776,247,2.966,248,3.175,249,2.786,250,3.175,251,1.11,252,2.489,253,1.653,254,2.966,255,2.629,256,3.175,257,1.875,258,3.175]],["title/interfaces/Form.html",[0,0.865,116,1.096]],["body/interfaces/Form.html",[0,1.567,2,2.12,3,0.163,4,0.163,5,0.143,6,0.084,9,1.703,11,0.463,12,0.885,14,0.935,15,0.016,32,0.282,54,2.177,73,0.009,98,2.802,100,0.059,112,0.012,113,0.009,114,2.476,116,2.053,117,1.695,120,1.667,123,1.547,124,1.188,125,1.703,127,0.825,143,3.414,157,1.634,159,2.12,181,2.599,182,3.588,183,1.569,185,2.599,187,2.988,190,1.213,196,4.133,198,3.861,218,2.599,219,2.932,220,3.14,221,3.14,222,4.014,223,3.14,224,2.844,225,3.749,226,3.14,227,3.14,228,2.337,229,2.932,230,2.599,231,2.12,232,2.755,233,1.447,234,2.932,235,2.461,236,3.14,237,2.755,238,3.14,239,3.14,240,3.14,241,2.932,242,3.14,243,3.14,244,3.14,245,3.14,246,4.502,247,4.356,248,3.14,249,4.092,250,4.664,251,1.098,252,2.461,253,1.634,254,2.932,255,2.599,256,3.14,257,1.853,258,3.14]],["title/components/FormComponent.html",[264,0.594,332,1.339]],["body/components/FormComponent.html",[1,1.197,3,0.067,4,0.067,5,0.058,6,0.13,10,3.272,11,0.189,12,0.459,13,1.946,14,0.856,15,0.016,16,0.484,18,0.189,23,1.124,24,0.431,26,2.652,32,0.075,34,1.644,36,2.544,38,1.078,41,1.698,45,0.866,46,2.615,47,3.574,48,1.296,52,1.274,54,1.428,60,1.383,61,2.249,65,1.318,66,2.761,68,1.061,72,2.249,73,0.008,80,2.66,81,1.061,82,2.31,91,1.285,94,2.224,96,2.064,98,2.262,99,1.005,100,0.024,108,1.383,110,1.344,112,0.006,113,0.004,116,1.938,117,1.077,120,1.293,123,1.317,124,1.262,127,0.337,129,1.121,131,1.061,132,2.151,133,1.313,135,1.147,149,2.31,153,1.344,157,1.37,158,1.197,180,0.866,183,1.515,186,2.179,190,1.193,196,2.458,214,1.511,217,1.554,218,2.761,224,0.908,230,1.061,231,0.866,233,2.144,251,0.728,252,2.064,260,1.178,264,0.905,265,0.667,266,0.79,267,0.79,268,0.79,270,0.757,271,2.323,273,1.23,275,1.23,279,0.7,281,1.828,289,1.108,290,1.201,293,1.124,294,1.005,295,1.005,296,1.124,302,2.083,303,1.681,321,1.511,324,0.79,325,1.285,326,1.178,327,0.79,328,1.87,329,0.79,330,1.216,331,0.79,332,1.578,333,1.285,334,0.615,335,0.615,336,1,337,0.79,338,0.667,339,0.79,340,0.615,341,0.79,342,0.667,343,0.615,344,1.285,345,0.695,346,0.79,347,0.667,348,0.667,349,0.757,350,0.79,351,0.64,352,0.79,353,0.667,354,0.79,355,0.667,356,0.96,357,0.79,358,0.667,359,0.667,360,0.667,361,0.79,362,0.667,363,0.79,364,0.79,365,0.79,386,0.591,390,1.37,398,1.343,404,1.482,406,1.42,414,1.828,428,1.407,436,0.866,446,1.197,453,1.681,466,3.56,468,1.197,469,3.338,497,1.124,506,1.061,512,1.383,525,1.681,527,1.282,544,1.681,594,0.908,633,1.407,634,1.681,635,3.453,636,2.733,637,3.984,638,3.984,639,3.984,640,1.946,641,3.984,642,5.049,643,3.103,644,3.154,645,3.154,646,4.589,647,3.154,648,4.589,649,5.41,650,3.984,651,2.841,652,3.984,653,3.154,654,3.984,655,2.249,656,1.681,657,1.959,658,2.148,659,3.154,660,3.154,661,1.94,662,1.94,663,1.94,664,4.589,665,1.94,666,3.154,667,1.94,668,3.154,669,1.94,670,1.681,671,1.94,672,3.154,673,1.94,674,1.94,675,1.94,676,1.94,677,3.984,678,1.94,679,1.94,680,1.94,681,2.11,682,1.94,683,1.94,684,1.94,685,3.858,686,3.931,687,1.94,688,1.94,689,1.94,690,1.94,691,0.908,692,1.197,693,1.511,694,1.197,695,1.383,696,1.282,697,1.94,698,1.94,699,1.511,700,1.124,701,1.681,702,1.383,703,1.94,704,1.197,705,1.94,706,3.154,707,1.94,708,1.94,709,1.94,710,6.46,711,3.154,712,1.94,713,5.701,714,3.077,715,1.778,716,2.841,717,3.272,718,2.66,719,2.831,720,1.94,721,4.589,722,1.94,723,1.94,724,1.94,725,3.154,726,1.681,727,1.94,728,1.94,729,1.511,730,1.511,731,1.383,732,1.94,733,1.282,734,1.94,735,1.94,736,1.94,737,1.511,738,1.94,739,1.511,740,1.94,741,3.984,742,1.94,743,3.984,744,3.977,745,5.049,746,1.511,747,1.511,748,1.197,749,1.94,750,1.94,751,1.94,752,1.94,753,1.94,754,1.94,755,1.94,756,1.94,757,1.94,758,1.94,759,1.94,760,1.511,761,1.94,762,5.049,763,1.94,764,1.94,765,5.41,766,1.94,767,1.282,768,1.94,769,2.733,770,1.94,771,1.124,772,1.94,773,2.456,774,2.249,775,1.681,776,1.383,777,1.511,778,1.94,779,1.94,780,3.154,781,1.94,782,3.154,783,4.375,784,3.984,785,5.701,786,3.154,787,3.453,788,3.453,789,3.103,790,3.154,791,3.984,792,3.925,793,1.94,794,1.94,795,1.94,796,1.681,797,1.94,798,3.154,799,3.154,800,1.681,801,3.154,802,1.94,803,1.94,804,1.94,805,1.681,806,2.733,807,1.94,808,1.94,809,1.94,810,1.94,811,1.94,812,3.154,813,1.94,814,1.94,815,1.282,816,1.383,817,1.94,818,1.511,819,1.94,820,1.94,821,1.197,822,1.94,823,1.94,824,1.681,825,1.383,826,1.94,827,1.94,828,1.94,829,1.94,830,1.94,831,2.456,832,1.511,833,1.94,834,3.984,835,1.94,836,1.94,837,4.589,838,1.94,839,1.94,840,2.179,841,3.103,842,1.383,843,3.103,844,1.94,845,1.94,846,1.94,847,1.94,848,1.94,849,1.94,850,1.94,851,1.94,852,1.94,853,1.681,854,2.733,855,3.574,856,1.94,857,1.94,858,1.94,859,1.94,860,1.681,861,1.94,862,3.103,863,1.94,864,1.94,865,1.94,866,1.94,867,1.94,868,1.94,869,1.681,870,1.94,871,1.94,872,1.94,873,1.94,874,1.681,875,1.94,876,0.908,877,1.511,878,1.94,879,1.94,880,1.94,881,1.061,882,3.154,883,3.154,884,3.154,885,1.94,886,1.511,887,1.681,888,1.94,889,1.383,890,3.154,891,1.94,892,1.681,893,1.681,894,1.94,895,2.733,896,1.511,897,3.154,898,1.94,899,1.94]],["title/classes/FormControlWarn.html",[100,0.048,900,2.778]],["body/classes/FormControlWarn.html",[3,0.114,4,0.114,5,0.168,6,0.084,9,1.71,11,0.325,12,0.695,13,3.442,14,0.401,15,0.016,16,0.576,17,1.241,18,0.325,19,3.531,23,2.766,24,0.739,28,1.821,29,2.054,30,3.233,32,0.185,34,1.999,36,1.485,38,1.291,41,1.419,43,2.199,45,1.334,48,1.503,52,0.864,53,1.485,54,1.71,65,1.359,66,3.051,73,0.006,74,2.889,91,1.356,94,1.298,98,2.183,100,0.059,101,3.051,107,2.944,112,0.009,113,0.006,114,1.944,116,2.12,120,1.416,123,1.407,124,1.193,127,0.578,129,1.343,132,1.419,133,1.45,135,1.193,149,1.93,153,1.419,156,1.419,157,1.145,159,1.485,183,1.099,187,1.637,190,0.603,237,1.93,249,3.531,251,0.769,259,1.356,260,0.53,264,0.727,284,1.356,289,0.682,290,1.059,330,1.189,390,1.145,396,2.199,398,1.888,404,0.866,413,2.347,414,3.233,416,3.051,428,1.797,430,1.724,433,1.558,436,1.485,441,1.558,442,1.821,443,1.821,446,2.054,477,2.199,492,2.61,501,2.054,532,2.054,549,2.592,632,2.592,633,1.485,643,2.592,657,1.637,658,2.233,681,2.981,685,2.374,695,2.374,699,2.592,700,1.93,702,2.374,715,1.485,731,2.374,733,2.199,747,2.592,748,2.054,767,2.199,771,1.93,773,2.592,774,2.374,776,2.374,831,3.716,832,4.344,841,2.592,842,2.374,843,4.344,855,4.671,886,2.592,900,3.403,901,2.592,902,3.329,903,2.885,904,2.592,905,1.93,906,3.685,907,2.885,908,2.592,909,2.885,910,2.592,911,2.885,912,2.885,913,2.592,914,2.885,915,2.885,916,2.885,917,2.885,918,2.885,919,2.885,920,2.885,921,2.592,922,2.885,923,4.135,924,2.885,925,3.403,926,2.199,927,2.592,928,2.885,929,3.403,930,2.885,931,2.885,932,2.885,933,2.374,934,2.885,935,2.885,936,1.93,937,2.885,938,2.885,939,2.885,940,2.885,941,2.885,942,2.885,943,2.885,944,2.885,945,2.885,946,2.885,947,2.885,948,2.885,949,2.885,950,2.054,951,2.592,952,2.885,953,2.885,954,4.135,955,2.885,956,2.885,957,2.885,958,2.885,959,2.885,960,2.374,961,2.374,962,2.885,963,2.592,964,2.885,965,1.821,966,2.885,967,2.885,968,2.885,969,2.885,970,2.766,971,2.885,972,2.885,973,2.592,974,2.885,975,1.93,976,2.374,977,2.885,978,2.885,979,2.885,980,2.885,981,2.885,982,2.885,983,2.885,984,4.135,985,2.885,986,2.885,987,2.885,988,2.885,989,2.592,990,2.885,991,2.885,992,2.885,993,2.885,994,2.885,995,1.821,996,2.885,997,2.885,998,3.403,999,4.135,1000,2.885,1001,2.885,1002,2.885,1003,2.885,1004,2.592,1005,2.592,1006,3.716,1007,3.716,1008,2.885,1009,2.592,1010,2.592,1011,2.592,1012,2.885,1013,2.885,1014,2.592,1015,2.885,1016,4.135,1017,2.885,1018,2.885,1019,2.885,1020,2.885,1021,2.885,1022,2.885,1023,2.885,1024,2.885,1025,2.885,1026,4.135,1027,2.885,1028,2.885,1029,2.885]],["title/modules/FormModule.html",[366,1.187,1030,2.131]],["body/modules/FormModule.html",[3,0.179,4,0.179,5,0.157,6,0.092,15,0.016,16,0.643,18,0.509,24,1.158,32,0.202,73,0.01,98,1.87,100,0.064,101,2.854,112,0.012,113,0.01,133,1.987,332,2.755,368,1.87,369,2.408,373,2.626,374,2.035,375,1.794,377,2.626,378,2.216,379,2.127,380,2.626,381,2.035,383,3.169,384,2.442,385,2.442,386,1.963,404,1.987,436,2.328,696,3.447,904,4.063,1030,4.399,1031,4.522,1032,4.522,1033,4.522,1034,4.522,1035,4.522,1036,2.803,1037,5.218,1038,2.875,1039,2.442,1040,2.328,1041,4.595,1042,5.218,1043,2.566,1044,3.22]],["title/injectables/FormService.html",[17,1.013,404,1.013]],["body/injectables/FormService.html",[3,0.091,4,0.091,5,0.147,6,0.132,9,0.948,11,0.258,12,0.587,13,1.633,14,0.869,15,0.016,16,0.539,17,1.047,18,0.258,19,2.826,23,2.334,24,0.587,28,1.447,29,1.633,30,3.158,32,0.156,34,1.747,36,1.181,38,1.089,41,1.128,43,1.748,45,1.249,48,1.58,52,1.252,53,1.181,54,1.443,65,1.263,66,2.667,73,0.005,74,2.525,91,1.078,94,1.032,98,1.953,100,0.05,101,3.512,107,2.485,112,0.008,113,0.008,114,1.641,116,2.1,117,1.317,120,1.569,123,1.528,124,1.219,127,0.699,129,1.533,132,2.077,133,1.524,135,1.219,149,1.534,153,1.128,156,1.716,157,0.91,159,1.181,182,1.301,183,0.873,187,1.301,190,1.227,237,1.534,249,3.58,251,0.611,260,1.189,264,0.614,279,0.894,284,1.986,289,1.439,290,1.371,330,1.499,388,1.37,390,1.676,396,2.661,398,1.879,404,1.047,406,1.737,412,2.061,413,2.397,414,3.158,416,3.207,428,1.762,430,1.37,433,1.238,436,1.181,441,1.238,442,1.447,443,1.447,446,1.633,477,1.748,492,2.203,501,1.633,532,1.633,549,2.061,632,3.136,633,1.181,640,2.485,643,3.136,657,2.397,658,2.55,670,2.293,681,3.021,685,1.887,695,1.887,699,2.061,700,1.534,702,1.887,715,1.181,731,1.887,733,1.748,747,2.061,748,2.485,767,1.748,771,1.534,773,2.061,774,1.887,776,2.872,831,3.136,832,3.796,841,2.061,842,1.887,843,4.566,855,4.372,886,2.061,900,1.887,901,2.061,903,2.293,904,2.061,905,1.534,906,3.873,907,3.49,908,3.136,909,3.49,910,2.061,911,2.293,912,2.293,913,2.061,914,2.293,915,4.225,916,3.49,917,4.225,918,4.225,919,2.293,920,4.225,921,2.061,922,4.722,923,3.49,924,3.49,925,2.872,926,1.748,927,2.061,928,2.293,929,2.872,930,2.293,931,2.293,932,2.293,933,1.887,934,2.293,935,2.293,936,1.534,937,2.293,938,2.293,939,2.293,940,2.293,941,2.293,942,2.293,943,3.49,944,2.293,945,4.225,946,2.293,947,2.293,948,3.49,949,4.225,950,1.633,951,2.061,952,2.293,953,2.293,954,3.49,955,2.293,956,2.293,957,2.293,958,2.293,959,3.49,960,1.887,961,1.887,962,2.293,963,2.061,964,2.293,965,1.447,966,2.293,967,2.293,968,2.293,969,2.293,970,3.836,971,2.293,972,2.293,973,2.061,974,2.293,975,3.158,976,1.887,977,2.293,978,2.293,979,2.293,980,2.293,981,2.293,982,2.293,983,2.293,984,3.49,985,2.293,986,2.293,987,2.293,988,3.49,989,2.061,990,2.293,991,2.293,992,2.293,993,2.293,994,2.293,995,1.447,996,2.293,997,2.293,998,2.872,999,3.49,1000,2.293,1001,2.293,1002,2.293,1003,2.293,1004,2.061,1005,2.061,1006,3.136,1007,3.136,1008,2.293,1009,2.061,1010,2.061,1011,2.061,1012,2.293,1013,2.293,1014,2.061,1015,2.293,1016,3.49,1017,2.293,1018,2.293,1019,2.293,1020,2.293,1021,2.293,1022,2.293,1023,2.293,1024,2.293,1025,2.293,1026,3.49,1027,2.293,1028,2.293,1029,2.293,1045,4.027,1046,4.027,1047,4.027,1048,3.49,1049,4.027,1050,2.646,1051,4.027,1052,2.646,1053,2.646,1054,2.646,1055,2.646,1056,2.646,1057,2.646,1058,2.646,1059,2.646,1060,2.646,1061,2.646,1062,2.646,1063,2.646,1064,2.646,1065,2.646,1066,2.646]],["title/classes/FormsTemplate.html",[100,0.048,640,2.404]],["body/classes/FormsTemplate.html",[3,0.044,4,0.044,5,0.038,6,0.112,11,0.124,12,0.323,14,0.793,15,0.016,16,0.181,32,0.049,38,1.178,40,4.61,52,1.129,62,1.642,66,1.212,69,0.739,73,0.002,74,1.147,92,2.502,96,2.256,98,0.457,99,0.661,100,0.016,103,2.974,110,2.447,112,0.004,113,0.002,114,2.542,116,1.997,124,1.089,126,3.532,135,1.559,143,3.285,153,0.944,157,0.762,159,0.989,173,3.129,175,0.739,176,3.537,179,0.698,181,3.599,182,3.451,183,2.643,184,3.857,185,4.376,186,2.709,187,3.946,188,3.857,189,3.857,190,1.459,192,3.857,193,5.002,194,4.858,196,3.056,198,2.709,199,2.732,202,2.502,204,5.981,205,2.732,211,4.471,217,1.932,233,0.388,246,4.276,247,3.849,251,0.512,252,1.521,255,1.212,257,2.346,259,0.52,260,0.994,302,2.318,507,1.817,571,1.105,610,3.04,640,1.367,714,2.423,716,1.58,717,1.58,718,2.033,719,2.165,733,1.464,769,3.04,792,2.318,853,1.92,862,0.993,881,1.212,936,2.033,950,1.367,963,0.993,965,0.698,1067,1.105,1068,2.937,1069,2.937,1070,2.937,1071,2.937,1072,2.937,1073,2.937,1074,2.937,1075,2.937,1076,2.937,1077,2.937,1078,2.937,1079,2.937,1080,2.937,1081,2.215,1082,2.215,1083,1.275,1084,3.508,1085,4.292,1086,2.974,1087,3.508,1088,3.508,1089,5.873,1090,3.508,1091,3.508,1092,3.508,1093,3.04,1094,3.04,1095,3.508,1096,3.508,1097,3.508,1098,4.953,1099,5.406,1100,1.275,1101,3.532,1102,4.292,1103,4.953,1104,4.953,1105,4.953,1106,4.953,1107,3.508,1108,5.742,1109,3.508,1110,3.508,1111,3.508,1112,3.508,1113,3.508,1114,3.508,1115,3.508,1116,3.508,1117,3.508,1118,3.508,1119,3.508,1120,3.04,1121,1.275,1122,3.508,1123,2.502,1124,4.692,1125,2.732,1126,4.953,1127,4.953,1128,1.275,1129,2.732,1130,3.508,1131,4.678,1132,4.976,1133,5.398,1134,3.849,1135,2.215,1136,3.508,1137,3.508,1138,2.215,1139,3.508,1140,4.292,1141,3.04,1142,3.508,1143,3.508,1144,1.275,1145,3.508,1146,2.732,1147,3.508,1148,3.508,1149,2.215,1150,1.275,1151,3.508,1152,3.972,1153,3.508,1154,3.508,1155,3.508,1156,3.508,1157,3.508,1158,3.508,1159,3.508,1160,3.508,1161,3.508,1162,3.508,1163,1.275,1164,1.275,1165,2.215,1166,1.725,1167,1.92,1168,2.215,1169,2.215,1170,2.215,1171,1.92,1172,2.215,1173,2.215,1174,2.215,1175,2.215,1176,1.275,1177,1.92,1178,1.92,1179,1.92,1180,1.92,1181,1.92,1182,1.92,1183,1.92,1184,1.92,1185,1.92,1186,1.92,1187,1.92,1188,1.92,1189,1.92,1190,1.275,1191,1.275,1192,2.215,1193,3.508,1194,2.215,1195,2.215,1196,1.275,1197,1.275,1198,2.215,1199,1.367,1200,2.215,1201,2.215,1202,1.464,1203,2.215,1204,1.92,1205,2.215,1206,2.215,1207,2.215,1208,1.275,1209,2.215,1210,1.275,1211,2.215,1212,2.215,1213,1.275,1214,1.275,1215,1.275,1216,0.909,1217,1.275,1218,1.275,1219,1.275,1220,1.275]],["title/classes/HelperFunctions.html",[100,0.048,692,2.404]],["body/classes/HelperFunctions.html",[3,0.12,4,0.12,5,0.105,6,0.126,11,0.342,12,0.722,14,0.846,15,0.016,32,0.136,38,1.898,45,1.289,48,1.294,52,1.298,62,1.642,65,1.343,73,0.007,100,0.071,112,0.009,113,0.007,117,1.33,120,1.568,125,2.905,152,2.502,173,3.616,176,3.706,190,1.191,202,3.532,203,3.857,217,2.239,259,1.429,260,1.118,279,1.099,289,1.278,330,1.33,406,1.755,469,2.165,625,3.04,633,1.565,692,3.056,694,3.056,715,1.565,716,4.094,717,4.094,718,4.068,719,4.692,776,3.532,787,4.293,788,4.976,789,2.732,792,3.793,876,3.354,910,3.857,1125,3.857,1166,3.857,1171,4.293,1199,2.165,1221,6.212,1222,3.04,1223,4.976,1224,5.742,1225,5.742,1226,4.953,1227,4.953,1228,4.953,1229,4.953,1230,4.953,1231,4.953,1232,3.508,1233,4.953,1234,3.508,1235,4.953,1236,3.508,1237,4.953,1238,4.953,1239,7.168,1240,3.508,1241,4.953,1242,3.508,1243,4.953,1244,5.742,1245,3.508,1246,3.508,1247,4.976,1248,4.976,1249,4.953,1250,6.58,1251,3.508,1252,3.508,1253,4.953,1254,4.953,1255,3.508,1256,4.953,1257,4.953,1258,5.406,1259,4.953,1260,4.953,1261,3.857,1262,3.508,1263,3.508,1264,3.508,1265,2.502,1266,3.508,1267,4.976,1268,3.508,1269,3.508,1270,6.238,1271,4.953,1272,4.953,1273,3.508,1274,2.318,1275,3.508,1276,3.508,1277,3.508,1278,3.508,1279,3.04,1280,3.508,1281,3.508,1282,2.502,1283,3.508,1284,3.508,1285,3.508,1286,3.508,1287,3.508,1288,3.508,1289,4.953,1290,3.508,1291,4.953,1292,3.508,1293,2.732,1294,3.508,1295,3.508,1296,3.508,1297,3.508,1298,3.508,1299,3.508]],["title/components/JSatOrbLinkComponent.html",[264,0.594,334,1.235]],["body/components/JSatOrbLinkComponent.html",[3,0.131,4,0.131,5,0.114,6,0.129,11,0.371,12,0.764,14,0.779,15,0.016,16,0.605,18,0.371,19,3.93,24,0.845,32,0.147,38,1.419,48,1.438,52,0.95,73,0.01,100,0.047,112,0.01,113,0.007,117,0.812,123,1.211,124,0.952,127,0.661,129,1.476,132,2.557,133,1.681,135,0.952,148,3.74,156,2.235,190,0.95,233,2.395,251,1.211,253,1.804,255,2.083,260,1.144,264,0.914,265,1.31,266,1.552,267,1.552,268,1.552,270,1.486,271,2.595,273,2.046,275,2.046,279,1.164,289,1.074,290,1.332,324,1.552,325,2.137,326,1.96,327,1.552,328,2.634,329,1.552,330,1.279,331,1.552,332,1.31,333,2.137,334,2.049,335,2.319,336,2.551,337,1.552,338,1.31,339,1.552,340,1.207,341,1.552,342,1.31,343,1.207,344,2.137,345,1.365,346,1.552,347,1.31,348,1.31,349,1.486,350,1.552,351,1.257,352,1.552,353,1.31,354,1.552,355,1.31,356,1.598,357,1.552,358,1.31,359,1.31,360,1.31,361,1.552,362,1.31,363,1.552,364,1.552,365,1.552,398,1.535,406,1.072,428,1.822,436,1.7,492,2.869,681,2.34,691,2.808,1048,5.2,1300,5.696,1301,4.833,1302,3.301,1303,6,1304,5.246,1305,6,1306,4.672,1307,6.465,1308,6.465,1309,3.179,1310,3.809,1311,4.183,1312,4.546,1313,2.951,1314,3.809,1315,3.809,1316,3.809,1317,4.835,1318,5.28,1319,3.809,1320,3.809,1321,3.809,1322,3.809,1323,2.35,1324,2.35,1325,3.301,1326,2.966,1327,3.809,1328,2.966,1329,6,1330,3.809,1331,3.809,1332,3.809,1333,3.809,1334,3.301,1335,3.301,1336,3.301,1337,3.809,1338,3.809,1339,3.809,1340,3.809,1341,3.809,1342,4.546,1343,4.546,1344,4.672,1345,3.74,1346,3.74,1347,5.246,1348,5.246,1349,3.301,1350,3.809,1351,3.809]],["title/injectables/JSatOrbLinkService.html",[17,1.013,1311,2.404]],["body/injectables/JSatOrbLinkService.html",[3,0.137,4,0.137,5,0.12,6,0.125,11,0.388,12,0.787,14,0.903,15,0.016,16,0.5,17,1.405,18,0.388,32,0.154,36,2.411,38,1.999,45,0.751,52,0.72,73,0.008,100,0.049,112,0.01,113,0.008,117,1.152,120,0.815,127,0.69,131,2.175,156,2.302,190,1.111,217,3.005,235,2.798,260,1.096,279,1.199,284,1.62,289,1.107,290,1.199,301,4.682,330,1.576,336,2.251,388,2.06,398,2.126,406,1.52,407,3.018,430,2.06,440,1.861,441,1.861,442,2.175,443,2.175,594,1.861,624,2.627,718,3.132,719,3.334,876,3.323,1300,5.529,1306,4.778,1311,3.334,1312,4.682,1313,3.237,1323,2.454,1324,2.454,1328,4.207,1352,5.529,1353,3.447,1354,6.136,1355,6.583,1356,5.403,1357,3.977,1358,5.403,1359,3.977,1360,5.403,1361,3.977,1362,6.583,1363,5.403,1364,4.682,1365,5.403,1366,6.583,1367,6.583,1368,5.403,1369,5.403,1370,5.403,1371,3.853,1372,5.403,1373,4.207,1374,6.583,1375,5.403,1376,5.705,1377,6.583,1378,5.403,1379,5.403,1380,5.403,1381,6.583,1382,6.583,1383,5.403,1384,4.694,1385,5.403,1386,6.583,1387,5.403,1388,5.403,1389,5.403,1390,5.403,1391,5.403,1392,5.403,1393,5.403,1394,5.403,1395,5.403,1396,5.403,1397,5.403,1398,5.403,1399,5.403,1400,5.403,1401,5.403,1402,5.403,1403,5.403,1404,5.403,1405,5.403,1406,5.403,1407,4.207,1408,5.403,1409,5.403,1410,5.403,1411,3.977,1412,3.097,1413,3.447,1414,5.403,1415,3.447,1416,3.447,1417,3.447,1418,3.977,1419,3.977]],["title/components/LayoutComponent.html",[264,0.594,338,1.339]],["body/components/LayoutComponent.html",[3,0.072,4,0.072,5,0.063,6,0.131,11,0.329,12,0.492,14,0.91,15,0.016,16,0.481,18,0.206,32,0.082,34,1.209,38,0.571,48,1.575,50,1.394,52,1.297,54,0.756,65,0.829,73,0.006,81,1.154,94,0.823,100,0.026,112,0.006,113,0.006,114,2.404,116,2.032,117,1.027,120,1.51,123,1.416,124,0.843,127,0.366,129,1.824,132,2.245,133,1.37,135,1.204,149,1.223,157,1.16,167,1.093,175,1.223,179,1.154,180,2.15,182,2.074,183,1.114,186,1.154,190,1.271,196,2.602,217,0.823,228,1.038,231,0.941,233,2.181,251,0.974,253,1.16,254,2.082,257,2.466,260,1.181,264,0.643,265,0.725,266,0.86,267,0.86,268,0.86,270,0.823,271,2.364,273,1.316,275,1.316,279,0.749,289,0.987,290,1.17,294,1.093,302,2.229,314,3.007,315,3.758,316,1.828,320,2.406,324,0.86,325,1.375,326,1.261,327,0.86,328,1.963,329,0.86,330,1.513,331,0.86,332,0.725,333,1.375,334,0.669,335,0.669,336,0.669,337,0.86,338,1.657,339,0.86,340,0.669,341,0.86,342,0.725,343,0.669,344,1.375,345,0.756,346,0.86,347,0.725,348,0.725,349,0.823,350,0.86,351,0.696,352,0.86,353,0.725,354,0.86,355,0.725,356,1.028,357,0.86,358,0.725,359,0.725,360,0.725,361,0.86,362,0.725,363,0.86,364,0.86,365,0.86,374,0.823,398,1.645,399,2.924,402,1.302,404,1.686,406,1.356,407,2.074,430,1.093,436,0.941,437,0.899,440,0.987,441,0.987,446,1.302,459,1.394,466,3.969,469,2.973,492,1.846,498,1.828,507,1.093,554,3.284,567,0.987,594,2.255,598,2.082,606,1.828,620,1.223,640,2.602,651,3.007,685,4.807,686,4.774,691,1.974,695,1.505,701,1.828,714,3.594,715,0.941,733,1.394,744,1.828,774,3.007,777,1.643,806,1.828,821,2.082,825,1.505,889,1.505,905,1.223,921,1.643,926,2.786,961,1.505,973,1.643,995,2.636,998,1.505,1009,1.643,1010,1.643,1085,3.654,1086,2.911,1101,3.436,1123,2.406,1124,3.007,1129,3.284,1146,2.628,1177,1.828,1178,1.828,1179,1.828,1180,1.828,1181,1.828,1182,1.828,1183,1.828,1184,1.828,1185,1.828,1186,1.828,1187,1.828,1188,1.828,1189,1.828,1309,2.37,1371,5.007,1420,6.459,1421,1.828,1422,3.375,1423,4.217,1424,3.375,1425,4.217,1426,4.217,1427,4.217,1428,4.217,1429,4.217,1430,4.217,1431,4.217,1432,4.819,1433,4.217,1434,3.375,1435,3.375,1436,4.819,1437,3.375,1438,3.375,1439,2.11,1440,1.828,1441,2.11,1442,3.375,1443,2.11,1444,2.11,1445,3.375,1446,2.11,1447,2.11,1448,3.375,1449,2.11,1450,2.11,1451,2.11,1452,3.375,1453,2.11,1454,2.11,1455,3.375,1456,2.11,1457,3.375,1458,2.11,1459,2.11,1460,2.11,1461,4.217,1462,4.217,1463,4.217,1464,4.217,1465,4.217,1466,4.217,1467,2.11,1468,2.11,1469,2.11,1470,2.11,1471,2.11,1472,2.11,1473,2.11,1474,3.375,1475,1.643,1476,1.828,1477,1.828,1478,1.828,1479,1.828,1480,1.828,1481,2.628,1482,4.176,1483,2.11,1484,4.217,1485,1.505,1486,4.217,1487,1.828,1488,2.11,1489,2.11,1490,2.628,1491,2.11,1492,2.11,1493,2.11,1494,2.11,1495,2.11,1496,2.11,1497,2.11,1498,5.27,1499,2.11,1500,2.11,1501,3.375,1502,3.375,1503,3.375,1504,2.11,1505,2.11,1506,2.11,1507,2.11,1508,2.11,1509,3.375,1510,3.375,1511,3.375,1512,2.11,1513,2.11,1514,2.11,1515,3.375,1516,2.11,1517,2.11,1518,1.643,1519,1.828,1520,1.828,1521,2.11,1522,2.11,1523,3.375,1524,2.11,1525,2.11,1526,2.11,1527,1.828,1528,2.11,1529,3.375,1530,4.217,1531,2.11,1532,2.11,1533,2.11,1534,2.11,1535,2.11,1536,2.11,1537,2.11,1538,2.11,1539,1.643,1540,2.11,1541,2.11,1542,2.11,1543,2.11,1544,2.11,1545,3.375,1546,2.11,1547,2.11,1548,2.11,1549,1.505,1550,3.375,1551,2.11,1552,1.828,1553,2.11,1554,1.828,1555,2.11,1556,2.11,1557,6.13,1558,3.375,1559,1.828,1560,1.828,1561,1.828,1562,1.828,1563,2.11,1564,2.11,1565,3.007,1566,2.11,1567,1.828,1568,2.11,1569,2.11,1570,3.654,1571,2.786,1572,2.11,1573,2.11,1574,3.284,1575,3.375,1576,3.375,1577,1.643,1578,2.11,1579,1.828,1580,1.828,1581,1.828,1582,2.924,1583,3.375,1584,2.11,1585,1.505,1586,2.11,1587,1.828,1588,2.11,1589,2.11,1590,3.375,1591,1.828,1592,2.11,1593,3.375]],["title/modules/LayoutModule.html",[366,1.187,1594,2.404]],["body/modules/LayoutModule.html",[3,0.148,4,0.148,5,0.129,6,0.076,15,0.016,16,0.652,18,0.42,24,0.955,32,0.166,73,0.008,100,0.053,112,0.011,113,0.008,251,0.994,308,3.729,334,2.473,335,1.806,336,2.024,338,2.682,360,2.682,367,3.241,368,1.542,369,2.129,373,2.321,374,1.678,375,1.479,377,2.321,378,1.958,379,1.88,380,2.321,381,1.678,383,2.116,384,2.014,385,2.014,386,1.735,390,1.479,540,4.062,542,4.936,567,2.014,570,4.936,760,4.436,767,2.843,1030,3.973,1036,2.715,1038,2.542,1039,2.014,1040,1.92,1041,4.062,1043,2.116,1301,2.843,1311,4.482,1325,3.729,1352,3.351,1481,3.351,1594,5.031,1595,3.729,1596,3.729,1597,3.729,1598,3.729,1599,3.729,1600,3.572,1601,4.799,1602,4.799,1603,4.799,1604,4.303,1605,4.303,1606,3.351,1607,3.068,1608,4.303,1609,3.068,1610,4.303,1611,4.303,1612,4.303,1613,2.229,1614,2.655,1615,4.303,1616,2.354,1617,4.303,1618,4.303,1619,3.351,1620,4.303,1621,4.303,1622,4.303,1623,2.843,1624,4.303,1625,2.354,1626,4.303,1627,4.303,1628,2.229,1629,2.655]],["title/interfaces/LinkBudgetComponent.html",[0,0.865,630,2.131]],["body/interfaces/LinkBudgetComponent.html",[0,1.056,2,1.48,3,0.114,4,0.114,5,0.1,6,0.058,11,0.324,12,0.694,14,0.776,15,0.016,32,0.215,34,1.189,38,1.742,41,2.028,45,1.303,48,1.453,52,1.008,54,1.706,65,1.468,68,1.814,71,2.047,73,0.006,81,2.603,93,2.047,95,2.047,99,2.465,100,0.041,103,2.465,110,2.744,112,0.009,113,0.006,116,0.933,120,1.495,123,1.286,125,2.803,153,1.414,167,1.718,180,2.714,183,2.126,224,3.231,228,1.631,251,1.487,257,2.171,260,0.528,264,0.506,289,0.679,330,1.187,390,1.637,398,1.78,428,0.863,482,2.366,497,1.923,501,2.047,576,2.366,593,2.047,595,2.047,597,4.337,598,4.359,611,2.192,620,1.923,630,3.934,633,2.124,681,1.294,700,2.759,715,1.48,748,2.047,815,2.192,816,2.366,876,2.228,881,1.814,936,2.759,950,2.047,965,1.814,995,2.603,1086,1.718,1134,2.366,1202,2.192,1265,2.366,1485,2.366,1630,2.366,1631,2.583,1632,2.583,1633,4.359,1634,5.037,1635,5.037,1636,1.814,1637,2.366,1638,4.78,1639,2.583,1640,4.337,1641,4.018,1642,4.737,1643,2.583,1644,2.583,1645,4.335,1646,2.583,1647,2.366,1648,3.97,1649,2.583,1650,2.583,1651,2.583,1652,2.583,1653,2.583,1654,2.583,1655,3.707,1656,2.583,1657,2.583,1658,2.583,1659,2.583,1660,2.583,1661,3.707,1662,2.583,1663,2.583,1664,2.583,1665,2.583,1666,2.583,1667,2.583,1668,3.707,1669,2.583,1670,2.583,1671,2.366,1672,2.047,1673,2.583,1674,2.583,1675,2.583,1676,2.583,1677,2.583,1678,2.583,1679,2.583,1680,2.583,1681,2.583,1682,2.583,1683,2.366,1684,2.366,1685,2.583,1686,2.583,1687,2.583,1688,2.583,1689,3.707,1690,2.583,1691,2.583,1692,2.583,1693,2.583,1694,2.583,1695,2.583,1696,2.366,1697,2.366,1698,1.814,1699,2.366,1700,2.583,1701,2.583,1702,2.047,1703,2.583,1704,4.335,1705,2.583,1706,5.501,1707,5.601,1708,2.583,1709,2.583,1710,3.707,1711,3.707,1712,3.707,1713,4.737,1714,4.737,1715,4.737,1716,4.737,1717,4.335,1718,2.583,1719,2.583]],["title/classes/LinkBudgetScenario.html",[100,0.048,1636,2.131]],["body/classes/LinkBudgetScenario.html",[0,0.923,3,0.095,4,0.095,5,0.083,6,0.132,11,0.269,12,0.606,14,0.911,15,0.016,32,0.194,34,0.99,38,1.762,41,1.773,45,1.23,48,1.559,52,1.242,54,1.491,65,1.415,68,1.511,71,1.704,73,0.005,81,2.275,93,1.704,95,1.704,99,2.155,100,0.034,103,2.884,110,1.773,112,0.008,113,0.005,116,0.777,117,1.43,120,1.473,123,0.638,125,2.798,127,0.479,153,1.177,167,1.431,180,1.233,183,2.151,190,1.008,224,2.606,228,1.358,251,1.549,257,2.449,259,1.125,260,1.197,264,0.421,279,0.923,289,1.473,290,1.393,330,1.514,390,1.721,398,2.106,406,1.886,428,0.718,482,1.97,497,1.601,501,1.704,576,1.97,593,3.088,594,2.938,595,1.704,597,1.97,598,3.686,611,2.748,620,1.601,630,3.935,633,1.856,681,1.077,700,2.411,715,1.233,748,1.704,815,1.825,816,1.97,876,1.947,881,1.511,936,2.411,950,1.704,965,1.511,995,2.275,1086,2.592,1134,1.97,1199,2.567,1202,1.825,1265,1.97,1485,1.97,1630,1.97,1631,2.151,1632,2.151,1633,4.313,1634,4.781,1635,4.781,1636,2.275,1637,3.568,1638,4.781,1639,3.24,1640,3.971,1641,3.679,1642,4.337,1643,3.24,1644,4.337,1645,3.897,1646,4.337,1647,1.97,1648,3.568,1649,2.151,1650,2.151,1651,2.151,1652,2.151,1653,2.151,1654,2.151,1655,3.24,1656,2.151,1657,2.151,1658,2.151,1659,2.151,1660,3.24,1661,3.24,1662,3.24,1663,2.151,1664,2.151,1665,2.151,1666,2.151,1667,3.24,1668,3.24,1669,3.24,1670,2.151,1671,2.966,1672,1.704,1673,2.151,1674,2.151,1675,2.151,1676,2.151,1677,2.151,1678,2.151,1679,4.337,1680,2.151,1681,4.337,1682,3.24,1683,1.97,1684,1.97,1685,2.151,1686,2.151,1687,2.151,1688,2.151,1689,3.897,1690,2.151,1691,2.151,1692,2.151,1693,2.151,1694,3.24,1695,2.151,1696,1.97,1697,1.97,1698,1.511,1699,1.97,1700,2.151,1701,2.151,1702,1.704,1703,2.151,1704,3.897,1705,2.151,1706,5.221,1707,5.342,1708,2.151,1709,2.151,1710,3.24,1711,3.24,1712,3.24,1713,4.337,1714,4.337,1715,4.337,1716,4.337,1717,3.897,1718,2.151,1719,2.151,1720,4.16,1721,4.16,1722,4.16,1723,4.16,1724,3.605,1725,4.16,1726,4.16,1727,2.762,1728,2.762,1729,2.762,1730,2.762,1731,2.762,1732,2.762,1733,2.762,1734,2.762,1735,2.762,1736,2.762,1737,2.762,1738,2.762,1739,2.762,1740,2.762]],["title/classes/LogEntry.html",[100,0.048,1741,2.778]],["body/classes/LogEntry.html",[3,0.198,4,0.122,5,0.107,6,0.127,11,0.346,12,0.842,14,0.826,15,0.016,16,0.471,17,1.298,18,0.346,26,1.384,28,1.94,32,0.224,38,0.959,45,1.09,48,0.698,52,1.196,62,1.66,65,0.982,73,0.007,80,2.056,91,1.446,100,0.061,106,2.841,112,0.009,113,0.007,117,0.757,120,1.603,123,1.626,129,1.625,131,1.94,133,0.922,135,1.567,143,3.092,176,2.704,190,1.275,217,1.384,231,1.583,259,1.446,260,1.121,279,1.108,284,2.354,289,1.023,330,0.757,398,1.691,406,0.998,428,1.718,442,1.94,443,1.94,450,2.455,468,4.229,481,1.66,624,3.298,627,1.583,876,1.66,877,2.763,906,2.344,1036,1.326,1261,5.831,1282,3.56,1384,2.53,1539,2.763,1741,4.711,1742,2.53,1743,5.006,1744,5.006,1745,5.433,1746,5.433,1747,4.993,1748,5.726,1749,3.548,1750,3.548,1751,5.483,1752,5.726,1753,3.548,1754,3.548,1755,3.548,1756,3.548,1757,4.327,1758,3.548,1759,4.327,1760,1.512,1761,3.074,1762,3.074,1763,1.94,1764,2.763,1765,2.53,1766,6.601,1767,4.327,1768,3.074,1769,3.074,1770,3.074,1771,3.074,1772,3.074,1773,3.074,1774,3.074,1775,3.074,1776,3.074,1777,2.763,1778,3.074,1779,3.074,1780,3.074,1781,3.074,1782,2.056,1783,3.074,1784,3.074,1785,3.074,1786,3.074,1787,2.344,1788,2.763,1789,2.763,1790,3.074,1791,3.074,1792,6.647,1793,6.101,1794,3.074,1795,5.433,1796,3.074,1797,5.433,1798,5.006,1799,5.006,1800,3.074,1801,5.433,1802,3.074,1803,3.074,1804,3.074,1805,4.327,1806,3.074,1807,3.074,1808,3.074,1809,3.074,1810,4.327,1811,3.074,1812,3.074,1813,4.327,1814,3.074,1815,3.074,1816,5.939,1817,3.074,1818,3.074,1819,3.074,1820,3.074,1821,3.074,1822,3.074,1823,3.074,1824,3.074,1825,3.074,1826,3.074,1827,3.074,1828,3.074,1829,3.074,1830,3.074,1831,4.327,1832,3.074]],["title/modules/LoggerModule.html",[366,1.187,1036,1.456]],["body/modules/LoggerModule.html",[3,0.187,4,0.187,5,0.163,6,0.116,15,0.016,16,0.619,18,0.53,32,0.21,45,1.026,73,0.01,82,3.151,100,0.067,112,0.013,113,0.01,133,2.031,176,3.092,260,0.866,279,1.206,289,1.113,304,3.591,368,1.948,369,2.469,373,2.692,374,2.12,375,1.869,377,2.215,379,2.35,380,2.692,381,2.12,386,1.655,450,3.249,771,3.151,1036,2.919,1038,3.177,1040,3.177,1628,2.815,1760,2.316,1833,5.436,1834,5.436,1835,5.436,1836,5.543,1837,5.436,1838,6.607,1839,4.71,1840,5.436,1841,3.354,1842,5.436,1843,3.354,1844,5.436,1845,3.354]],["title/injectables/LoggerService.html",[17,1.013,133,1.013]],["body/injectables/LoggerService.html",[3,0.213,4,0.103,5,0.09,6,0.133,11,0.294,12,0.767,14,0.906,15,0.016,16,0.429,17,1.153,18,0.294,26,2.054,28,2.426,32,0.204,38,0.814,45,0.994,48,0.592,52,1.052,62,1.409,65,0.872,73,0.006,80,2.571,91,1.807,100,0.055,106,2.59,112,0.008,113,0.006,117,1.544,120,1.641,123,1.649,127,0.523,129,1.743,131,1.647,133,1.153,135,1.453,143,3.219,176,1.409,190,1.173,217,1.174,231,1.343,260,1.198,279,0.985,284,2.368,289,1.462,290,1.558,317,3.844,330,1.544,388,1.559,398,2.055,406,2.037,412,3.454,428,1.511,442,1.647,443,1.647,450,2.59,468,3.999,481,2.465,624,2.931,627,1.343,876,1.409,877,2.345,906,2.931,1036,1.125,1261,5.897,1282,3.163,1384,2.147,1539,2.345,1741,4.144,1742,2.147,1743,2.609,1744,2.609,1745,5.036,1746,2.609,1748,4.564,1751,5.762,1752,5.369,1757,2.609,1759,5.036,1760,1.283,1761,2.609,1762,2.609,1763,2.881,1764,4.101,1765,2.147,1766,6.413,1767,3.844,1768,2.609,1769,2.609,1770,2.609,1771,2.609,1772,2.609,1773,2.609,1774,2.609,1775,2.609,1776,2.609,1777,2.345,1778,2.609,1779,2.609,1780,2.609,1781,2.609,1782,3.369,1783,3.844,1784,3.844,1785,2.609,1786,2.609,1787,1.989,1788,4.101,1789,2.345,1790,4.564,1791,3.844,1792,6.859,1793,5.808,1794,3.844,1795,5.036,1796,3.844,1797,5.036,1798,4.564,1799,4.564,1800,3.844,1801,5.036,1802,2.609,1803,2.609,1804,2.609,1805,3.844,1806,3.844,1807,3.844,1808,2.609,1809,3.844,1810,3.844,1811,3.844,1812,2.609,1813,3.844,1814,2.609,1815,2.609,1816,5.617,1817,2.609,1818,2.609,1819,2.609,1820,3.844,1821,2.609,1822,6.084,1823,2.609,1824,2.609,1825,2.609,1826,2.609,1827,2.609,1828,2.609,1829,2.609,1830,3.844,1831,3.844,1832,2.609,1846,4.436,1847,4.436,1848,4.436,1849,3.011,1850,3.011,1851,3.011,1852,3.011,1853,3.011,1854,3.011,1855,3.011,1856,3.011,1857,3.011,1858,3.011,1859,3.011,1860,3.011,1861,3.011,1862,3.011,1863,3.011,1864,3.011]],["title/interfaces/LuplinkConfig.html",[0,0.865,1865,2.778]],["body/interfaces/LuplinkConfig.html",[0,1.065,2,2.142,3,0.165,4,0.165,5,0.144,6,0.085,11,0.468,12,0.891,14,0.811,15,0.016,16,0.649,18,0.468,24,1.065,32,0.186,45,0.906,65,1.203,73,0.009,100,0.059,112,0.012,113,0.009,117,1.304,123,1.554,176,2.247,232,2.783,271,1.584,334,1.522,335,1.522,336,1.939,340,1.522,367,2.729,377,1.956,378,1.65,379,2.221,380,2.492,381,1.872,386,1.462,387,2.606,390,1.65,407,3.485,431,3.738,440,2.862,441,2.247,517,3.171,651,5.218,905,3.545,929,3.423,1030,2.626,1038,2.729,1039,2.247,1040,2.729,1274,3.171,1301,3.171,1313,3.007,1323,2.962,1324,2.962,1594,2.962,1606,3.738,1607,3.423,1619,3.738,1623,3.171,1628,3.167,1760,2.046,1836,3.738,1865,4.799,1866,3.423,1867,6.141,1868,3.167,1869,4.16,1870,3.423,1871,3.423,1872,5.3,1873,4.16,1874,4.762,1875,4.762,1876,3.738,1877,2.962,1878,3.423,1879,3.738,1880,3.738,1881,3.738,1882,4.16,1883,4.16,1884,4.16,1885,4.16,1886,4.361,1887,3.738,1888,4.04,1889,4.16,1890,4.16,1891,5.3,1892,4.16,1893,4.16,1894,4.16,1895,2.247,1896,4.16]],["title/modules/LuplinkModule.html",[366,1.187,1888,2.574]],["body/modules/LuplinkModule.html",[0,1.026,3,0.159,4,0.159,5,0.139,6,0.105,14,0.557,15,0.016,16,0.646,18,0.451,24,1.026,32,0.179,45,0.873,65,1.174,73,0.009,100,0.057,112,0.011,113,0.009,117,0.986,123,1.068,176,2.794,232,2.68,260,0.736,271,1.526,279,1.026,289,0.947,330,0.986,334,1.466,335,1.466,336,1.893,340,1.466,367,3.306,368,1.657,369,2.231,373,2.433,374,1.804,375,1.59,377,1.884,378,1.59,379,2.183,380,2.433,381,1.804,386,1.818,387,3.157,390,1.59,406,1.301,407,2.274,431,3.601,440,2.794,441,2.164,517,3.055,651,4.257,905,3.461,929,3.297,1030,2.529,1038,2.951,1039,2.164,1040,2.951,1274,3.055,1301,3.055,1313,3.643,1323,2.853,1324,2.853,1594,2.853,1606,3.601,1607,3.297,1619,3.601,1623,3.055,1628,3.092,1760,1.97,1836,4.649,1865,4.983,1866,3.297,1867,4.007,1868,3.092,1869,4.007,1870,3.297,1871,3.297,1872,5.174,1873,4.007,1874,4.649,1875,4.649,1876,3.601,1877,2.853,1878,3.297,1879,3.601,1880,3.601,1881,3.601,1882,4.007,1883,4.007,1884,4.007,1885,4.007,1886,4.257,1887,3.601,1888,5.178,1889,5.174,1890,4.007,1891,5.174,1892,4.007,1893,4.007,1894,4.007,1895,2.164,1896,4.007,1897,4.007,1898,4.624,1899,4.007,1900,4.624,1901,4.007]],["title/classes/MockComputeService.html",[100,0.048,1902,2.258]],["body/classes/MockComputeService.html",[3,0.209,4,0.164,5,0.144,6,0.084,9,1.714,15,0.016,16,0.596,17,1.586,18,0.466,24,1.061,26,1.865,32,0.283,45,1.151,48,1.527,53,3.157,65,1.321,73,0.009,77,2.616,91,1.949,100,0.09,106,2.352,112,0.012,113,0.009,127,0.83,129,1.345,133,1.243,135,1.525,259,1.949,284,1.949,290,1.061,366,1.456,378,1.644,379,2.014,386,1.456,387,2.038,404,1.243,413,3,416,3.337,428,1.84,433,2.238,450,3,458,2.951,481,2.238,627,2.722,657,2.352,658,2.855,681,2.379,970,3.536,975,2.772,1038,2.134,1628,2.477,1629,2.951,1760,2.038,1763,2.616,1782,2.772,1841,3.764,1843,2.951,1845,2.951,1895,2.238,1902,3.536,1903,2.772,1904,4.675,1905,3.159,1906,3.159,1907,3.159,1908,3.159,1909,3.159,1910,4.438,1911,3.159,1912,3.159,1913,3.159,1914,2.772,1915,3.159,1916,2.951,1917,3.159,1918,4.03,1919,4.03,1920,4.03,1921,3.159,1922,2.772,1923,3.536,1924,4.03,1925,3.159,1926,3.159,1927,3.159,1928,2.772,1929,2.951,1930,3.159,1931,2.772,1932,2.772,1933,2.616,1934,2.951,1935,2.951,1936,2.951,1937,2.951]],["title/classes/MockFormService.html",[100,0.048,1914,2.258]],["body/classes/MockFormService.html",[3,0.199,4,0.152,5,0.133,6,0.129,9,1.587,11,0.432,12,0.846,14,0.534,15,0.016,16,0.582,17,1.509,18,0.432,24,0.983,26,1.728,32,0.276,45,1.096,48,1.573,52,1.051,53,3.067,65,1.274,73,0.012,77,2.423,91,1.805,100,0.088,106,2.178,112,0.011,113,0.008,127,0.769,129,1.246,133,1.152,135,1.451,190,1.051,259,1.805,260,1.137,279,1.288,284,1.805,289,1.326,290,1.288,366,1.349,378,1.523,379,1.916,386,1.349,387,1.887,404,1.152,413,3.185,416,3.759,428,1.904,433,2.073,450,2.855,458,2.733,481,2.073,627,2.591,657,3.185,658,3.031,681,2.526,970,4.388,975,3.984,1038,1.976,1628,2.294,1629,2.733,1760,1.887,1763,2.423,1782,2.567,1841,3.582,1843,2.733,1845,2.733,1895,2.073,1902,2.567,1903,2.567,1904,4.541,1905,2.926,1906,2.926,1907,2.926,1908,2.926,1909,2.926,1910,4.279,1911,2.926,1912,2.926,1913,2.926,1914,3.365,1915,2.926,1916,2.733,1917,2.926,1918,3.835,1919,3.835,1920,3.835,1921,2.926,1922,2.567,1923,3.365,1924,3.835,1925,2.926,1926,2.926,1927,2.926,1928,2.567,1929,2.733,1930,2.926,1931,2.567,1932,2.567,1933,2.423,1934,2.733,1935,2.733,1936,2.733,1937,2.733,1938,4.429,1939,4.429,1940,4.429,1941,4.429,1942,4.429]],["title/injectables/MockToastPackage.html",[17,1.013,1923,2.258]],["body/injectables/MockToastPackage.html",[3,0.208,4,0.163,5,0.142,6,0.107,9,2.174,15,0.016,16,0.594,17,1.577,18,0.462,24,1.052,26,1.849,32,0.282,45,1.145,48,1.525,53,3.147,65,1.316,73,0.009,77,2.593,91,1.931,100,0.09,106,2.331,112,0.012,113,0.009,127,1.161,129,1.334,133,1.232,135,1.516,260,0.755,284,1.931,290,1.052,366,1.444,378,1.63,379,2.002,386,1.444,387,2.02,388,2.455,404,1.232,413,2.983,416,3.318,428,1.834,433,2.218,450,2.983,458,2.925,481,2.218,627,2.707,657,2.331,658,2.839,681,2.366,970,3.516,975,2.748,1038,2.115,1628,2.455,1629,2.925,1760,2.02,1763,2.593,1782,2.748,1841,3.743,1843,2.925,1845,2.925,1895,2.218,1902,2.748,1903,2.748,1904,4.66,1905,3.132,1906,3.132,1907,3.132,1908,3.132,1909,3.132,1910,4.66,1911,3.132,1912,3.132,1913,3.132,1914,2.748,1915,3.132,1916,2.925,1917,3.132,1918,4.008,1919,4.008,1920,4.008,1921,3.132,1922,2.748,1923,3.878,1924,4.008,1925,3.132,1926,3.132,1927,3.132,1928,2.748,1929,2.925,1930,3.132,1931,2.748,1932,2.748,1933,2.593,1934,2.925,1935,2.925,1936,2.925,1937,2.925,1943,4.74]],["title/classes/MockupLoggerService.html",[100,0.048,1922,2.258]],["body/classes/MockupLoggerService.html",[3,0.245,4,0.153,5,0.134,6,0.129,9,1.596,11,0.434,15,0.016,16,0.583,17,1.515,18,0.434,24,0.989,26,2.687,32,0.277,45,1.1,48,1.582,53,3.074,65,1.277,73,0.008,77,2.437,91,1.815,100,0.088,106,2.191,112,0.011,113,0.008,127,0.773,129,1.253,133,1.158,135,1.457,259,1.815,260,1.139,279,1.293,284,1.815,289,1.464,290,1.628,366,1.357,378,1.532,379,1.924,386,1.357,387,1.898,404,1.158,413,2.866,416,3.188,428,1.791,433,2.085,450,2.866,458,2.749,481,3.224,627,2.601,657,2.191,658,2.727,681,2.273,970,3.378,975,2.582,1038,1.988,1628,2.307,1629,2.749,1760,1.898,1763,3.768,1782,3.993,1841,3.596,1843,2.749,1845,2.749,1895,2.085,1902,2.582,1903,2.582,1904,4.551,1905,2.943,1906,2.943,1907,2.943,1908,2.943,1909,2.943,1910,4.291,1911,2.943,1912,2.943,1913,2.943,1914,2.582,1915,2.943,1916,2.749,1917,2.943,1918,3.85,1919,3.85,1920,3.85,1921,2.943,1922,3.378,1923,3.378,1924,3.85,1925,2.943,1926,2.943,1927,2.943,1928,2.582,1929,2.749,1930,2.943,1931,2.582,1932,2.582,1933,2.437,1934,2.749,1935,2.749,1936,2.749,1937,2.749,1944,4.455,1945,4.455,1946,4.455,1947,4.455,1948,4.455]],["title/components/NavbarComponent.html",[264,0.594,340,1.235]],["body/components/NavbarComponent.html",[3,0.094,4,0.094,5,0.082,6,0.136,11,0.267,12,0.602,14,0.865,15,0.016,16,0.586,18,0.267,24,0.608,32,0.106,36,2.222,38,1.347,45,0.78,46,1.419,48,1.507,52,1.34,55,1.81,65,0.813,73,0.008,100,0.034,112,0.008,113,0.005,117,1.335,120,0.561,123,1.581,124,0.685,127,0.718,129,1.926,132,2.364,133,1.442,135,1.386,153,1.168,156,1.168,163,1.954,190,1.211,233,2.286,241,1.691,251,0.955,253,1.422,260,1.221,264,0.759,265,0.942,266,1.116,267,1.116,268,1.116,270,1.069,271,2.478,273,1.613,275,1.613,279,0.918,284,2.029,289,1.331,290,1.519,293,1.588,294,1.419,295,1.419,296,1.588,304,1.81,307,3.583,314,1.954,315,1.954,320,1.954,324,1.116,325,1.685,326,1.545,327,1.116,328,2.26,329,1.116,330,1.335,331,1.116,332,0.942,333,1.685,334,0.869,335,1.887,336,0.869,337,1.116,338,0.942,339,1.116,340,1.758,341,1.116,342,0.942,343,0.869,344,1.685,345,0.982,346,1.116,347,0.942,348,0.942,349,1.942,350,1.116,351,0.904,352,1.116,353,0.942,354,1.116,355,0.942,356,1.259,357,1.116,358,0.942,359,0.942,360,0.942,361,1.116,362,0.942,363,1.116,364,1.116,365,1.116,366,0.835,387,2.537,390,2.234,396,3.933,398,1.743,402,1.691,404,1.814,406,1.561,407,2.449,428,1.442,430,1.419,436,1.223,437,1.168,440,1.282,441,1.282,461,2.134,473,2.134,481,1.935,504,1.588,505,1.588,506,1.499,507,1.419,532,1.691,655,2.949,681,2.322,691,2.331,704,1.691,726,2.375,737,2.134,739,2.134,746,2.134,805,2.375,840,1.499,889,1.954,908,2.134,965,2.262,976,1.954,1199,4.009,1216,1.954,1309,2.728,1313,3.195,1323,1.691,1324,1.691,1344,4.319,1345,1.954,1412,2.134,1440,4.316,1518,2.134,1571,1.81,1585,1.954,1788,3.22,1870,1.954,1871,1.954,1877,2.551,1933,2.724,1949,2.375,1950,5.424,1951,4.98,1952,4.135,1953,4.98,1954,4.98,1955,4.98,1956,4.98,1957,4.316,1958,4.98,1959,4.98,1960,5.547,1961,4.135,1962,6.259,1963,4.98,1964,4.135,1965,2.74,1966,2.74,1967,4.135,1968,3.551,1969,2.74,1970,2.732,1971,2.74,1972,2.74,1973,2.74,1974,2.74,1975,2.74,1976,4.98,1977,2.74,1978,2.74,1979,2.74,1980,4.135,1981,2.74,1982,2.74,1983,4.98,1984,2.74,1985,4.135,1986,2.74,1987,4.98,1988,2.134,1989,4.135,1990,2.74,1991,2.74,1992,2.74,1993,2.74,1994,2.74,1995,2.375,1996,3.878,1997,3.878,1998,2.74,1999,2.74,2000,5.954,2001,2.74,2002,2.375,2003,2.375,2004,2.74,2005,4.135,2006,2.74,2007,2.74,2008,2.74,2009,2.74,2010,2.74,2011,2.74,2012,2.74,2013,2.74,2014,2.375,2015,2.74,2016,2.74,2017,4.135,2018,2.74,2019,2.74,2020,2.74,2021,2.74,2022,2.74,2023,2.74,2024,2.74,2025,2.74,2026,2.134,2027,2.134,2028,2.375,2029,2.74,2030,2.74,2031,2.74,2032,2.74,2033,2.375,2034,2.74,2035,2.74,2036,2.74,2037,3.583,2038,2.74,2039,4.98,2040,2.74,2041,2.74,2042,2.74,2043,2.74,2044,2.74,2045,4.135,2046,3.22,2047,2.74,2048,3.583,2049,4.463,2050,4.135,2051,4.135,2052,4.135,2053,3.583,2054,4.135,2055,4.316,2056,2.74,2057,2.74,2058,2.375,2059,2.74]],["title/modules/NavbarModule.html",[366,1.187,2060,2.778]],["body/modules/NavbarModule.html",[3,0.186,4,0.186,5,0.162,6,0.095,15,0.016,16,0.642,18,0.527,24,1.199,32,0.209,73,0.01,100,0.067,112,0.013,113,0.01,340,2.551,368,1.937,369,2.461,373,2.683,374,2.108,375,1.858,377,2.683,378,2.264,379,2.173,380,2.683,381,2.108,383,3.238,384,2.529,385,2.529,386,2.005,404,1.405,437,2.303,567,2.529,1036,2.88,1039,2.529,1040,2.412,1043,2.658,1616,3.601,1625,2.956,1868,3.678,2060,5.655,2061,4.683,2062,4.683,2063,4.683,2064,5.405,2065,5.405,2066,5.405]],["title/components/NavigationSidebarComponent.html",[264,0.594,342,1.339]],["body/components/NavigationSidebarComponent.html",[3,0.101,4,0.101,5,0.088,6,0.125,11,0.424,12,0.634,14,0.774,15,0.016,16,0.5,18,0.286,32,0.114,38,1.797,48,1.395,52,1.162,59,3.103,73,0.008,82,1.701,94,1.697,100,0.036,112,0.008,113,0.01,117,0.928,120,1.175,123,1.483,124,0.733,127,0.509,129,1.224,135,1.434,167,3.535,179,2.38,180,2.865,190,1.162,217,2.023,224,2.037,233,2.311,251,1.005,257,1.697,260,1.111,264,0.791,265,1.009,266,1.195,267,1.195,268,1.195,270,1.144,271,2.504,273,1.697,275,1.697,277,4.495,278,5.564,279,0.966,281,2.522,289,0.891,290,1.151,293,1.701,294,3.174,295,1.519,296,1.701,297,4.973,304,2.875,306,2.542,314,4.371,315,5.25,321,3.389,324,1.195,325,1.773,326,1.626,327,1.195,328,2.338,329,1.195,330,1.369,331,1.195,332,1.009,333,1.773,334,0.93,335,0.93,336,0.93,337,1.195,338,1.009,339,1.195,340,0.93,341,1.195,342,1.973,343,2.164,344,1.773,345,1.051,346,1.195,347,1.009,348,1.009,349,1.144,350,1.195,351,0.968,352,1.195,353,1.009,354,1.195,355,1.009,356,1.325,357,1.195,358,1.009,359,1.009,360,1.009,361,1.195,362,1.009,363,2.114,364,1.195,365,1.195,375,1.496,390,1.496,398,0.859,402,1.81,406,1.224,407,3.157,423,4.469,430,1.519,440,1.373,441,1.373,459,1.938,477,2.875,554,2.285,598,2.685,627,1.309,686,2.285,714,2.972,771,2.522,796,2.542,821,3.201,895,2.542,896,4.773,1086,2.254,1101,4.092,1124,4.092,1129,4.469,1480,2.542,1559,3.771,1560,5.76,1561,2.542,1562,3.771,1565,2.092,1567,4.973,1570,2.542,1571,3.427,1574,5.832,1577,2.285,1585,2.092,1587,2.542,1613,3.675,1623,1.938,1895,2.868,1950,2.542,2049,3.103,2055,4.495,2067,5.525,2068,2.285,2069,4.495,2070,3.771,2071,5.188,2072,5.188,2073,5.739,2074,4.352,2075,5.188,2076,4.352,2077,2.934,2078,2.934,2079,2.934,2080,2.934,2081,2.934,2082,2.934,2083,2.934,2084,3.771,2085,2.934,2086,2.934,2087,3.771,2088,2.934,2089,2.542,2090,2.542,2091,2.542,2092,2.934,2093,2.934,2094,2.934,2095,4.352,2096,4.352,2097,2.934,2098,2.934,2099,2.934,2100,2.934,2101,4.352,2102,4.352,2103,4.352,2104,4.352,2105,4.352,2106,4.352,2107,4.352,2108,2.934,2109,2.934,2110,2.934,2111,2.934,2112,5.188,2113,4.352,2114,2.934,2115,2.934,2116,4.352,2117,3.771,2118,4.352,2119,4.352,2120,2.934,2121,4.352,2122,2.934,2123,2.934,2124,2.934,2125,2.934,2126,2.934,2127,2.934,2128,2.934,2129,2.934,2130,2.934,2131,2.092,2132,2.934,2133,4.352,2134,5.739,2135,4.352,2136,4.352,2137,4.352,2138,5.739,2139,4.352,2140,4.352,2141,4.352,2142,6.129,2143,2.934,2144,2.934,2145,2.934,2146,2.934,2147,2.934]],["title/modules/NavigationSidebarModule.html",[366,1.187,1600,1.916]],["body/modules/NavigationSidebarModule.html",[3,0.188,4,0.188,5,0.164,6,0.096,15,0.016,16,0.643,18,0.533,24,1.213,32,0.212,73,0.01,100,0.067,112,0.013,113,0.01,342,2.771,343,1.733,368,1.959,369,2.478,373,2.702,374,2.132,375,1.88,377,2.702,378,2.28,379,2.188,380,2.702,381,2.132,383,3.261,384,2.559,385,2.559,386,1.665,404,1.421,437,2.33,567,2.559,1036,2.043,1039,2.559,1040,2.439,1043,2.688,1600,3.845,1613,2.831,1616,3.627,1625,2.99,1868,3.434,2067,4.257,2148,4.738,2149,4.738,2150,4.738,2151,5.467,2152,4.738]],["title/interfaces/Point.html",[0,0.865,1633,2.404]],["body/interfaces/Point.html",[0,1.071,2,1.508,3,0.116,4,0.116,5,0.102,6,0.06,11,0.33,12,0.703,14,0.581,15,0.016,32,0.218,34,1.211,38,1.754,41,2.055,45,1.31,48,1.458,52,1.018,54,1.729,65,1.473,68,1.849,71,2.085,73,0.006,81,2.638,93,2.085,95,2.085,99,2.498,100,0.042,103,2.498,110,2.055,112,0.009,113,0.006,116,0.951,120,1.454,123,0.781,125,2.787,153,1.44,167,1.75,180,1.508,183,2.141,224,2.871,228,1.662,251,1.498,257,2.194,260,0.538,264,0.515,289,0.692,330,1.199,390,1.659,398,1.795,428,0.879,482,2.41,497,1.959,501,2.085,576,2.41,593,2.085,595,2.085,597,2.41,598,4.003,611,2.233,620,1.959,630,3.883,633,2.152,681,1.318,700,2.796,715,1.508,748,2.085,815,2.233,816,2.41,876,2.258,881,1.849,936,2.796,950,2.085,965,1.849,995,2.638,1086,1.75,1134,2.41,1202,2.233,1265,2.41,1485,2.41,1630,2.41,1631,2.632,1632,2.632,1633,4.458,1634,5.289,1635,5.289,1636,1.849,1637,2.41,1638,4.81,1639,2.632,1640,4.374,1641,4.053,1642,4.777,1643,2.632,1644,2.632,1645,4.38,1646,2.632,1647,2.41,1648,4.011,1649,2.632,1650,2.632,1651,2.632,1652,2.632,1653,2.632,1654,2.632,1655,3.756,1656,2.632,1657,2.632,1658,2.632,1659,2.632,1660,2.632,1661,3.756,1662,2.632,1663,2.632,1664,2.632,1665,2.632,1666,2.632,1667,2.632,1668,3.756,1669,2.632,1670,2.632,1671,2.41,1672,2.085,1673,2.632,1674,2.632,1675,2.632,1676,2.632,1677,2.632,1678,2.632,1679,2.632,1680,2.632,1681,2.632,1682,2.632,1683,2.41,1684,2.41,1685,2.632,1686,2.632,1687,2.632,1688,2.632,1689,3.756,1690,2.632,1691,2.632,1692,2.632,1693,2.632,1694,2.632,1695,2.632,1696,2.41,1697,2.41,1698,1.849,1699,2.41,1700,2.632,1701,2.632,1702,2.085,1703,2.632,1704,4.38,1705,2.632,1706,5.528,1707,5.626,1708,2.632,1709,2.632,1710,3.756,1711,3.756,1712,3.756,1713,4.777,1714,4.777,1715,4.777,1716,4.777,1717,4.38,1718,2.632,1719,2.632]],["title/components/ResultSidebarComponent.html",[264,0.594,347,1.339]],["body/components/ResultSidebarComponent.html",[3,0.16,4,0.16,5,0.14,6,0.123,11,0.455,12,0.875,14,0.723,15,0.016,16,0.489,18,0.455,32,0.18,48,1.181,73,0.015,100,0.057,112,0.011,113,0.009,117,0.995,124,1.166,127,0.81,233,2.449,251,1.387,253,2.064,260,1.057,264,1.012,265,1.604,266,1.9,267,1.9,268,1.9,270,1.819,271,2.654,273,2.342,275,2.342,279,1.332,289,0.955,290,1.332,324,1.9,325,2.446,326,2.244,327,1.9,328,2.856,329,1.9,330,1.416,331,1.9,332,1.604,333,2.446,334,1.479,335,1.479,336,1.479,337,1.9,338,1.604,339,1.9,340,1.479,341,1.9,342,1.604,343,1.479,344,2.446,345,1.671,346,1.9,347,2.41,348,1.604,349,1.819,350,1.9,351,1.54,352,1.9,353,1.604,354,1.9,355,1.604,356,1.829,357,1.9,358,1.604,359,1.604,360,1.604,361,1.9,362,1.604,363,1.9,364,1.9,365,1.9,387,3.091,390,1.604,396,4.632,406,1.312,423,4.675,691,3.107,1309,3.447,1326,3.632,1870,3.326,1871,3.326,2068,3.632,2069,5.754,2070,5.203,2153,6.075,2154,4.664,2155,4.664,2156,4.664,2157,4.664,2158,6.004]],["title/modules/ResultSidebarModule.html",[366,1.187,1601,2.574]],["body/modules/ResultSidebarModule.html",[3,0.17,4,0.17,5,0.149,6,0.087,15,0.016,16,0.649,18,0.483,24,1.099,32,0.192,73,0.009,100,0.061,112,0.012,113,0.009,343,1.57,345,2.852,347,2.736,356,1.508,367,3.365,368,1.774,369,2.331,373,2.541,374,1.931,375,1.702,377,2.541,378,2.144,379,2.058,380,2.541,381,1.931,383,3.067,384,2.317,385,2.317,386,1.899,404,1.287,437,2.11,567,2.317,1036,2.761,1039,2.317,1040,2.209,1043,2.435,1044,3.055,1600,3.709,1601,5.356,1613,2.564,1614,3.055,1616,3.411,1625,2.708,1868,3.23,2152,4.291,2159,4.291,2160,4.291,2161,4.291,2162,4.291,2163,3.906,2164,4.951,2165,4.951,2166,4.951,2167,2.435,2168,3.271,2169,3.271]],["title/injectables/SaveLoadService.html",[17,1.013,1313,1.916]],["body/injectables/SaveLoadService.html",[3,0.08,4,0.08,5,0.231,6,0.112,11,0.227,12,0.531,14,0.739,15,0.016,16,0.555,17,0.948,18,0.227,24,0.516,26,2.287,32,0.09,34,2.392,36,3.166,41,1.916,45,1.231,46,1.205,48,1.423,52,0.814,54,0.834,62,1.089,65,1.379,68,1.994,73,0.004,74,2.636,100,0.029,112,0.007,113,0.012,116,0.655,117,1.25,120,1.201,127,0.404,132,1.916,133,1.323,135,0.582,144,1.659,145,1.659,153,0.992,156,2.704,157,1.254,179,1.273,186,1.273,190,0.421,217,1.422,228,1.144,230,1.273,231,1.038,235,1.205,260,0.976,270,1.985,279,0.809,284,2.389,289,1.132,290,1.13,326,1.363,330,1.307,335,1.156,336,1.752,386,1.111,388,1.205,390,0.8,398,1.49,402,1.436,404,1.594,406,1.649,407,1.793,413,3.208,414,2.114,428,1.65,430,1.888,433,1.089,436,1.038,437,0.992,440,1.089,441,1.089,442,1.273,443,1.273,459,1.537,464,2.016,468,1.436,473,1.812,492,1.994,493,2.016,503,1.812,512,2.6,527,2.409,528,3.16,532,1.436,657,2.211,658,2.382,692,1.436,693,1.812,694,1.436,700,2.114,702,1.659,714,1.205,715,1.038,718,2.114,729,2.839,730,1.812,737,1.812,739,2.839,783,2.016,840,1.273,862,1.812,869,2.016,876,1.707,881,3.207,892,2.016,906,2.409,926,3.362,933,1.659,951,2.839,960,2.6,961,1.659,965,1.273,989,1.812,998,3.629,1011,1.812,1123,1.659,1167,2.016,1216,2.6,1247,2.016,1248,2.016,1274,1.537,1282,1.659,1293,1.812,1313,1.793,1317,4.37,1318,3.501,1345,3.206,1346,3.629,1349,2.016,1373,4.941,1376,3.16,1407,3.501,1415,2.016,1416,2.016,1475,1.812,1477,2.016,1478,2.016,1519,2.016,1552,2.016,1647,1.659,1672,3.915,1697,1.659,1699,1.659,1895,1.707,1901,5.311,1929,1.436,1957,3.16,1968,4.37,1970,4.567,1996,2.839,1997,1.812,2014,3.16,2026,1.812,2027,2.839,2033,2.016,2046,2.839,2049,1.659,2084,3.16,2090,2.016,2091,2.016,2131,1.659,2170,4.941,2171,1.812,2172,4.496,2173,3.646,2174,3.646,2175,3.646,2176,3.646,2177,3.646,2178,2.327,2179,3.646,2180,5.09,2181,3.646,2182,3.646,2183,3.646,2184,3.646,2185,3.646,2186,3.646,2187,3.646,2188,2.6,2189,3.646,2190,2.327,2191,2.327,2192,3.646,2193,2.327,2194,2.327,2195,2.327,2196,3.646,2197,2.327,2198,3.646,2199,2.327,2200,2.327,2201,1.812,2202,3.16,2203,3.16,2204,3.16,2205,5.081,2206,4.411,2207,3.16,2208,3.16,2209,3.501,2210,2.016,2211,2.016,2212,4.411,2213,3.896,2214,3.16,2215,2.016,2216,3.896,2217,2.016,2218,2.016,2219,3.16,2220,3.16,2221,3.16,2222,3.646,2223,3.646,2224,2.327,2225,2.327,2226,3.646,2227,2.327,2228,2.327,2229,2.327,2230,3.16,2231,3.646,2232,2.327,2233,2.327,2234,3.646,2235,2.327,2236,2.327,2237,3.646,2238,2.327,2239,2.327,2240,2.327,2241,3.646,2242,2.327,2243,2.327,2244,2.327,2245,2.016,2246,2.327,2247,2.327,2248,3.646,2249,2.327,2250,2.327,2251,2.327,2252,2.327,2253,2.327,2254,2.327,2255,2.327,2256,2.327,2257,2.327,2258,2.327,2259,2.327,2260,3.646,2261,2.327,2262,2.016,2263,2.327,2264,2.327,2265,2.327,2266,2.327,2267,2.327,2268,2.327,2269,3.646,2270,2.327,2271,2.327,2272,2.327,2273,3.646,2274,2.327,2275,2.327,2276,2.327,2277,2.327,2278,2.327,2279,2.327,2280,2.327,2281,3.646,2282,2.327,2283,2.327,2284,2.327,2285,2.327,2286,3.16,2287,2.327,2288,2.327,2289,2.327,2290,2.327,2291,2.327,2292,2.327,2293,2.327,2294,2.327,2295,2.327,2296,2.327,2297,2.327,2298,2.327,2299,2.327,2300,3.896,2301,2.327,2302,2.327,2303,2.327,2304,2.327,2305,2.327,2306,2.327,2307,2.016,2308,3.646,2309,2.327,2310,2.327,2311,2.327,2312,2.327,2313,2.327,2314,3.16,2315,2.327,2316,1.812,2317,2.327,2318,2.327,2319,2.327,2320,2.327,2321,2.327,2322,2.327,2323,2.327,2324,3.646,2325,2.327,2326,2.327,2327,3.646,2328,1.812,2329,2.327,2330,2.327,2331,2.327,2332,2.327,2333,2.327,2334,2.327,2335,2.327,2336,2.327,2337,2.327,2338,2.327,2339,2.327,2340,2.327,2341,2.327,2342,2.327,2343,2.327,2344,2.327,2345,2.327,2346,2.327,2347,2.327,2348,2.327]],["title/components/SimpleDocumentationComponent.html",[264,0.594,348,1.339]],["body/components/SimpleDocumentationComponent.html",[3,0.091,4,0.091,5,0.079,6,0.129,11,0.257,12,0.585,14,0.869,15,0.016,16,0.444,18,0.257,32,0.102,34,1.44,40,2.48,41,2.319,48,1.151,52,1.06,62,1.881,65,0.957,73,0.008,75,2.329,94,1.567,100,0.032,112,0.008,113,0.005,117,0.857,120,1.354,123,0.928,124,0.66,125,2.098,127,0.458,129,1.131,132,2.074,133,1.415,135,0.66,157,2.375,175,2.329,178,2.055,180,1.177,183,0.871,190,1.06,217,1.029,233,2.272,251,0.928,253,1.382,257,1.567,260,1.18,264,0.94,265,0.907,266,1.075,267,1.075,268,1.075,270,1.029,271,2.463,273,1.567,275,1.567,279,0.892,281,2.329,289,0.997,290,1.3,295,2.521,320,1.882,324,1.075,325,1.637,326,1.502,327,1.075,328,2.217,329,1.075,330,1.16,331,1.075,332,0.907,333,1.637,334,0.837,335,0.837,336,0.837,337,1.075,338,0.907,339,1.075,340,0.837,341,1.075,342,0.907,343,0.837,344,1.637,345,0.946,346,1.075,347,0.907,348,1.871,349,2.579,350,1.075,351,0.871,352,1.075,353,0.907,354,1.075,355,0.907,356,1.224,357,1.075,358,0.907,359,0.907,360,0.907,361,1.075,362,0.907,363,1.075,364,1.075,365,1.075,375,1.382,390,1.382,398,0.772,404,1.761,406,1.131,407,1.976,436,1.177,437,1.124,457,4.715,477,2.655,492,2.976,504,1.53,505,1.53,506,1.443,507,2.521,594,1.235,622,2.287,627,1.177,633,1.793,656,2.287,714,2.521,716,4.926,717,5.078,718,2.329,719,3.806,767,2.655,777,4.804,789,4.56,792,4.076,800,4.218,821,3.003,840,2.198,860,2.287,881,2.198,1089,3.129,1093,3.482,1094,3.482,1099,5.346,1101,4.714,1102,4.715,1120,5.729,1124,2.866,1131,4.715,1132,5.729,1140,3.482,1141,2.287,1146,3.129,1166,4.237,1199,3.357,1223,4.715,1258,5.559,1279,4.218,1317,2.866,1326,2.055,1364,3.482,1527,3.482,1565,1.882,1571,1.743,1579,3.482,1581,3.482,1609,5.24,1698,2.976,1916,3.003,2026,2.055,2131,2.866,2314,4.218,2328,3.79,2349,5.723,2350,2.287,2351,4.218,2352,4.019,2353,4.019,2354,3.482,2355,4.867,2356,4.019,2357,4.867,2358,4.867,2359,4.867,2360,5.441,2361,4.715,2362,4.019,2363,2.639,2364,2.639,2365,2.639,2366,2.639,2367,2.639,2368,2.639,2369,2.639,2370,2.639,2371,2.639,2372,2.639,2373,5.346,2374,5.441,2375,5.441,2376,4.019,2377,4.715,2378,4.019,2379,4.019,2380,4.867,2381,4.019,2382,5.441,2383,4.019,2384,4.019,2385,4.019,2386,2.639,2387,2.639,2388,2.639,2389,2.639,2390,4.019,2391,4.019,2392,4.019,2393,4.019,2394,4.019,2395,2.639,2396,3.129,2397,2.639,2398,2.639,2399,2.055,2400,2.639,2401,2.639,2402,2.639,2403,2.639,2404,2.639,2405,2.639,2406,4.715,2407,2.639,2408,2.639,2409,2.639,2410,4.218,2411,4.218,2412,2.639,2413,4.218,2414,2.639,2415,4.218,2416,4.867,2417,4.867,2418,2.639,2419,2.639,2420,4.019,2421,4.019,2422,2.639,2423,2.287,2424,2.287,2425,2.287,2426,2.639,2427,2.639,2428,2.639,2429,2.639,2430,2.639,2431,2.639,2432,2.639,2433,2.639,2434,2.639,2435,2.639,2436,2.639,2437,2.639,2438,2.639,2439,2.639,2440,2.639,2441,2.639,2442,2.639,2443,2.639,2444,2.639,2445,2.639,2446,4.019,2447,6.169,2448,5.441,2449,4.715,2450,4.019,2451,4.019,2452,4.019,2453,4.019,2454,4.019,2455,4.019,2456,2.639,2457,4.019,2458,4.019,2459,4.019,2460,3.482,2461,4.019,2462,4.019,2463,4.019,2464,4.019,2465,4.019,2466,4.019,2467,4.019,2468,4.019,2469,4.019,2470,4.019,2471,4.019,2472,4.019,2473,4.019]],["title/modules/SimpleDocumentationModule.html",[366,1.187,1602,2.574]],["body/modules/SimpleDocumentationModule.html",[3,0.178,4,0.178,5,0.156,6,0.092,15,0.016,16,0.653,18,0.507,24,1.153,32,0.201,73,0.01,100,0.064,112,0.012,113,0.01,343,1.647,348,2.753,349,2.027,356,1.583,367,2.319,368,1.862,369,2.402,373,2.619,374,2.027,375,1.787,377,2.619,378,2.21,379,2.122,380,2.619,381,2.027,383,3.161,384,2.432,385,2.432,386,1.958,404,1.351,437,2.214,567,2.432,1036,2.8,1039,2.432,1040,2.319,1043,2.555,1044,3.206,1600,2.555,1602,5.205,1609,3.705,1613,2.691,1614,3.206,1616,2.842,1625,2.842,1868,3.329,2163,2.691,2167,2.555,2168,3.433,2169,3.433,2349,4.046,2399,4.046,2474,4.503,2475,5.197,2476,4.503,2477,4.503,2478,5.197,2479,5.197,2480,6.428,2481,3.705]],["title/components/StepbarComponent.html",[264,0.594,351,1.286]],["body/components/StepbarComponent.html",[0,0.83,3,0.128,4,0.128,5,0.112,6,0.135,11,0.365,12,0.755,14,0.861,15,0.016,16,0.568,18,0.365,30,3.003,32,0.145,45,1.211,46,1.937,48,1.169,52,1.294,65,0.736,73,0.012,94,2.318,100,0.046,112,0.01,113,0.007,117,1.267,120,1.562,123,1.197,124,0.935,127,1.032,129,1.052,135,0.935,190,0.938,233,2.389,251,1.197,253,1.781,257,2.021,260,1.215,264,0.906,265,1.286,266,1.524,267,1.524,268,1.524,270,1.459,271,2.589,273,2.021,275,2.021,279,1.15,281,3.003,289,1.314,290,1.424,293,2.168,294,1.937,295,1.937,296,2.168,298,3.242,299,3.242,324,1.524,325,2.111,326,1.936,327,1.524,328,2.614,329,1.524,330,1.436,331,1.524,332,1.286,333,2.111,334,1.186,335,1.186,336,1.186,337,1.524,338,1.286,339,1.524,340,1.186,341,1.524,342,1.286,343,1.186,344,2.111,345,1.34,346,1.524,347,1.286,348,1.286,349,1.459,350,1.524,351,2.118,352,1.524,353,1.286,354,1.524,355,1.286,356,1.578,357,1.524,358,1.286,359,1.286,360,1.286,361,1.524,362,1.286,363,1.524,364,1.524,365,1.524,398,2.04,406,1.672,466,4.142,469,2.308,504,2.168,505,2.168,506,2.046,507,1.937,655,3.694,691,2.781,704,3.197,714,3.323,715,1.669,995,2.834,1086,2.683,1309,3.155,1371,5.095,1490,2.913,1549,3.694,1702,2.308,2188,2.668,2482,2.913,2483,4.49,2484,5.15,2485,4.49,2486,5.15,2487,5.15,2488,6.039,2489,5.181,2490,5.181,2491,5.181,2492,5.181,2493,4.49,2494,3.741,2495,3.741,2496,3.741,2497,3.741,2498,3.741,2499,3.741,2500,3.741,2501,3.741,2502,3.741,2503,3.741,2504,4.49,2505,4.49,2506,3.242,2507,3.242,2508,4.49,2509,3.242,2510,3.242,2511,3.242,2512,3.242,2513,3.242,2514,3.242,2515,3.242,2516,3.242,2517,3.242,2518,3.242,2519,3.242,2520,5.943,2521,4.49,2522,3.741,2523,3.741,2524,3.741]],["title/modules/StepbarModule.html",[366,1.187,1603,2.574]],["body/modules/StepbarModule.html",[3,0.181,4,0.181,5,0.159,6,0.093,15,0.016,16,0.651,18,0.515,24,1.171,32,0.204,73,0.01,100,0.065,112,0.012,113,0.01,343,1.673,351,2.648,356,1.607,367,2.354,368,1.891,369,2.425,373,2.644,374,2.058,375,1.814,377,2.644,378,2.231,379,2.142,380,2.644,381,2.058,383,3.191,384,2.469,385,2.469,386,1.976,404,1.372,437,2.248,567,2.469,1036,2.812,1039,2.469,1040,2.354,1043,2.595,1044,3.256,1600,2.595,1603,5.219,1613,2.733,1614,3.256,1616,2.886,1625,2.886,1868,2.733,2163,2.733,2167,2.595,2168,3.486,2169,3.486,2525,4.572,2526,4.572,2527,5.276,2528,4.572,2529,5.276,2530,5.276]],["title/components/SynthesisComponent.html",[264,0.594,353,1.339]],["body/components/SynthesisComponent.html",[3,0.173,4,0.173,5,0.151,6,0.121,11,0.491,15,0.015,16,0.411,18,0.491,32,0.195,73,0.012,100,0.062,112,0.012,113,0.01,124,1.259,127,1.194,233,2.468,251,1.456,253,2.167,260,1.004,264,1.049,265,1.732,266,2.052,267,2.052,268,2.052,270,1.965,271,2.674,273,2.459,275,2.459,279,1.399,289,1.032,290,1.399,324,2.052,325,2.569,326,2.356,327,2.052,328,2.938,329,2.052,330,1.344,331,2.052,332,1.732,333,2.569,334,1.597,335,1.597,336,1.597,337,2.052,338,1.732,339,2.052,340,1.597,341,2.052,342,1.732,343,1.597,344,2.569,345,1.805,346,2.052,347,1.732,348,1.732,349,1.965,350,2.052,351,1.663,352,2.052,353,2.479,354,2.052,355,1.732,356,1.92,357,2.052,358,1.732,359,1.732,360,1.732,361,2.052,362,1.732,363,2.052,364,2.052,365,2.052,691,3.22,1309,3.546,2531,4.365,2532,6.304,2533,6.881,2534,6.304,2535,5.037,2536,5.037]],["title/modules/SynthesisModule.html",[366,1.187,2537,2.778]],["body/modules/SynthesisModule.html",[3,0.177,4,0.177,5,0.155,6,0.091,15,0.016,16,0.649,18,0.503,24,1.145,32,0.2,73,0.01,100,0.064,112,0.012,113,0.01,343,1.636,353,2.751,356,1.572,367,3.4,368,1.849,369,2.392,373,2.608,374,2.013,375,1.774,377,2.608,378,2.201,379,2.113,380,2.608,381,2.013,383,3.147,384,2.415,385,2.415,386,1.949,404,1.342,437,2.199,567,2.415,1036,2.794,1039,2.415,1040,2.303,1043,2.538,1044,3.184,1600,2.538,1613,2.673,1614,3.184,1616,2.823,1625,2.823,1868,2.673,2163,3.946,2167,2.538,2168,3.41,2169,3.41,2537,5.728,2538,4.472,2539,4.472,2540,5.161,2541,4.472,2542,5.161,2543,5.161]],["title/components/SyntheticDrawingComponent.html",[264,0.594,355,1.339]],["body/components/SyntheticDrawingComponent.html",[3,0.068,4,0.068,5,0.06,6,0.134,11,0.194,12,0.47,14,0.899,15,0.016,16,0.447,18,0.194,32,0.077,38,1.762,41,0.85,45,0.609,51,2.3,52,1.255,54,0.715,55,1.317,65,1.134,73,0.008,94,2.249,99,1.033,100,0.025,103,1.67,112,0.006,113,0.006,116,0.561,117,1.168,120,0.66,123,0.745,124,0.498,125,2.56,127,0.346,131,1.091,132,1.374,133,1.056,135,0.806,156,0.85,157,1.396,167,1.033,173,1.156,180,2.679,186,1.764,190,1.202,217,1.258,231,0.89,233,2.156,251,1.504,253,1.109,257,2.342,260,1.203,264,0.711,265,0.686,266,0.813,267,0.813,268,0.813,270,0.778,271,2.337,273,1.258,275,1.258,279,0.716,281,1.869,289,1.23,290,1.446,302,3.383,304,3.383,324,0.813,325,1.314,326,1.205,327,0.813,328,1.9,329,0.813,330,1.28,331,0.813,332,0.686,333,1.314,334,0.632,335,0.632,336,0.632,337,0.813,338,0.686,339,0.813,340,0.632,341,0.813,342,0.686,343,0.632,344,1.314,345,0.715,346,0.813,347,0.686,348,0.686,349,0.778,350,0.813,351,0.658,352,0.813,353,0.686,354,0.813,355,1.604,356,1.94,357,0.813,358,0.686,359,2.658,360,0.686,361,0.813,362,0.686,363,0.813,364,0.813,365,0.813,375,0.686,398,2.31,406,1.622,414,1.156,428,0.518,436,0.89,461,1.553,468,1.23,497,1.156,507,2.987,518,1.728,527,1.317,588,1.23,589,4.677,593,3.381,594,0.933,595,2.878,596,1.728,599,1.553,601,1.728,604,1.728,608,1.728,611,3.62,613,1.728,617,1.728,620,2.703,621,1.728,631,1.422,655,2.3,696,1.317,704,1.99,730,1.553,731,1.422,771,2.353,818,2.511,821,2.505,824,3.518,825,1.422,855,1.317,876,1.9,887,1.728,889,2.895,893,1.728,896,2.511,925,1.422,933,1.422,936,2.353,1004,3.632,1086,2.652,1089,1.553,1267,1.728,1345,2.3,1479,1.728,1554,1.728,1565,1.422,1571,3.081,1577,1.553,1580,2.795,1582,1.728,1585,2.895,1633,2.878,1634,3.907,1635,3.907,1636,3.284,1637,2.895,1638,3.326,1641,2.131,1648,3.652,1696,1.422,1698,2.801,1787,1.317,1988,1.553,1995,2.795,2027,1.553,2048,4.042,2087,2.795,2167,3.728,2328,2.511,2351,3.518,2361,4.042,2377,1.728,2396,3.988,2406,1.728,2410,2.795,2411,2.795,2413,1.728,2415,2.795,2449,4.042,2544,5.903,2545,1.728,2546,4.06,2547,3.225,2548,4.06,2549,4.06,2550,4.06,2551,4.06,2552,4.06,2553,3.225,2554,4.664,2555,3.225,2556,3.225,2557,2.795,2558,4.06,2559,5.479,2560,3.518,2561,1.994,2562,2.353,2563,3.225,2564,1.728,2565,3.225,2566,1.994,2567,1.994,2568,3.225,2569,1.994,2570,1.994,2571,1.994,2572,3.225,2573,1.994,2574,4.06,2575,3.225,2576,1.994,2577,3.225,2578,1.994,2579,2.795,2580,1.994,2581,1.994,2582,3.225,2583,1.994,2584,1.994,2585,1.994,2586,1.994,2587,1.994,2588,1.994,2589,1.994,2590,1.994,2591,1.994,2592,1.994,2593,1.994,2594,1.994,2595,1.994,2596,1.994,2597,1.994,2598,1.994,2599,1.553,2600,1.994,2601,1.728,2602,1.994,2603,1.994,2604,1.994,2605,1.994,2606,1.994,2607,3.225,2608,1.994,2609,1.994,2610,4.06,2611,3.225,2612,1.994,2613,3.225,2614,1.728,2615,1.994,2616,1.994,2617,1.994,2618,1.728,2619,1.728,2620,1.994,2621,1.994,2622,1.994,2623,1.994,2624,1.994,2625,1.728,2626,1.553,2627,1.994,2628,1.994,2629,1.994,2630,1.994,2631,1.994,2632,1.994,2633,3.225,2634,1.994,2635,1.994,2636,1.994,2637,1.994,2638,5.121,2639,1.994,2640,3.225,2641,1.994,2642,5.479,2643,3.225,2644,5.121,2645,4.664,2646,5.479,2647,1.994,2648,5.121,2649,4.664,2650,1.994,2651,3.225,2652,1.994,2653,1.994,2654,3.225,2655,3.225,2656,5.479,2657,1.994,2658,1.994,2659,1.994,2660,1.994,2661,1.994,2662,1.994,2663,1.994,2664,1.994,2665,1.994,2666,1.994,2667,1.994,2668,4.06,2669,1.994,2670,5.121,2671,1.994,2672,4.06,2673,1.994,2674,1.994,2675,1.994,2676,1.994,2677,1.994,2678,1.994,2679,1.994,2680,1.994,2681,1.994,2682,1.994,2683,1.994,2684,1.994,2685,1.994,2686,1.994,2687,1.994,2688,1.994,2689,1.994,2690,3.225,2691,1.994,2692,1.994,2693,1.994,2694,1.994,2695,1.994,2696,1.994,2697,1.994,2698,1.994,2699,3.225,2700,1.994,2701,6.004,2702,1.994,2703,3.225,2704,1.994,2705,1.994,2706,1.994,2707,1.994,2708,1.994,2709,1.994,2710,1.994,2711,1.994,2712,3.225,2713,1.994,2714,3.225,2715,1.994,2716,3.225,2717,3.225,2718,3.225,2719,3.225,2720,3.225,2721,3.225,2722,3.225,2723,3.225,2724,1.994,2725,1.994,2726,1.994,2727,4.664,2728,6.004,2729,1.994,2730,1.994,2731,3.225,2732,1.994,2733,1.994,2734,1.994,2735,1.994,2736,1.994]],["title/components/SyntheticDrawingFormComponent.html",[264,0.594,358,1.339]],["body/components/SyntheticDrawingFormComponent.html",[3,0.114,4,0.114,5,0.1,6,0.13,11,0.323,12,0.693,14,0.807,15,0.016,16,0.525,18,0.323,23,2.756,24,0.735,32,0.128,40,3.75,41,1.411,52,0.861,65,1.357,73,0.009,94,1.854,100,0.041,103,2.88,110,2.59,112,0.009,113,0.006,114,2.476,116,1.885,117,0.706,120,1.139,124,0.828,127,0.575,131,1.811,156,1.411,158,2.043,183,1.093,190,1.007,233,2.352,235,1.715,251,1.284,253,1.635,260,1.162,264,0.926,265,1.139,266,1.349,267,1.349,268,1.349,270,1.292,271,2.549,273,1.854,275,1.854,279,1.055,281,2.756,289,1.245,290,1.428,294,2.462,324,1.349,325,1.937,326,1.777,327,1.349,328,2.476,329,1.349,330,1.186,331,1.349,332,1.139,333,1.937,334,1.05,335,1.05,336,1.05,337,1.349,338,1.139,339,1.349,340,1.05,341,1.349,342,1.139,343,1.05,344,1.937,345,1.187,346,1.349,347,1.139,348,1.139,349,1.292,350,1.349,351,1.093,352,1.349,353,1.139,354,1.349,355,1.139,356,2.222,357,1.349,358,2.09,359,2.759,360,1.139,361,1.349,362,1.139,363,1.349,364,1.349,365,1.349,398,0.969,406,0.932,428,0.861,449,2.87,496,2.87,506,2.6,588,2.043,589,4.558,595,3.971,607,4.12,620,3.731,630,2.6,631,2.361,633,2.482,635,4.82,636,4.12,658,3.135,681,2.169,691,2.603,696,2.188,771,1.92,818,4.331,821,2.933,855,2.188,1005,2.579,1006,2.579,1007,2.579,1309,2.989,1574,3.702,1591,2.87,1636,2.6,1671,3.39,1683,3.39,1684,2.361,1698,2.6,1724,4.12,2058,2.87,2117,4.12,2167,3.632,2188,2.361,2481,3.966,2560,4.82,2562,3.224,2564,4.12,2599,2.579,2614,2.87,2618,4.12,2626,2.579,2737,5.752,2738,2.87,2739,5.562,2740,5.562,2741,5.562,2742,5.562,2743,5.562,2744,6.078,2745,6.436,2746,6.078,2747,3.312,2748,4.754,2749,3.312,2750,3.312,2751,3.312,2752,3.312,2753,3.312,2754,3.312,2755,3.312,2756,3.312,2757,4.754,2758,3.312,2759,4.754,2760,3.312,2761,3.312,2762,3.312,2763,4.754,2764,3.312,2765,3.312,2766,2.87,2767,3.312,2768,3.312,2769,3.312,2770,3.312,2771,3.312,2772,3.312,2773,3.312,2774,3.312,2775,3.312,2776,3.312,2777,3.312,2778,3.312,2779,6.078,2780,4.754,2781,3.312,2782,4.754,2783,3.312,2784,3.312,2785,3.312,2786,3.312,2787,3.312,2788,3.312,2789,4.754,2790,3.312,2791,3.312,2792,3.312,2793,3.312,2794,3.312,2795,6.078,2796,3.312,2797,3.312,2798,3.312,2799,3.312]],["title/injectables/SyntheticDrawingFormService.html",[17,1.013,2562,2.258]],["body/injectables/SyntheticDrawingFormService.html",[3,0.134,4,0.134,5,0.117,6,0.131,11,0.381,12,0.778,14,0.918,15,0.016,16,0.533,17,1.388,18,0.381,32,0.151,34,1.4,45,1.007,48,1.389,52,1.239,73,0.007,75,3.094,82,3.094,94,2.082,100,0.075,112,0.01,113,0.007,116,1.502,117,1.297,120,1.584,125,1.913,127,1.055,157,2.091,179,3.574,183,2.331,190,1.239,231,1.743,251,1.509,257,2.372,260,1.172,264,0.595,279,1.185,289,1.245,290,0.867,330,1.297,359,2.566,388,2.024,406,1.838,428,1.836,433,1.829,442,2.137,443,2.137,497,2.265,504,2.265,505,2.265,506,2.137,507,2.024,512,3.806,532,3.294,588,2.411,589,4.606,593,4.032,594,2.846,630,2.92,631,2.786,633,2.382,746,3.043,815,2.581,840,2.137,874,3.386,1014,3.043,1086,2.765,1216,2.786,1476,4.626,1636,3.954,1640,2.786,1641,2.581,1698,3.863,2167,3.671,2307,3.386,2423,3.386,2424,3.386,2425,3.386,2557,4.626,2562,3.094,2579,4.626,2599,3.043,2625,3.386,2626,5.63,2766,4.626,2800,3.386,2801,6.535,2802,5.338,2803,5.338,2804,3.907,2805,5.338,2806,3.907,2807,7.55,2808,5.338,2809,6.535,2810,3.907,2811,3.907,2812,3.907,2813,4.626,2814,3.907,2815,3.907,2816,3.907,2817,3.907,2818,3.907,2819,3.907,2820,3.907,2821,3.907,2822,3.907,2823,3.907,2824,3.907,2825,3.907,2826,3.907,2827,3.907,2828,3.907,2829,3.907,2830,3.907,2831,3.907,2832,3.907,2833,5.338,2834,3.907,2835,3.907,2836,3.907,2837,3.907,2838,3.907,2839,3.907]],["title/modules/SyntheticDrawingModule.html",[366,1.187,2163,2.018]],["body/modules/SyntheticDrawingModule.html",[3,0.178,4,0.178,5,0.156,6,0.091,15,0.016,16,0.631,18,0.506,24,1.152,32,0.201,73,0.01,100,0.064,112,0.012,113,0.01,355,2.753,356,2.124,358,2.753,359,2.506,368,1.859,369,2.4,373,2.617,374,2.024,375,1.784,377,2.617,378,2.208,379,2.12,380,2.617,381,2.024,386,1.956,589,3.202,696,3.428,1036,2.852,1038,2.866,1041,4.579,1043,2.552,2163,4.176,2167,2.552,2544,4.041,2562,4.423,2737,4.041,2840,4.497,2841,4.497,2842,4.497,2843,4.497,2844,5.189,2845,5.189,2846,5.189,2847,5.189]],["title/interfaces/Template.html",[0,0.865,124,0.974]],["body/interfaces/Template.html",[0,1.613,2,2.297,3,0.177,4,0.177,5,0.155,6,0.091,9,1.844,11,0.502,12,0.931,14,0.77,15,0.016,32,0.289,54,2.29,73,0.01,98,2.796,100,0.063,112,0.012,113,0.01,114,2.603,116,2.142,117,1.097,120,1.622,123,1.189,124,1.597,125,1.844,127,0.893,143,2.99,157,1.77,159,2.297,181,2.815,182,3.142,183,1.699,185,2.815,187,3.142,190,1.258,198,2.815,218,2.815,219,3.176,220,3.4,221,3.4,222,4.221,223,3.4,224,2.99,225,3.942,226,3.4,227,3.4,228,2.531,229,3.176,230,2.815,231,2.297,232,2.983,233,1.568,234,3.176,235,2.666,236,3.4,237,2.983,238,3.4,239,3.4,240,3.4,241,3.176,242,3.4,243,3.4,244,3.4,245,3.4,246,3.942,247,3.176,248,3.4,249,2.983,250,3.4,251,1.678,252,2.666,253,1.77,254,3.176,255,2.815,256,3.4,257,2.007,258,3.4]],["title/modules/ToastrTestingModule.html",[366,1.187,1928,2.258]],["body/modules/ToastrTestingModule.html",[3,0.207,4,0.161,5,0.181,6,0.083,9,1.682,15,0.016,16,0.593,17,1.567,18,0.458,24,1.042,26,1.83,32,0.281,45,1.138,48,1.522,53,3.135,65,1.309,73,0.009,77,2.567,91,1.912,100,0.092,106,2.308,112,0.011,113,0.009,127,0.815,129,1.32,133,1.22,135,1.507,186,2.567,259,1.912,279,1.042,284,1.912,290,1.042,366,1.429,368,1.682,378,1.614,379,1.99,386,1.429,387,2,404,1.22,413,2.964,416,3.297,428,1.827,433,2.196,450,2.964,458,2.896,481,2.196,504,3.494,505,3.494,627,2.69,657,2.308,658,2.821,681,2.351,840,2.567,970,3.494,975,2.72,1038,2.094,1628,2.431,1629,2.896,1760,2,1763,2.567,1782,2.72,1841,3.719,1843,2.896,1845,2.896,1895,2.196,1902,2.72,1903,2.72,1904,4.642,1905,3.101,1906,3.101,1907,3.101,1908,3.101,1909,3.101,1910,4.399,1911,3.101,1912,3.101,1913,3.101,1914,2.72,1915,3.101,1916,2.896,1917,3.101,1918,3.982,1919,3.982,1920,3.982,1921,3.101,1922,2.72,1923,3.494,1924,3.982,1925,3.101,1926,3.101,1927,3.101,1928,3.494,1929,2.896,1930,3.101,1931,2.72,1932,2.72,1933,2.567,1934,2.896,1935,2.896,1936,2.896,1937,2.896,2848,4.693]],["title/interfaces/Validity.html",[0,0.865,466,2.258]],["body/interfaces/Validity.html",[0,1.093,2,2.198,3,0.169,4,0.169,5,0.148,6,0.087,11,0.48,12,0.906,14,0.908,15,0.016,16,0.507,18,0.48,30,4.275,32,0.191,45,1.35,46,2.551,48,0.969,52,1.233,65,0.969,73,0.009,94,2.656,100,0.061,112,0.012,113,0.009,120,1.543,123,1.138,127,0.855,129,1.386,135,1.231,233,1.5,253,1.693,264,0.947,271,1.626,273,1.921,275,1.921,290,1.093,293,2.855,294,2.551,295,2.551,296,2.855,351,1.626,398,1.819,466,4.146,469,3.039,504,2.855,505,2.855,506,2.694,507,2.551,594,3.348,691,2.909,704,3.835,714,2.551,715,2.198,995,3.4,1309,2.422,1371,4.432,1490,3.836,1549,5.259,1702,3.039,2188,3.512,2482,3.836,2483,4.268,2484,4.268,2485,4.268,2486,4.268,2487,4.268,2488,5.902,2493,4.268,2504,5.387,2505,5.387,2506,4.268,2507,4.268,2508,5.387,2509,4.268,2510,4.268,2511,4.268,2512,4.268,2513,4.268,2514,4.268,2515,4.268,2516,4.268,2517,4.268,2518,4.268,2519,4.268]],["title/components/ViewComponent.html",[264,0.594,360,1.339]],["body/components/ViewComponent.html",[3,0.173,4,0.173,5,0.152,6,0.121,11,0.492,15,0.015,16,0.411,18,0.492,32,0.195,73,0.012,100,0.062,112,0.012,113,0.01,124,1.261,127,1.195,233,2.468,251,1.457,253,2.169,260,1.005,264,1.049,265,1.734,266,2.055,267,2.055,268,2.055,270,1.967,271,2.675,273,2.461,275,2.461,279,1.4,289,1.033,290,1.4,324,2.055,325,2.571,326,2.358,327,2.055,328,2.94,329,2.055,330,1.345,331,2.055,332,1.734,333,2.571,334,1.599,335,1.599,336,1.599,337,2.055,338,1.734,339,2.055,340,1.599,341,2.055,342,1.734,343,1.599,344,2.571,345,1.807,346,2.055,347,1.734,348,1.734,349,1.967,350,2.055,351,1.665,352,2.055,353,1.734,354,2.055,355,1.734,356,1.922,357,2.055,358,1.734,359,1.734,360,2.481,361,2.055,362,1.734,363,2.055,364,2.055,365,2.055,691,3.222,1309,3.548,2619,5.468,2849,4.371,2850,6.885,2851,6.31,2852,5.044,2853,5.044]],["title/interfaces/WarnFn.html",[0,0.865,33,2.574]],["body/interfaces/WarnFn.html",[0,1.259,1,3.501,2,1.909,3,0.147,4,0.147,5,0.129,6,0.075,7,2.827,8,2.827,9,2.282,10,5.031,13,2.64,15,0.016,16,0.463,17,1.112,18,0.417,19,2.48,20,4.419,21,5.495,22,5.762,23,3.691,24,0.95,25,3.332,26,2.752,27,3.332,28,2.34,29,2.64,30,2.48,31,3.332,32,0.273,33,3.749,34,1.533,35,3.051,36,3.498,37,3.332,38,1.722,39,3.332,40,2.64,41,2.418,42,3.332,43,2.827,44,3.332,45,1.396,46,3.298,47,4.791,48,1.252,49,3.332,50,3.749,51,4.046,52,1.228,53,1.909,54,1.533,55,2.827,56,2.827,57,3.332,58,4.419,59,4.046,60,4.046,61,3.051,62,2.002,63,3.332,64,3.332,65,1.116,66,3.104,67,3.332,68,2.34,69,2.48,70,3.332,71,2.64,72,3.051,73,0.011,74,3.298,75,2.48,76,3.332,77,3.104,78,3.332,79,3.332,80,2.48,81,2.34,82,2.48,83,3.332,84,4.419,85,3.332,86,4.419,87,3.332,88,3.332,89,3.332,90,4.419,91,1.743,92,4.046,93,2.64,94,1.669,95,2.64,96,2.216,97,3.332,98,1.533,99,2.216,100,0.053,101,2.34,102,3.332,103,2.939,104,4.419,105,3.332,106,2.791,107,2.64,108,3.051,109,3.332,110,1.823,111,3.332,112,0.011,113,0.008]],["title/components/WelcomeComponent.html",[264,0.594,362,1.339]],["body/components/WelcomeComponent.html",[3,0.099,4,0.099,5,0.171,6,0.128,11,0.282,12,0.626,14,0.819,15,0.016,16,0.634,18,0.282,19,3.529,24,0.954,29,1.781,32,0.112,36,2.293,45,0.97,48,1.428,52,1.156,56,2.841,65,1.197,73,0.008,100,0.036,112,0.008,113,0.005,116,0.812,117,1.096,120,0.591,124,1.423,125,1.541,127,0.501,132,2.189,133,1.48,156,2.817,190,1.156,217,1.677,225,1.781,233,2.305,234,2.653,251,0.993,253,1.478,255,1.579,260,1.142,264,0.783,265,0.992,266,1.176,267,1.176,268,1.176,270,1.126,271,2.498,273,1.677,275,1.677,279,0.954,284,2.48,289,1.166,290,1.264,324,1.176,325,1.752,326,1.607,327,1.176,328,2.32,329,1.176,330,1.298,331,1.176,332,0.992,333,1.752,334,0.915,335,1.629,336,2.096,337,1.176,338,0.992,339,1.176,340,0.915,341,1.176,342,0.992,343,0.915,344,1.752,345,1.034,346,1.176,347,0.992,348,0.992,349,1.126,350,1.176,351,0.953,352,1.176,353,0.992,354,1.176,355,0.992,356,1.31,357,1.176,358,0.992,359,0.992,360,0.992,361,1.176,362,1.957,363,2.48,364,1.176,365,1.176,390,1.478,398,1.666,402,1.781,404,1.719,406,1.446,407,2.8,414,3.3,428,1.659,430,1.495,436,1.288,437,1.23,440,1.351,441,1.351,452,3.726,459,1.907,492,3.491,527,2.841,594,1.351,633,1.919,657,2.114,658,2.405,681,2.374,691,2.405,692,1.781,693,2.248,694,1.781,714,2.227,718,3.7,719,2.653,792,4.217,840,2.352,927,3.348,960,3.066,1123,4.06,1199,2.653,1293,3.348,1306,4.433,1309,2.8,1313,3.251,1317,5.04,1318,4.97,1323,1.781,1324,1.781,1328,4.433,1334,2.502,1335,2.502,1336,2.502,1342,4.934,1343,4.934,1344,3.348,1346,4.06,1373,5.407,1407,5.148,1412,2.248,1413,3.726,1417,2.502,1487,2.502,1518,4.741,1672,3.17,1877,2.653,1933,2.81,1968,3.664,1970,1.907,1988,2.248,2028,2.502,2037,2.502,2049,3.066,2131,3.066,2209,2.248,2230,4.453,2245,3.726,2262,2.502,2300,2.502,2373,3.726,2601,3.726,2813,2.502,2854,2.502,2855,5.138,2856,4.3,2857,5.138,2858,6.088,2859,6.088,2860,4.3,2861,4.3,2862,5.693,2863,2.887,2864,6.383,2865,4.3,2866,4.3,2867,2.887,2868,4.3,2869,2.887,2870,2.887,2871,2.887,2872,2.887,2873,2.887,2874,2.887,2875,2.887,2876,2.887,2877,2.887,2878,4.3,2879,2.887,2880,2.887,2881,4.3,2882,2.887,2883,2.887,2884,4.3,2885,2.887,2886,2.887,2887,2.887,2888,2.887,2889,5.138,2890,2.887,2891,2.887,2892,2.887,2893,2.887,2894,4.3,2895,4.3,2896,2.887,2897,4.3,2898,3.726,2899,4.3,2900,4.3,2901,4.3,2902,4.3,2903,4.3,2904,4.3,2905,4.3,2906,4.3,2907,4.3,2908,4.3,2909,4.3,2910,4.3,2911,4.3,2912,4.3,2913,4.3,2914,4.3,2915,4.3]],["title/modules/WelcomeModule.html",[366,1.187,2916,2.778]],["body/modules/WelcomeModule.html",[3,0.169,4,0.169,5,0.148,6,0.087,15,0.016,16,0.653,18,0.479,24,1.377,32,0.19,73,0.009,100,0.06,112,0.012,113,0.009,271,1.622,343,1.557,356,1.496,362,2.733,367,3.358,368,1.76,369,2.319,373,2.529,374,1.916,375,1.689,377,2.529,378,2.134,379,2.048,380,2.529,381,1.916,383,3.052,384,2.299,385,2.299,386,1.89,404,1.277,437,2.093,517,3.246,567,2.299,1030,4.117,1036,2.754,1038,2.192,1039,2.299,1040,2.192,1041,4.425,1043,2.416,1044,3.031,1600,3.701,1607,3.503,1613,2.544,1614,3.031,1616,2.687,1625,2.687,1760,2.093,1868,2.544,1874,4.833,1875,4.833,1876,4.833,1877,3.031,2163,2.544,2167,2.416,2168,3.246,2169,3.246,2916,5.733,2917,4.257,2918,4.913,2919,4.257,2920,4.257,2921,4.913,2922,4.913]],["title/coverage.html",[2923,4.617]],["body/coverage.html",[0,1.678,1,2.306,5,0.112,6,0.145,7,4.237,8,4.237,14,0.45,15,0.016,17,1.893,33,2.469,34,1.339,38,2.22,73,0.007,98,1.339,100,0.094,101,2.044,112,0.01,113,0.007,114,1.523,115,4.236,116,1.051,124,0.934,133,0.972,141,2.665,175,2.166,218,2.044,219,4.155,252,1.936,264,1.185,265,1.285,269,3.239,332,1.285,334,1.185,336,1.883,338,1.285,340,1.185,342,1.285,345,1.339,347,1.285,348,1.285,351,1.234,353,1.285,355,1.285,358,1.285,359,2.205,360,1.285,362,1.285,387,1.592,389,3.239,390,1.285,391,3.239,404,0.972,428,0.972,440,1.749,466,2.166,540,2.665,541,3.239,588,2.306,589,3.957,590,3.239,627,1.668,630,2.044,634,3.239,640,2.306,692,2.306,900,2.665,901,4.032,905,2.166,1067,3.239,1221,3.239,1222,3.239,1300,4.032,1301,2.469,1302,3.239,1311,2.306,1313,1.838,1352,2.91,1353,3.239,1420,3.239,1421,3.239,1520,6.19,1609,2.665,1613,1.936,1630,4.236,1633,2.306,1636,2.044,1741,2.665,1742,3.692,1765,2.665,1865,2.665,1866,4.236,1878,2.665,1886,2.665,1902,2.166,1903,3.903,1914,2.166,1922,2.166,1923,2.166,1931,2.166,1949,3.239,2067,2.91,2068,4.032,2153,3.239,2167,2.921,2170,4.032,2171,4.032,2201,2.91,2349,2.91,2350,3.239,2354,3.239,2482,4.032,2531,3.239,2544,2.91,2545,3.239,2562,2.166,2737,2.91,2738,3.239,2800,3.239,2849,3.239,2854,3.239,2923,3.239,2924,3.737,2925,3.737,2926,5.177,2927,3.737,2928,3.737,2929,3.239,2930,3.737,2931,6.734,2932,3.737,2933,5.177,2934,6.734,2935,3.737,2936,3.239,2937,3.737,2938,3.737,2939,3.239,2940,3.737,2941,3.737,2942,6.413,2943,3.737,2944,6.413,2945,5.94,2946,7.485,2947,3.737,2948,4.487,2949,5.177,2950,5.177,2951,3.239,2952,4.487,2953,3.737,2954,5.177,2955,3.737,2956,3.737,2957,3.737]],["title/dependencies.html",[369,1.752,2958,2.815]],["body/dependencies.html",[15,0.016,18,0.539,24,1.228,73,0.011,112,0.013,113,0.011,271,1.826,293,3.206,294,2.865,295,3.458,296,3.206,335,2.117,369,2.067,381,2.157,384,2.588,385,2.588,433,2.588,450,2.72,517,3.654,567,2.588,1549,3.944,1760,3.056,1839,5.786,1877,3.413,1996,4.307,1997,4.307,2053,4.793,2089,4.793,2316,5.2,2396,4.307,2399,4.307,2481,4.761,2521,4.793,2959,5.531,2960,6.792,2961,5.531,2962,5.531,2963,5.531,2964,5.531,2965,5.531,2966,5.531,2967,5.531,2968,6.677,2969,5.531,2970,5.531,2971,6.677,2972,5.531,2973,5.531,2974,5.531,2975,5.531,2976,5.531,2977,5.531,2978,5.531,2979,5.531,2980,5.531,2981,5.531,2982,5.531,2983,5.531,2984,5.531]],["title/classes/emptyForm.html",[100,0.048,252,2.018]],["body/classes/emptyForm.html",[0,1.593,3,0.171,4,0.171,5,0.149,6,0.13,9,1.781,11,0.485,12,0.911,14,0.865,15,0.016,32,0.286,54,2.24,73,0.009,98,2.802,100,0.061,112,0.012,113,0.009,114,2.547,116,2.081,117,1.458,120,1.631,123,1.148,124,1.242,125,1.781,127,1.187,143,3.359,157,1.709,159,2.218,181,2.719,182,3.529,183,1.641,185,2.719,187,3.074,190,1.238,198,2.719,218,2.719,219,3.067,220,3.284,221,3.284,222,4.13,223,3.284,224,2.926,225,3.858,226,3.284,227,3.284,228,2.444,229,3.067,230,2.719,231,2.218,232,2.881,233,1.514,234,3.067,235,2.574,236,3.284,237,2.881,238,3.284,239,3.284,240,3.284,241,3.067,242,3.284,243,3.284,244,3.284,245,3.284,246,4.428,247,3.067,248,3.284,249,2.881,250,3.284,251,1.148,252,3.238,253,2.15,254,3.067,255,2.719,256,3.284,257,1.939,258,3.284,259,2.025,260,1.143,2985,6.252,2986,4.971,2987,4.971]],["title/miscellaneous/enumerations.html",[2988,1.777,2989,4.063]],["body/miscellaneous/enumerations.html",[3,0.208,6,0.107,11,0.591,15,0.015,26,2.365,38,1.64,52,1.445,62,2.838,73,0.012,112,0.013,113,0.012,217,2.365,481,2.838,627,2.706,876,2.838,1384,4.324,1742,4.324,1751,5.491,1763,3.316,1764,4.722,1765,4.324,2988,3.316,2989,5.254,2990,6.063]],["title/miscellaneous/functions.html",[694,2.893,2988,1.777]],["body/miscellaneous/functions.html",[6,0.11,7,4.125,8,4.738,11,0.609,15,0.014,35,4.452,47,4.125,73,0.012,112,0.014,113,0.012,117,1.331,330,1.331,406,1.757,694,3.852,2951,6.215,2988,3.415,2991,6.244]],["title/index.html",[11,0.317,2992,3.248,2993,3.248]],["body/index.html",[4,0.169,15,0.014,28,3.721,53,2.192,66,3.394,73,0.009,75,3.597,107,3.031,112,0.012,113,0.009,151,5.096,230,2.687,264,1.037,330,1.048,335,2.265,375,1.689,390,2.628,428,1.277,446,3.031,475,4.257,481,2.299,536,4.257,704,3.829,715,2.769,760,3.826,775,4.257,825,3.503,840,4.18,842,4.851,854,4.257,881,2.687,913,3.826,925,4.425,976,3.503,1202,3.246,1204,6.193,1274,3.246,1475,4.833,1481,3.826,1482,4.257,1623,3.246,1702,3.031,1760,2.093,1777,5.951,1789,5.565,1895,2.299,1932,2.848,1970,3.246,2002,4.257,2003,4.257,2286,4.257,2460,5.378,2481,5.514,2898,5.378,2958,4.257,2960,4.257,2994,4.913,2995,7.804,2996,4.913,2997,4.913,2998,4.913,2999,4.913,3000,4.913,3001,4.913,3002,4.913,3003,4.913,3004,4.913,3005,4.913,3006,4.913,3007,4.913,3008,4.913,3009,4.913,3010,6.206,3011,4.913,3012,4.913,3013,4.913,3014,4.913,3015,6.206,3016,4.913,3017,4.913,3018,4.913,3019,6.206,3020,4.913,3021,4.913,3022,6.803,3023,4.913,3024,6.206,3025,7.37,3026,4.913,3027,4.913,3028,4.913,3029,4.913,3030,4.913,3031,4.913,3032,4.913,3033,4.913,3034,4.913,3035,4.913,3036,6.206,3037,6.206,3038,4.913,3039,4.913,3040,4.913,3041,4.913,3042,6.803,3043,3.826,3044,4.913]],["title/modules.html",[368,1.909]],["body/modules.html",[15,0.013,73,0.011,112,0.013,113,0.011,295,4.21,367,2.558,368,2.054,503,4.464,1030,3.135,1036,2.142,1594,3.537,1600,2.819,1601,3.787,1602,3.787,1603,3.787,1698,3.135,1888,3.787,1928,3.323,2060,4.088,2163,2.969,2316,6.33,2537,4.088,2916,4.088,3045,8.129,3046,8.15]],["title/overview.html",[3043,4.149]],["body/overview.html",[2,1.705,15,0.016,73,0.007,112,0.01,113,0.007,133,1.683,251,0.882,259,1.557,265,2.471,332,2.471,334,2.278,338,2.471,340,2.278,342,2.471,345,2.575,347,2.471,348,2.471,351,2.372,353,2.471,355,2.471,358,2.471,360,2.471,362,2.471,367,3.354,368,1.369,369,1.964,370,3.311,371,3.311,372,3.311,373,2.142,374,1.49,375,1.313,387,2.561,388,1.979,404,1.562,599,2.975,1030,4.216,1031,3.311,1032,3.311,1033,3.311,1034,3.311,1035,3.311,1036,2.881,1125,2.975,1311,3.708,1313,2.955,1594,4.975,1595,3.311,1596,3.311,1597,3.311,1598,3.311,1599,3.311,1600,3.6,1601,5.196,1602,4.836,1603,4.836,1888,4.836,1897,3.311,1899,3.311,2060,5.124,2061,3.311,2062,3.311,2063,3.311,2148,3.311,2149,3.311,2150,3.311,2159,3.311,2160,3.311,2161,3.311,2162,3.311,2163,4.017,2474,3.311,2476,3.311,2477,3.311,2525,3.311,2526,3.311,2528,3.311,2537,5.413,2538,3.311,2539,3.311,2541,3.311,2562,3.483,2840,3.311,2841,3.311,2842,3.311,2843,3.311,2916,5.497,2917,3.311,2919,3.311,2920,3.311,2936,3.311,2939,3.311,2948,3.311,3043,2.975]],["title/miscellaneous/typealiases.html",[2988,1.777,3047,4.689]],["body/miscellaneous/typealiases.html",[6,0.109,11,0.604,14,0.931,15,0.014,73,0.014,112,0.014,113,0.012,326,2.667,438,6.185,594,3.519,2929,5.366,2988,3.387,3048,6.193,3049,7.52]],["title/miscellaneous/variables.html",[1787,3.097,2988,1.777]],["body/miscellaneous/variables.html",[5,0.214,6,0.126,11,0.43,14,0.779,15,0.016,26,1.719,34,2.62,36,1.967,45,1.295,52,1.349,65,1.401,73,0.008,96,2.283,110,1.879,112,0.011,113,0.008,115,3.144,125,2.315,126,4.127,129,1.24,135,1.447,141,4.127,142,3.433,143,3.422,144,4.127,145,3.144,146,3.433,147,5.343,148,3.144,149,2.555,150,3.433,151,3.144,152,4.127,153,1.879,154,3.433,155,3.433,156,1.879,157,1.516,158,2.72,159,1.967,160,3.433,161,5.032,162,5.032,163,5.081,164,5.032,165,3.433,166,4.507,167,3.787,168,3.433,169,3.433,170,3.433,171,3.433,172,3.433,173,3.355,174,3.433,190,1.349,413,2.168,428,1.784,440,2.709,624,4.269,729,3.433,905,3.355,926,2.912,1346,4.127,1672,3.571,1787,2.912,1866,3.144,1878,4.127,1879,3.433,1880,3.433,1881,3.433,1886,4.127,1887,3.433,1895,2.063,1903,2.555,1931,3.355,1932,2.555,1933,2.411,1934,2.72,1935,2.72,1936,2.72,1937,2.72,1968,3.144,1970,3.824,2046,4.507,2170,3.433,2171,4.507,2201,4.507,2202,3.82,2203,3.82,2204,3.82,2205,3.82,2206,5.016,2207,3.82,2208,3.82,2209,4.507,2210,3.82,2211,3.82,2212,5.016,2213,3.82,2214,5.016,2215,3.82,2216,3.82,2217,3.82,2218,3.82,2219,3.82,2220,3.82,2221,3.82,2952,3.82,2988,2.411,3050,4.409,3051,5.788,3052,4.409,3053,5.788,3054,4.409,3055,4.409,3056,4.409]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"dependencies.html":{},"classes/emptyForm.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":38,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"interfaces/WarnFn.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.0",{"_index":1937,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/variables.html":{}}}],["0.005",{"_index":1195,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["0.11.3",{"_index":2984,"title":{},"body":{"dependencies.html":{}}}],["0.2.1",{"_index":1896,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["0.25",{"_index":215,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["0.2665",{"_index":166,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["0.2s",{"_index":2139,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["0.4",{"_index":205,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["0.4.2",{"_index":2976,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":1162,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["0.8",{"_index":1688,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["0.87",{"_index":1138,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["0.9",{"_index":1090,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["0.9.0",{"_index":2962,"title":{},"body":{"dependencies.html":{}}}],["0.9.3",{"_index":2972,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2946,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":2928,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":2938,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2947,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":2932,"title":{},"body":{"coverage.html":{}}}],["0/17",{"_index":2954,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2942,"title":{},"body":{"coverage.html":{}}}],["0/20",{"_index":2927,"title":{},"body":{"coverage.html":{}}}],["0/22",{"_index":2941,"title":{},"body":{"coverage.html":{}}}],["0/23",{"_index":2955,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":2935,"title":{},"body":{"coverage.html":{}}}],["0/28",{"_index":2930,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2934,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2931,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2950,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2944,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2926,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2945,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2933,"title":{},"body":{"coverage.html":{}}}],["00000",{"_index":1382,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["00000048",{"_index":1381,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["0019554",{"_index":1402,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["0071394",{"_index":1390,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["00902",{"_index":1399,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["00902u",{"_index":1394,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["00b89c",{"_index":2059,"title":{},"body":{"components/NavbarComponent.html":{}}}],["01520",{"_index":1387,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["01520u",{"_index":1378,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["07",{"_index":1367,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["0px",{"_index":896,"title":{},"body":{"components/FormComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["1",{"_index":217,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/WelcomeComponent.html":{},"miscellaneous/enumerations.html":{}}}],["1+selectedsatellite.ecc)*selectedsatellite.sma).toprecision(3",{"_index":2913,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["1.1",{"_index":1097,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["1.1.0",{"_index":2973,"title":{},"body":{"dependencies.html":{}}}],["1.2.35",{"_index":2965,"title":{},"body":{"dependencies.html":{}}}],["1.6.3",{"_index":2980,"title":{},"body":{"dependencies.html":{}}}],["1.7",{"_index":1212,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["1/12",{"_index":2940,"title":{},"body":{"coverage.html":{}}}],["1/16",{"_index":2953,"title":{},"body":{"coverage.html":{}}}],["1/18",{"_index":2943,"title":{},"body":{"coverage.html":{}}}],["1/8",{"_index":2949,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":2937,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":173,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/DrawingDefault.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/SyntheticDrawingComponent.html":{},"miscellaneous/variables.html":{}}}],["10.0.0",{"_index":2969,"title":{},"body":{"dependencies.html":{}}}],["100",{"_index":167,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"miscellaneous/variables.html":{}}}],["1000",{"_index":1299,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["100px",{"_index":2710,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["100vh",{"_index":2123,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["10e",{"_index":1231,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["10e3",{"_index":1230,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["10px",{"_index":1580,"title":{},"body":{"components/LayoutComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["11",{"_index":2936,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["11.2.1",{"_index":2960,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["11.2.14",{"_index":2959,"title":{},"body":{"dependencies.html":{}}}],["111111",{"_index":2704,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["12",{"_index":2948,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["120.1784",{"_index":1391,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["1200",{"_index":1112,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["125",{"_index":626,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["12px",{"_index":2119,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["13.35847446723246",{"_index":1393,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["13.52697507613817",{"_index":1405,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["130.0589",{"_index":1389,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["138",{"_index":1149,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["14",{"_index":1125,"title":{},"body":{"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"overview.html":{}}}],["14.0",{"_index":191,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["14.0.0",{"_index":2978,"title":{},"body":{"dependencies.html":{}}}],["146",{"_index":1107,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["15",{"_index":599,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{},"overview.html":{}}}],["150",{"_index":2688,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["15px",{"_index":1586,"title":{},"body":{"components/LayoutComponent.html":{}}}],["180",{"_index":787,"title":{},"body":{"components/FormComponent.html":{},"classes/HelperFunctions.html":{}}}],["1mw",{"_index":108,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"interfaces/WarnFn.html":{}}}],["1px",{"_index":2121,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["2",{"_index":876,"title":{},"body":{"components/FormComponent.html":{},"classes/HelperFunctions.html":{},"injectables/JSatOrbLinkService.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{},"miscellaneous/enumerations.html":{}}}],["2.0.0",{"_index":2982,"title":{},"body":{"dependencies.html":{}}}],["2.0.3",{"_index":2975,"title":{},"body":{"dependencies.html":{}}}],["2.15",{"_index":1148,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["2.79",{"_index":1211,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["20",{"_index":1141,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["2021",{"_index":1366,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["2045",{"_index":1169,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["20px",{"_index":305,"title":{},"body":{"components/CardComponent.html":{}}}],["21200.78530898",{"_index":1380,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["21200.88552299",{"_index":1396,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["22t01:53:36",{"_index":1368,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["23.2",{"_index":1116,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["230.4",{"_index":1135,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["233.15",{"_index":1198,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["238",{"_index":1209,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["23t01:53:41",{"_index":1370,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["24",{"_index":625,"title":{},"body":{"classes/DrawingDefault.html":{},"classes/HelperFunctions.html":{}}}],["240",{"_index":2647,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["24px",{"_index":895,"title":{},"body":{"components/FormComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["25",{"_index":606,"title":{},"body":{"classes/DrawingDefault.html":{},"components/LayoutComponent.html":{}}}],["255",{"_index":323,"title":{},"body":{"components/CardComponent.html":{}}}],["25px",{"_index":1556,"title":{},"body":{"components/LayoutComponent.html":{}}}],["280",{"_index":1203,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["29.0114",{"_index":1404,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["294.1357",{"_index":1392,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["2mb",{"_index":2317,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["2px",{"_index":1575,"title":{},"body":{"components/LayoutComponent.html":{}}}],["3",{"_index":62,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"interfaces/WarnFn.html":{},"miscellaneous/enumerations.html":{}}}],["3.0",{"_index":1094,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["3.14159265358979323846",{"_index":1920,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["3.149",{"_index":170,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["3.986004418",{"_index":1233,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["30",{"_index":611,"title":{},"body":{"classes/DrawingDefault.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["30px",{"_index":1570,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["3273dc",{"_index":2134,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["33",{"_index":1287,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["35",{"_index":610,"title":{},"body":{"classes/DrawingDefault.html":{},"classes/FormsTemplate.html":{}}}],["35.0",{"_index":195,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["3600",{"_index":1292,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["361.2px",{"_index":311,"title":{},"body":{"components/CardComponent.html":{}}}],["37.8678",{"_index":1401,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["38.2840",{"_index":1403,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["396px",{"_index":2147,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["4",{"_index":1384,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["4.5",{"_index":1157,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["42",{"_index":2420,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["464646be",{"_index":2115,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["4a",{"_index":1375,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["4px",{"_index":2417,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["5",{"_index":627,"title":{},"body":{"classes/DrawingDefault.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["5,5",{"_index":2722,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["5.0.2",{"_index":2970,"title":{},"body":{"dependencies.html":{}}}],["5.15.3",{"_index":2966,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":1582,"title":{},"body":{"components/LayoutComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["508750488",{"_index":1908,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["55b776",{"_index":1593,"title":{},"body":{"components/LayoutComponent.html":{}}}],["58478",{"_index":1397,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["59",{"_index":2414,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["5f05",{"_index":31,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["5px",{"_index":2117,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["6",{"_index":1765,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["6.6.0",{"_index":2979,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2661,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["60)px",{"_index":2711,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["600",{"_index":1372,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["63",{"_index":1291,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["6378.137",{"_index":1235,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["64063e",{"_index":1395,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["65",{"_index":615,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["650",{"_index":1165,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["65065h",{"_index":1379,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["66.78",{"_index":1143,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["670551280",{"_index":1885,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["7.0.0",{"_index":2974,"title":{},"body":{"dependencies.html":{}}}],["73",{"_index":2412,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["7375b6219557",{"_index":3002,"title":{},"body":{"index.html":{}}}],["74357",{"_index":1383,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["75",{"_index":619,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["7d7d7d",{"_index":1576,"title":{},"body":{"components/LayoutComponent.html":{}}}],["8",{"_index":2939,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["8,${encodeuricomponent(json.stringify",{"_index":2326,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["80",{"_index":1555,"title":{},"body":{"components/LayoutComponent.html":{}}}],["800px",{"_index":2729,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["8080802e",{"_index":2127,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["85",{"_index":622,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SimpleDocumentationComponent.html":{}}}],["888888",{"_index":2723,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["9",{"_index":1004,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/SyntheticDrawingComponent.html":{}}}],["90.0154",{"_index":1388,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["90.1726",{"_index":1400,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["90px",{"_index":890,"title":{},"body":{"components/FormComponent.html":{}}}],["960",{"_index":2643,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["9991",{"_index":1398,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["9995",{"_index":1385,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["9]+([,][0",{"_index":1002,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["9]+)*([.][0",{"_index":1003,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["_blank",{"_index":2332,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["_components",{"_index":2548,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["_formtemplate",{"_index":637,"title":{},"body":{"components/FormComponent.html":{}}}],["_isinitialized",{"_index":920,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["_isnanospaceenabled",{"_index":1953,"title":{},"body":{"components/NavbarComponent.html":{}}}],["_powerin",{"_index":2549,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["_step",{"_index":2486,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["_validity",{"_index":2487,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["_value",{"_index":736,"title":{},"body":{"components/FormComponent.html":{}}}],["a:hover",{"_index":2108,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["aaa",{"_index":1408,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["above",{"_index":2020,"title":{},"body":{"components/NavbarComponent.html":{}}}],["abscissa",{"_index":1712,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["absolute",{"_index":1584,"title":{},"body":{"components/LayoutComponent.html":{}}}],["absolutely",{"_index":2837,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["abstract",{"_index":69,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"classes/FormsTemplate.html":{},"interfaces/WarnFn.html":{}}}],["abstractcontrol",{"_index":10,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"interfaces/WarnFn.html":{}}}],["abstractcontroloptions",{"_index":2757,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["abstractcontrolwarn",{"_index":1,"title":{"interfaces/AbstractControlWarn.html":{}},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"interfaces/WarnFn.html":{},"coverage.html":{}}}],["acceptable",{"_index":2374,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["access",{"_index":498,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/LayoutComponent.html":{}}}],["accessors",{"_index":655,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["activate",{"_index":3018,"title":{},"body":{"index.html":{}}}],["activatedroute",{"_index":1436,"title":{},"body":{"components/LayoutComponent.html":{}}}],["activatedroutesnapshot",{"_index":552,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["active",{"_index":2133,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["actual_component",{"_index":365,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["adapt",{"_index":2130,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["add",{"_index":853,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{}}}],["addcomponent",{"_index":1720,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["addcomponent(id",{"_index":1660,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["addcomponents",{"_index":1721,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["addcomponents(components",{"_index":1662,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["addform",{"_index":1045,"title":{},"body":{"injectables/FormService.html":{}}}],["addform(formgroup",{"_index":924,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["adding",{"_index":936,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["adds",{"_index":482,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["adimensional",{"_index":211,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["afterviewinit",{"_index":2351,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["again",{"_index":806,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{}}}],["algebraic",{"_index":42,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["aliases",{"_index":3048,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":1578,"title":{},"body":{"components/LayoutComponent.html":{}}}],["align:center",{"_index":1566,"title":{},"body":{"components/LayoutComponent.html":{}}}],["allow",{"_index":308,"title":{},"body":{"components/CardComponent.html":{},"modules/LayoutModule.html":{}}}],["allows",{"_index":951,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/SaveLoadService.html":{}}}],["already",{"_index":841,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["alt",{"_index":800,"title":{},"body":{"components/FormComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["alt:any",{"_index":2404,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["alternative",{"_index":240,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["altitude",{"_index":718,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"injectables/JSatOrbLinkService.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["altitude+elevation",{"_index":768,"title":{},"body":{"components/FormComponent.html":{}}}],["altitude.unit",{"_index":810,"title":{},"body":{"components/FormComponent.html":{}}}],["altitude.value",{"_index":808,"title":{},"body":{"components/FormComponent.html":{}}}],["altitudefromsrelev",{"_index":1226,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["altitudefromsrelev(sr",{"_index":1238,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["altitue",{"_index":799,"title":{},"body":{"components/FormComponent.html":{}}}],["always",{"_index":178,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/SimpleDocumentationComponent.html":{}}}],["amplitude",{"_index":1689,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["amsat",{"_index":144,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["anchor",{"_index":2328,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["anchor.click",{"_index":2335,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["anchor.download",{"_index":2333,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["anchor.href",{"_index":2330,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["anchor.remove",{"_index":2337,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["anchor.target",{"_index":2331,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["angle",{"_index":1166,"title":{},"body":{"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{}}}],["angleleft",{"_index":1954,"title":{},"body":{"components/NavbarComponent.html":{}}}],["angular",{"_index":28,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/WarnFn.html":{},"index.html":{}}}],["angular/animations",{"_index":2089,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"dependencies.html":{}}}],["angular/common",{"_index":381,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":431,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["angular/compiler",{"_index":2961,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":18,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":24,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1839,"title":{},"body":{"modules/LoggerModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":567,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["animate",{"_index":2086,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["animate(100",{"_index":2096,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["animation",{"_index":2137,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["animations",{"_index":2092,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["antbeamwidth",{"_index":192,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["antena",{"_index":2472,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["antenna",{"_index":114,"title":{"interfaces/Antenna.html":{}},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Template.html":{},"coverage.html":{},"classes/emptyForm.html":{}}}],["antennafield",{"_index":218,"title":{"interfaces/AntennaField.html":{}},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"interfaces/Template.html":{},"coverage.html":{},"classes/emptyForm.html":{}}}],["antennaid",{"_index":220,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["antennaname",{"_index":1425,"title":{},"body":{"components/LayoutComponent.html":{}}}],["antennas",{"_index":175,"title":{"classes/Antennas.html":{}},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/SimpleDocumentationComponent.html":{},"coverage.html":{}}}],["antennas.genericantenna",{"_index":1452,"title":{},"body":{"components/LayoutComponent.html":{}}}],["antennas.helixantenna",{"_index":1082,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["antennas.yagiantenna",{"_index":1081,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["antennasutilsfunctions",{"_index":141,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["antennavalues",{"_index":221,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["antmaxgain",{"_index":184,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["antrx",{"_index":612,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["anttx",{"_index":603,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["anymore",{"_index":734,"title":{},"body":{"components/FormComponent.html":{}}}],["anys",{"_index":2600,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["api",{"_index":159,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{},"miscellaneous/variables.html":{}}}],["apiendpoint",{"_index":1935,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/variables.html":{}}}],["apiresult",{"_index":438,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"miscellaneous/typealiases.html":{}}}],["app",{"_index":1475,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{},"index.html":{}}}],["app.routes",{"_index":1617,"title":{},"body":{"modules/LayoutModule.html":{}}}],["app/src/environments/environment",{"_index":1999,"title":{},"body":{"components/NavbarComponent.html":{}}}],["append('g",{"_index":2669,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["append('line",{"_index":2714,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["append('path",{"_index":2662,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["append('svg",{"_index":2658,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["append('text",{"_index":2410,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["application",{"_index":2998,"title":{},"body":{"index.html":{}}}],["applications",{"_index":1784,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["appropriately",{"_index":1155,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["architecture",{"_index":457,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/SimpleDocumentationComponent.html":{}}}],["archive",{"_index":823,"title":{},"body":{"components/FormComponent.html":{}}}],["archived",{"_index":847,"title":{},"body":{"components/FormComponent.html":{}}}],["archives",{"_index":863,"title":{},"body":{"components/FormComponent.html":{}}}],["aren't",{"_index":830,"title":{},"body":{"components/FormComponent.html":{}}}],["array",{"_index":877,"title":{},"body":{"components/FormComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["artifacts",{"_index":3032,"title":{},"body":{"index.html":{}}}],["asfield",{"_index":644,"title":{},"body":{"components/FormComponent.html":{}}}],["asfield(field",{"_index":666,"title":{},"body":{"components/FormComponent.html":{}}}],["asfield(field).desc",{"_index":882,"title":{},"body":{"components/FormComponent.html":{}}}],["asfield(field).units[0",{"_index":883,"title":{},"body":{"components/FormComponent.html":{}}}],["assets/antennas/helix.jpg",{"_index":209,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["assets/antennas/yagi.jpg",{"_index":199,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["assets/antennestls.jpg",{"_index":1147,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["associated",{"_index":1649,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["assume",{"_index":237,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["atm",{"_index":1484,"title":{},"body":{"components/LayoutComponent.html":{}}}],["atm_gas",{"_index":1095,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["atmosphere",{"_index":1085,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["atmospheric",{"_index":2451,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["attach",{"_index":958,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["attr",{"_index":2660,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('class",{"_index":2670,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('d",{"_index":2700,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('fill",{"_index":2702,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('height",{"_index":2664,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('id",{"_index":2659,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('stroke",{"_index":2701,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('text",{"_index":2415,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["attr('transform",{"_index":2674,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('width",{"_index":2663,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('x",{"_index":2411,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["attr('x1",{"_index":2716,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('x2",{"_index":2719,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('y",{"_index":2413,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["attr('y1",{"_index":2718,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attr('y2",{"_index":2720,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["attribute",{"_index":1674,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["auto",{"_index":320,"title":{},"body":{"components/CardComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["automatically",{"_index":976,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/NavbarComponent.html":{},"index.html":{}}}],["available",{"_index":503,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/SaveLoadService.html":{},"modules.html":{}}}],["availableantennas",{"_index":1068,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["avoid",{"_index":1623,"title":{},"body":{"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavigationSidebarComponent.html":{},"index.html":{}}}],["axis",{"_index":2601,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/WelcomeComponent.html":{}}}],["backend",{"_index":534,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["background",{"_index":314,"title":{},"body":{"components/CardComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["backward",{"_index":1703,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["bandwidth",{"_index":1108,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["bar",{"_index":2518,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["based",{"_index":1527,"title":{},"body":{"components/LayoutComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["bash",{"_index":3006,"title":{},"body":{"index.html":{}}}],["basic",{"_index":2052,"title":{},"body":{"components/NavbarComponent.html":{}}}],["basis",{"_index":2820,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["beamwidth",{"_index":126,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{},"miscellaneous/variables.html":{}}}],["beamwidthcalculation",{"_index":118,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["before",{"_index":501,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["beginning",{"_index":932,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["behaviorsubject",{"_index":416,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["being",{"_index":232,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["belongs",{"_index":2778,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["ber",{"_index":1193,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["best",{"_index":528,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/SaveLoadService.html":{}}}],["better",{"_index":1699,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{}}}],["between",{"_index":767,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"modules/LayoutModule.html":{},"components/SimpleDocumentationComponent.html":{}}}],["beyond",{"_index":2519,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["binding",{"_index":495,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["bit",{"_index":769,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{}}}],["bit_rate",{"_index":1109,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["black",{"_index":2732,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["blob",{"_index":2308,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["block",{"_index":1577,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["blur",{"_index":1006,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["bold",{"_index":2136,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["boolean",{"_index":123,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"interfaces/Template.html":{},"interfaces/Validity.html":{},"classes/emptyForm.html":{}}}],["boom",{"_index":201,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["boomlength",{"_index":200,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["bootstrap",{"_index":2968,"title":{},"body":{"dependencies.html":{}}}],["bootstrap/ng",{"_index":2967,"title":{},"body":{"dependencies.html":{}}}],["border",{"_index":1574,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["both",{"_index":998,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{}}}],["bottom",{"_index":304,"title":{},"body":{"components/CardComponent.html":{},"modules/LoggerModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["bottom:0",{"_index":303,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{}}}],["bounds",{"_index":83,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["bps",{"_index":1111,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["break",{"_index":1816,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["browse",{"_index":3046,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2316,"title":{},"body":{"injectables/SaveLoadService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":1840,"title":{},"body":{"modules/LoggerModule.html":{}}}],["browseranimationsmodule",{"_index":1838,"title":{},"body":{"modules/LoggerModule.html":{}}}],["budget",{"_index":2049,"title":{},"body":{"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["budget.service",{"_index":1871,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/ResultSidebarComponent.html":{}}}],["budget.service.ts",{"_index":391,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"coverage.html":{}}}],["budget.service.ts:15",{"_index":426,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:17",{"_index":427,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:19",{"_index":425,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:25",{"_index":429,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:27",{"_index":405,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:31",{"_index":410,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:79",{"_index":420,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:83",{"_index":422,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:87",{"_index":415,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget.service.ts:91",{"_index":419,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["budget/layout.component",{"_index":1605,"title":{},"body":{"modules/LayoutModule.html":{}}}],["budget/layout.component.ts",{"_index":1421,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["budget/layout.component.ts:137",{"_index":1439,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:146",{"_index":1443,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:162",{"_index":1446,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:18",{"_index":1437,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:19",{"_index":1457,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:70",{"_index":1467,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:76",{"_index":1470,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:79",{"_index":1458,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:80",{"_index":1468,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:82",{"_index":1451,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:83",{"_index":1450,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:84",{"_index":1454,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:86",{"_index":1456,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:87",{"_index":1453,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:88",{"_index":1449,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:89",{"_index":1447,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:90",{"_index":1459,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:91",{"_index":1460,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:92",{"_index":1469,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budget/layout.component.ts:94",{"_index":1441,"title":{},"body":{"components/LayoutComponent.html":{}}}],["budgettext",{"_index":2550,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["bug",{"_index":2825,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["build",{"_index":1777,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"index.html":{}}}],["buildform",{"_index":2860,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["buildform(data",{"_index":2866,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["building",{"_index":2996,"title":{},"body":{"index.html":{}}}],["buildlogstring",{"_index":1746,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["builds",{"_index":2891,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["bulma",{"_index":2971,"title":{},"body":{"dependencies.html":{}}}],["bulma/bulma.sass",{"_index":300,"title":{},"body":{"components/CardComponent.html":{}}}],["bulma/sass/utilities/derived",{"_index":298,"title":{},"body":{"components/CardComponent.html":{},"components/StepbarComponent.html":{}}}],["buttons",{"_index":2280,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["c",{"_index":1134,"title":{},"body":{"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["c.label",{"_index":1657,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["c.position",{"_index":1658,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["c.width",{"_index":1659,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["cable",{"_index":2795,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["cablerx",{"_index":616,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["cabletx",{"_index":600,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["calculate",{"_index":798,"title":{},"body":{"components/FormComponent.html":{}}}],["calculated",{"_index":2376,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["calculation",{"_index":477,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["calculations",{"_index":152,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/HelperFunctions.html":{},"miscellaneous/variables.html":{}}}],["call",{"_index":158,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"miscellaneous/variables.html":{}}}],["call(d3.axisleft(this.y",{"_index":2706,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["callback",{"_index":2205,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["callbackfn",{"_index":2282,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["callbackfn(json.parse(value",{"_index":2299,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["callbackfn(result",{"_index":2236,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["callbackfn(results",{"_index":2241,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["called",{"_index":929,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["calsphere",{"_index":1374,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["can't",{"_index":2303,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["card",{"_index":272,"title":{},"body":{"components/CardComponent.html":{}}}],["card'},{'name",{"_index":331,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["card.component",{"_index":382,"title":{},"body":{"modules/CardModule.html":{}}}],["card.component.html",{"_index":276,"title":{},"body":{"components/CardComponent.html":{}}}],["card.component.scss",{"_index":274,"title":{},"body":{"components/CardComponent.html":{}}}],["card.is",{"_index":312,"title":{},"body":{"components/CardComponent.html":{}}}],["card/card.module",{"_index":2169,"title":{},"body":{"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["cardcomponent",{"_index":265,"title":{"components/CardComponent.html":{}},"body":{"components/CardComponent.html":{},"modules/CardModule.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["cardmodule",{"_index":367,"title":{"modules/CardModule.html":{}},"body":{"modules/CardModule.html":{},"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{},"modules.html":{},"overview.html":{}}}],["careful",{"_index":2681,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["carrier",{"_index":1101,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["case",{"_index":468,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{}}}],["cases",{"_index":2622,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["casting",{"_index":828,"title":{},"body":{"components/FormComponent.html":{}}}],["casts",{"_index":835,"title":{},"body":{"components/FormComponent.html":{}}}],["catcherror",{"_index":434,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["catcherror(this.handleerror.bind(this",{"_index":494,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["caused",{"_index":749,"title":{},"body":{"components/FormComponent.html":{}}}],["cc",{"_index":2458,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["cd",{"_index":3019,"title":{},"body":{"index.html":{}}}],["celestialbody",{"_index":1363,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["center",{"_index":1579,"title":{},"body":{"components/LayoutComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["centered",{"_index":2666,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["cf",{"_index":860,"title":{},"body":{"components/FormComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["chain",{"_index":992,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["change",{"_index":760,"title":{},"body":{"components/FormComponent.html":{},"modules/LayoutModule.html":{},"index.html":{}}}],["changecomponent",{"_index":645,"title":{},"body":{"components/FormComponent.html":{}}}],["changecomponent(componenttemplate",{"_index":668,"title":{},"body":{"components/FormComponent.html":{}}}],["changed",{"_index":805,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{}}}],["changedetection",{"_index":2352,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["changedetectionstrategy",{"_index":2397,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":2353,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["changes",{"_index":748,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["changing",{"_index":954,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["characteristics",{"_index":2902,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["characters",{"_index":2013,"title":{},"body":{"components/NavbarComponent.html":{}}}],["check",{"_index":446,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"index.html":{}}}],["checking",{"_index":829,"title":{},"body":{"components/FormComponent.html":{}}}],["child:after",{"_index":1589,"title":{},"body":{"components/LayoutComponent.html":{}}}],["choice",{"_index":2183,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["choices",{"_index":1021,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["choose",{"_index":527,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{},"components/WelcomeComponent.html":{}}}],["chosen",{"_index":2464,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["chrome",{"_index":2318,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["circumference",{"_index":216,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["class",{"_index":100,"title":{"classes/Antennas.html":{},"classes/CustomRouteReuseStrategy.html":{},"classes/DrawingDefault.html":{},"classes/FormControlWarn.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"classes/MockupLoggerService.html":{},"classes/emptyForm.html":{}},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"classes/emptyForm.html":{}}}],["classes",{"_index":259,"title":{},"body":{"classes/Antennas.html":{},"classes/CustomRouteReuseStrategy.html":{},"classes/DrawingDefault.html":{},"classes/FormControlWarn.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"classes/emptyForm.html":{},"overview.html":{}}}],["clean",{"_index":576,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["cleaner",{"_index":816,"title":{},"body":{"components/FormComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["cli",{"_index":3022,"title":{},"body":{"index.html":{}}}],["client",{"_index":517,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["cluster_cardmodule",{"_index":370,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_declarations",{"_index":372,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_cardmodule_exports",{"_index":371,"title":{},"body":{"modules/CardModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":1031,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declarations",{"_index":1032,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_exports",{"_index":1034,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_imports",{"_index":1035,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_providers",{"_index":1033,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_layoutmodule",{"_index":1595,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_declarations",{"_index":1597,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_exports",{"_index":1599,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_imports",{"_index":1596,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_layoutmodule_providers",{"_index":1598,"title":{},"body":{"modules/LayoutModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1833,"title":{},"body":{"modules/LoggerModule.html":{}}}],["cluster_loggermodule_providers",{"_index":1834,"title":{},"body":{"modules/LoggerModule.html":{}}}],["cluster_luplinkmodule",{"_index":1897,"title":{},"body":{"modules/LuplinkModule.html":{},"overview.html":{}}}],["cluster_luplinkmodule_imports",{"_index":1898,"title":{},"body":{"modules/LuplinkModule.html":{}}}],["cluster_luplinkmodule_providers",{"_index":1899,"title":{},"body":{"modules/LuplinkModule.html":{},"overview.html":{}}}],["cluster_navbarmodule",{"_index":2061,"title":{},"body":{"modules/NavbarModule.html":{},"overview.html":{}}}],["cluster_navbarmodule_declarations",{"_index":2063,"title":{},"body":{"modules/NavbarModule.html":{},"overview.html":{}}}],["cluster_navbarmodule_exports",{"_index":2062,"title":{},"body":{"modules/NavbarModule.html":{},"overview.html":{}}}],["cluster_navbarmodule_imports",{"_index":2064,"title":{},"body":{"modules/NavbarModule.html":{}}}],["cluster_navigationsidebarmodule",{"_index":2148,"title":{},"body":{"modules/NavigationSidebarModule.html":{},"overview.html":{}}}],["cluster_navigationsidebarmodule_declarations",{"_index":2149,"title":{},"body":{"modules/NavigationSidebarModule.html":{},"overview.html":{}}}],["cluster_navigationsidebarmodule_exports",{"_index":2150,"title":{},"body":{"modules/NavigationSidebarModule.html":{},"overview.html":{}}}],["cluster_resultsidebarmodule",{"_index":2159,"title":{},"body":{"modules/ResultSidebarModule.html":{},"overview.html":{}}}],["cluster_resultsidebarmodule_declarations",{"_index":2161,"title":{},"body":{"modules/ResultSidebarModule.html":{},"overview.html":{}}}],["cluster_resultsidebarmodule_exports",{"_index":2160,"title":{},"body":{"modules/ResultSidebarModule.html":{},"overview.html":{}}}],["cluster_resultsidebarmodule_imports",{"_index":2162,"title":{},"body":{"modules/ResultSidebarModule.html":{},"overview.html":{}}}],["cluster_simpledocumentationmodule",{"_index":2474,"title":{},"body":{"modules/SimpleDocumentationModule.html":{},"overview.html":{}}}],["cluster_simpledocumentationmodule_declarations",{"_index":2477,"title":{},"body":{"modules/SimpleDocumentationModule.html":{},"overview.html":{}}}],["cluster_simpledocumentationmodule_exports",{"_index":2476,"title":{},"body":{"modules/SimpleDocumentationModule.html":{},"overview.html":{}}}],["cluster_simpledocumentationmodule_imports",{"_index":2475,"title":{},"body":{"modules/SimpleDocumentationModule.html":{}}}],["cluster_stepbarmodule",{"_index":2525,"title":{},"body":{"modules/StepbarModule.html":{},"overview.html":{}}}],["cluster_stepbarmodule_declarations",{"_index":2528,"title":{},"body":{"modules/StepbarModule.html":{},"overview.html":{}}}],["cluster_stepbarmodule_exports",{"_index":2526,"title":{},"body":{"modules/StepbarModule.html":{},"overview.html":{}}}],["cluster_stepbarmodule_imports",{"_index":2527,"title":{},"body":{"modules/StepbarModule.html":{}}}],["cluster_synthesismodule",{"_index":2538,"title":{},"body":{"modules/SynthesisModule.html":{},"overview.html":{}}}],["cluster_synthesismodule_declarations",{"_index":2539,"title":{},"body":{"modules/SynthesisModule.html":{},"overview.html":{}}}],["cluster_synthesismodule_exports",{"_index":2541,"title":{},"body":{"modules/SynthesisModule.html":{},"overview.html":{}}}],["cluster_synthesismodule_imports",{"_index":2540,"title":{},"body":{"modules/SynthesisModule.html":{}}}],["cluster_syntheticdrawingmodule",{"_index":2840,"title":{},"body":{"modules/SyntheticDrawingModule.html":{},"overview.html":{}}}],["cluster_syntheticdrawingmodule_declarations",{"_index":2843,"title":{},"body":{"modules/SyntheticDrawingModule.html":{},"overview.html":{}}}],["cluster_syntheticdrawingmodule_exports",{"_index":2841,"title":{},"body":{"modules/SyntheticDrawingModule.html":{},"overview.html":{}}}],["cluster_syntheticdrawingmodule_imports",{"_index":2844,"title":{},"body":{"modules/SyntheticDrawingModule.html":{}}}],["cluster_syntheticdrawingmodule_providers",{"_index":2842,"title":{},"body":{"modules/SyntheticDrawingModule.html":{},"overview.html":{}}}],["cluster_welcomemodule",{"_index":2917,"title":{},"body":{"modules/WelcomeModule.html":{},"overview.html":{}}}],["cluster_welcomemodule_declarations",{"_index":2920,"title":{},"body":{"modules/WelcomeModule.html":{},"overview.html":{}}}],["cluster_welcomemodule_exports",{"_index":2919,"title":{},"body":{"modules/WelcomeModule.html":{},"overview.html":{}}}],["cluster_welcomemodule_imports",{"_index":2918,"title":{},"body":{"modules/WelcomeModule.html":{}}}],["cm",{"_index":203,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/HelperFunctions.html":{}}}],["code",{"_index":536,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"index.html":{}}}],["collapse",{"_index":2107,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["collapsecard",{"_index":280,"title":{},"body":{"components/CardComponent.html":{}}}],["collapsed",{"_index":277,"title":{},"body":{"components/CardComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["collapsedownlink",{"_index":2071,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["collapsesidebar",{"_index":2073,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["collapseuplink",{"_index":2072,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["collapsing",{"_index":2129,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["color",{"_index":315,"title":{},"body":{"components/CardComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["color:#8080802e",{"_index":2122,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["color:white",{"_index":2145,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["comma",{"_index":1778,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["command",{"_index":3044,"title":{},"body":{"index.html":{}}}],["commited",{"_index":3003,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":380,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{}}}],["commons",{"_index":2462,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["complete",{"_index":1487,"title":{},"body":{"components/LayoutComponent.html":{},"components/WelcomeComponent.html":{}}}],["complex",{"_index":160,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["component",{"_index":264,"title":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}},"body":{"components/CardComponent.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"index.html":{}}}],["component/form.component",{"_index":1042,"title":{},"body":{"modules/FormModule.html":{}}}],["component_template",{"_index":329,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["componentid",{"_index":182,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["componentname",{"_index":196,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["componentname?:string",{"_index":248,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["components",{"_index":251,"title":{},"body":{"interfaces/AntennaField.html":{},"components/CardComponent.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"classes/emptyForm.html":{},"overview.html":{}}}],["components(value",{"_index":2612,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["components.foreach((s",{"_index":1664,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["components/card/card.module",{"_index":1606,"title":{},"body":{"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["components/navbar/navbar.component",{"_index":1869,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["components/navigation",{"_index":1612,"title":{},"body":{"modules/LayoutModule.html":{}}}],["components/results/components/results/results.component",{"_index":439,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["components/results/results.component",{"_index":2166,"title":{},"body":{"modules/ResultSidebarModule.html":{}}}],["components/results/results.module",{"_index":1615,"title":{},"body":{"modules/LayoutModule.html":{}}}],["components/sidebar/result",{"_index":2165,"title":{},"body":{"modules/ResultSidebarModule.html":{}}}],["components/simple",{"_index":1608,"title":{},"body":{"modules/LayoutModule.html":{}}}],["components/stepbar/stepbar.module",{"_index":1611,"title":{},"body":{"modules/LayoutModule.html":{}}}],["componenttemplate",{"_index":670,"title":{},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{}}}],["componenttemplate.componentid",{"_index":832,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["componenttemplate.image",{"_index":834,"title":{},"body":{"components/FormComponent.html":{}}}],["componenttemplate.params.foreach((element",{"_index":994,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["componenttemplate.parentcomponent",{"_index":831,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["componenttype",{"_index":181,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["componenttype:'path",{"_index":1084,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["componenttype:string",{"_index":245,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["composed",{"_index":1023,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["compromise",{"_index":1015,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["computation",{"_index":147,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["compute",{"_index":1199,"title":{},"body":{"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"classes/LinkBudgetScenario.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["compute(link",{"_index":1694,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["computebeamwidth",{"_index":139,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["computefn",{"_index":250,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["computegain",{"_index":136,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["computelayout",{"_index":392,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["computelinkbudget",{"_index":396,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/NavbarComponent.html":{},"components/ResultSidebarComponent.html":{}}}],["computelinkbudget(datain",{"_index":408,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["computelinkbudget(datain?:any",{"_index":462,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["computelinkbudgetservice",{"_index":387,"title":{"injectables/ComputeLinkBudgetService.html":{}},"body":{"injectables/ComputeLinkBudgetService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/ResultSidebarComponent.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{},"overview.html":{}}}],["computes",{"_index":1256,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["concatenation",{"_index":911,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["config",{"_index":1901,"title":{},"body":{"modules/LuplinkModule.html":{},"injectables/SaveLoadService.html":{}}}],["config.defaultform",{"_index":1892,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["config.environment",{"_index":1893,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["config.isstandalone",{"_index":1894,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["configuration",{"_index":2180,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["configurl",{"_index":2324,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["connector",{"_index":1159,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["consider",{"_index":2473,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["considering",{"_index":2184,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["consistent",{"_index":508,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["console.debug(`altitude",{"_index":1266,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["console.debug(entry.buildlogstring",{"_index":1828,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["console.error('warning",{"_index":1264,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["console.error(entry.buildlogstring",{"_index":1827,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["console.log('import",{"_index":2888,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["console.log(`attach",{"_index":573,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["console.log(`detach",{"_index":568,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["console.log(`reuse",{"_index":578,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["console.log(config",{"_index":1890,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["console.log(ecc",{"_index":1288,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["console.log(entry.buildlogstring",{"_index":1829,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["console.log(environment",{"_index":2097,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["console.log(gains.keys",{"_index":1675,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["console.log(helperfunctions.converttletokeplearian(satellite.line1",{"_index":2251,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["console.log(key",{"_index":2514,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["console.log(obs.geometry",{"_index":2430,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["console.log(obs.getrawvalue().geometry",{"_index":2429,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["console.log(results",{"_index":2226,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["console.log(satellites",{"_index":2250,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["console.log(this.environment.debugmode",{"_index":1418,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["console.log(this.formservice.globalform.value",{"_index":2275,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["console.log(this.formservice.title",{"_index":2016,"title":{},"body":{"components/NavbarComponent.html":{}}}],["console.log(this.jsodata",{"_index":1417,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"components/WelcomeComponent.html":{}}}],["console.log(this.localform.value.slantrange",{"_index":754,"title":{},"body":{"components/FormComponent.html":{}}}],["console.log(this.step",{"_index":742,"title":{},"body":{"components/FormComponent.html":{}}}],["console.log(this.validity.steps",{"_index":2513,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["console.log(tle1",{"_index":1284,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["console.log(tle2.split",{"_index":1285,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["console.log(tle2.substring(52",{"_index":1297,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["console.log(typeof",{"_index":1802,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["console.log(value",{"_index":2507,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["console.warn('yagi",{"_index":161,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["console.warn(`slant",{"_index":752,"title":{},"body":{"components/FormComponent.html":{}}}],["console.warn(entry.buildlogstring",{"_index":1826,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["console.warn(warnings",{"_index":870,"title":{},"body":{"components/FormComponent.html":{}}}],["const",{"_index":65,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["constellations",{"_index":1406,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["constrained",{"_index":1020,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["constructed",{"_index":723,"title":{},"body":{"components/FormComponent.html":{}}}],["constructor",{"_index":127,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LinkBudgetScenario.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"classes/emptyForm.html":{}}}],["constructor(@inject(environment_token",{"_index":459,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["constructor(computelinkbudget",{"_index":2154,"title":{},"body":{"components/ResultSidebarComponent.html":{}}}],["constructor(drawingservice",{"_index":2561,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["constructor(environment",{"_index":402,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["constructor(formbuilder",{"_index":2747,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["constructor(formservice",{"_index":656,"title":{},"body":{"components/FormComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["constructor(linkservice",{"_index":1310,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["constructor(loadservice",{"_index":1357,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["constructor(power",{"_index":1639,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["constructor(private",{"_index":131,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/FormComponent.html":{},"injectables/JSatOrbLinkService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["constructor(public",{"_index":1326,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["constructor(template",{"_index":1050,"title":{},"body":{"injectables/FormService.html":{}}}],["constructor(toastr",{"_index":1849,"title":{},"body":{"injectables/LoggerService.html":{}}}],["contain",{"_index":2294,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["container",{"_index":1554,"title":{},"body":{"components/LayoutComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["containing",{"_index":2278,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["contains",{"_index":910,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{}}}],["content",{"_index":926,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["context",{"_index":496,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["control",{"_index":47,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"interfaces/WarnFn.html":{},"miscellaneous/functions.html":{}}}],["control.errors",{"_index":58,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["control.get('unit",{"_index":67,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["control.get('value",{"_index":64,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["control.get('value')?.errors?.pattern",{"_index":871,"title":{},"body":{"components/FormComponent.html":{}}}],["control.get('value')?.value",{"_index":37,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["control.warnings",{"_index":39,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["controloptions",{"_index":2763,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["controls",{"_index":934,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["conversion",{"_index":731,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/SyntheticDrawingComponent.html":{}}}],["convert",{"_index":783,"title":{},"body":{"components/FormComponent.html":{},"injectables/SaveLoadService.html":{}}}],["convertangle(value",{"_index":1255,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["convertdistance",{"_index":1227,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["convertdistance(value",{"_index":1241,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["converted",{"_index":1295,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["converts",{"_index":2242,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["converttletokeplearian",{"_index":1228,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["converttletokeplearian(tle1",{"_index":1243,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["copy",{"_index":2456,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["core",{"_index":2964,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":571,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"classes/FormsTemplate.html":{}}}],["correctly",{"_index":2906,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["corresponding",{"_index":702,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/SaveLoadService.html":{}}}],["cos^2{\\\\delta",{"_index":2379,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["cos{2\\\\delta",{"_index":2402,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["counter",{"_index":1558,"title":{},"body":{"components/LayoutComponent.html":{}}}],["counter(step",{"_index":1572,"title":{},"body":{"components/LayoutComponent.html":{}}}],["coverage",{"_index":2923,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crash",{"_index":1335,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/WelcomeComponent.html":{}}}],["create",{"_index":700,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{}}}],["created",{"_index":931,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["createformgroup",{"_index":1046,"title":{},"body":{"injectables/FormService.html":{}}}],["createformgroup(componenttemplate",{"_index":988,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["creates",{"_index":3014,"title":{},"body":{"index.html":{}}}],["cross",{"_index":1092,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["curr",{"_index":561,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["curr.data.noreuse",{"_index":583,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["curr.routeconfig",{"_index":582,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["curr.url",{"_index":579,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["current",{"_index":2027,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{}}}],["currentantenna",{"_index":1426,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currentcomponent",{"_index":2075,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["currentcomponenttemplate",{"_index":1502,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currentcomponenttemplate.antenna",{"_index":1511,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currentcomponenttemplate.atm",{"_index":1515,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currentcomponenttemplate.form",{"_index":1508,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currentcomponenttemplate.name",{"_index":1506,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currentcomponenttemplate.step",{"_index":1505,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currentformvalidity",{"_index":741,"title":{},"body":{"components/FormComponent.html":{}}}],["currentformvalidity:boolean",{"_index":740,"title":{},"body":{"components/FormComponent.html":{}}}],["currentscenario",{"_index":2740,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["currentstep",{"_index":1427,"title":{},"body":{"components/LayoutComponent.html":{}}}],["currenttemplate",{"_index":1428,"title":{},"body":{"components/LayoutComponent.html":{}}}],["custom",{"_index":91,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{}}}],["customroutereusestrategy",{"_index":540,"title":{"classes/CustomRouteReuseStrategy.html":{}},"body":{"classes/CustomRouteReuseStrategy.html":{},"modules/LayoutModule.html":{},"coverage.html":{}}}],["customvalidators",{"_index":101,"title":{"injectables/CustomValidators.html":{}},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"interfaces/WarnFn.html":{},"coverage.html":{}}}],["d.name",{"_index":2637,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["d.position",{"_index":2639,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["d.x",{"_index":2717,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["d3",{"_index":2396,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"dependencies.html":{}}}],["d3.extent(points",{"_index":2686,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["d3.scalelinear().range([0",{"_index":2651,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["d3.select('#sr",{"_index":2407,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["d3.select(this.diagram.nativeelement",{"_index":2657,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["d:any",{"_index":2638,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["danger",{"_index":313,"title":{},"body":{"components/CardComponent.html":{}}}],["darkslategray",{"_index":318,"title":{},"body":{"components/CardComponent.html":{}}}],["dasharray",{"_index":2721,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["data",{"_index":156,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["data(labels",{"_index":2635,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["data(points",{"_index":2713,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["data:application/json;charset=utf",{"_index":2325,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["datain",{"_index":411,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["datainput",{"_index":709,"title":{},"body":{"components/FormComponent.html":{}}}],["date",{"_index":1748,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["date.now",{"_index":2310,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["datum(points",{"_index":2698,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["db",{"_index":1089,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["dbi",{"_index":188,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["dbm",{"_index":1153,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["dbw",{"_index":1151,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["debug",{"_index":481,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/enumerations.html":{},"index.html":{}}}],["debug(msg",{"_index":1791,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["debugging",{"_index":1786,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["debugmode",{"_index":1933,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["decimals",{"_index":1262,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["declarations",{"_index":377,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{}}}],["decoration",{"_index":2109,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["decorators",{"_index":1988,"title":{},"body":{"components/NavbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/WelcomeComponent.html":{}}}],["default",{"_index":190,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockFormService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{},"classes/emptyForm.html":{},"miscellaneous/variables.html":{}}}],["defaultcomponents",{"_index":591,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["defaultform",{"_index":1867,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["defaultgains",{"_index":592,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["defaultlbscenario",{"_index":2779,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["defaultlbscenario.compute",{"_index":2789,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["defaultlbscenario.editgains(formvalues",{"_index":2794,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["defaultlbscenario.randomize",{"_index":2781,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["defaultlbscenario.setpowerin",{"_index":2790,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["defaultlbscenario:linkbudgetscenario",{"_index":2603,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["define",{"_index":2447,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["defined",{"_index":260,"title":{},"body":{"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"modules/LuplinkModule.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"classes/emptyForm.html":{}}}],["defining",{"_index":2222,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["degrees",{"_index":1259,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["delay",{"_index":483,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["delimited",{"_index":1779,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["delta",{"_index":1258,"title":{},"body":{"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{}}}],["depend",{"_index":2452,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["dependencies",{"_index":369,"title":{"dependencies.html":{}},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{},"overview.html":{}}}],["dependency",{"_index":1531,"title":{},"body":{"components/LayoutComponent.html":{}}}],["depending",{"_index":93,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"interfaces/WarnFn.html":{}}}],["depends",{"_index":2315,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["depointing",{"_index":1088,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["depointing_loss",{"_index":1087,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["depointingangle",{"_index":1126,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["depth",{"_index":952,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["desc",{"_index":185,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["desc:'value",{"_index":1206,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["destructuring",{"_index":878,"title":{},"body":{"components/FormComponent.html":{}}}],["detachedroutehandle",{"_index":555,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["determine",{"_index":2469,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["dev",{"_index":3027,"title":{},"body":{"index.html":{}}}],["developer",{"_index":1788,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{}}}],["development",{"_index":3023,"title":{},"body":{"index.html":{}}}],["developper",{"_index":533,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["developping",{"_index":2994,"title":{},"body":{"index.html":{}}}],["diagram",{"_index":2048,"title":{},"body":{"components/NavbarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["different",{"_index":1647,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{}}}],["dimension",{"_index":204,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["dimension:\"angle",{"_index":194,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["dimension:\"iso_gain",{"_index":189,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["dimension:\"length",{"_index":1168,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["directive",{"_index":327,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["directives",{"_index":364,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":3031,"title":{},"body":{"index.html":{}}}],["directory",{"_index":3034,"title":{},"body":{"index.html":{}}}],["disable",{"_index":505,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{}}}],["disabled",{"_index":307,"title":{},"body":{"components/CardComponent.html":{},"components/NavbarComponent.html":{}}}],["disables",{"_index":2001,"title":{},"body":{"components/NavbarComponent.html":{}}}],["discontinuity",{"_index":1711,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["discontinuitypoint",{"_index":1708,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["discontinuitypoint.x",{"_index":1713,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["discontinuitypoint.y",{"_index":1714,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["display",{"_index":179,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["display/synthetic",{"_index":2544,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"modules/SyntheticDrawingModule.html":{},"coverage.html":{}}}],["display:inline",{"_index":887,"title":{},"body":{"components/FormComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["displayed",{"_index":225,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{},"classes/emptyForm.html":{}}}],["displayedimage",{"_index":638,"title":{},"body":{"components/FormComponent.html":{}}}],["displayfooter",{"_index":393,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["displayfooter:boolean=false",{"_index":444,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["displaygraph",{"_index":2558,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["displaying",{"_index":524,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["displayingresults",{"_index":394,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["displayingresults:boolean",{"_index":445,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["dist",{"_index":3033,"title":{},"body":{"index.html":{}}}],["dist/ngx",{"_index":3012,"title":{},"body":{"index.html":{}}}],["distance",{"_index":1223,"title":{},"body":{"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{}}}],["distracting",{"_index":1013,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["div",{"_index":2655,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["dl_atmosphere",{"_index":1069,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["dl_carrier",{"_index":1070,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["dl_gs_rx_antenna",{"_index":1071,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["dl_receiver_gs",{"_index":1072,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["dl_sc_tx_antenna",{"_index":1073,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["dl_transmitter_sc",{"_index":1074,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["dlcarrier",{"_index":1464,"title":{},"body":{"components/LayoutComponent.html":{}}}],["dlreceiver",{"_index":1466,"title":{},"body":{"components/LayoutComponent.html":{}}}],["dltransmitter",{"_index":1465,"title":{},"body":{"components/LayoutComponent.html":{}}}],["document.createelement('a",{"_index":2329,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["documentation",{"_index":2354,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"coverage.html":{}}}],["documentation'},{'name",{"_index":350,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["documentation.component",{"_index":2479,"title":{},"body":{"modules/SimpleDocumentationModule.html":{}}}],["documentation.component.html",{"_index":2356,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.scss",{"_index":2355,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts",{"_index":2350,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"coverage.html":{}}}],["documentation.component.ts:15",{"_index":2364,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:16",{"_index":2372,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:17",{"_index":2387,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:18",{"_index":2386,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:30",{"_index":2395,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:32",{"_index":2363,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:34",{"_index":2371,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:40",{"_index":2389,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:41",{"_index":2370,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:42",{"_index":2369,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:43",{"_index":2388,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:45",{"_index":2365,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:80",{"_index":2366,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.component.ts:87",{"_index":2368,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["documentation.module",{"_index":1610,"title":{},"body":{"modules/LayoutModule.html":{}}}],["documentation.module.ts",{"_index":2478,"title":{},"body":{"modules/SimpleDocumentationModule.html":{}}}],["documentation/simple",{"_index":1609,"title":{},"body":{"modules/LayoutModule.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"coverage.html":{}}}],["doesn't",{"_index":862,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"injectables/SaveLoadService.html":{}}}],["doesn\\'t",{"_index":1519,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{}}}],["dom",{"_index":267,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["domain",{"_index":2682,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["don't",{"_index":2188,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Validity.html":{}}}],["down",{"_index":2684,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["downlink",{"_index":1086,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["draw",{"_index":2433,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["drawgeometry",{"_index":2360,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["drawing",{"_index":359,"title":{},"body":{"components/CardComponent.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{}}}],["drawing'},{'name",{"_index":357,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["drawing.component",{"_index":2847,"title":{},"body":{"modules/SyntheticDrawingModule.html":{}}}],["drawing.component.html",{"_index":2547,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.scss",{"_index":2546,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts",{"_index":2545,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"coverage.html":{}}}],["drawing.component.ts:146",{"_index":2573,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:17",{"_index":2585,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:18",{"_index":2590,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:19",{"_index":2588,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:25",{"_index":2591,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:26",{"_index":2592,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:28",{"_index":2583,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:29",{"_index":2584,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:31",{"_index":2581,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:32",{"_index":2587,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:33",{"_index":2586,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:34",{"_index":2589,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:40",{"_index":2567,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:41",{"_index":2569,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:42",{"_index":2566,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:45",{"_index":2568,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:48",{"_index":2595,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:52",{"_index":2580,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:54",{"_index":2565,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:57",{"_index":2598,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:61",{"_index":2563,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:65",{"_index":2578,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:72",{"_index":2571,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:87",{"_index":2576,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.component.ts:99",{"_index":2570,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["drawing.module",{"_index":2168,"title":{},"body":{"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["drawing.module.ts",{"_index":2845,"title":{},"body":{"modules/SyntheticDrawingModule.html":{}}}],["drawing/models/default.ts",{"_index":590,"title":{},"body":{"classes/DrawingDefault.html":{},"coverage.html":{}}}],["drawing/models/default.ts:13",{"_index":623,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawing/models/default.ts:5",{"_index":629,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawing/models/default.ts:6",{"_index":628,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawing/synthetic",{"_index":2167,"title":{},"body":{"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"coverage.html":{}}}],["drawingdefault",{"_index":588,"title":{"classes/DrawingDefault.html":{}},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"coverage.html":{}}}],["drawingdefault.defaultcomponents",{"_index":2579,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["drawingdefault.defaultgains.antrx",{"_index":614,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawingdefault.defaultgains.anttx",{"_index":605,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawingdefault.defaultgains.cablerx",{"_index":618,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawingdefault.defaultgains.cabletx",{"_index":602,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawingdefault.defaultgains.fsl",{"_index":609,"title":{},"body":{"classes/DrawingDefault.html":{}}}],["drawingdefault.powerin",{"_index":2766,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["drawingform",{"_index":2741,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["drawingformservice",{"_index":2819,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["drawingformsub",{"_index":2742,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["drawingservice",{"_index":2564,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["drawingservice:syntheticdrawingformservice",{"_index":2614,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["drawn",{"_index":2432,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["due",{"_index":2454,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["dummy",{"_index":2897,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["duration(1000",{"_index":2699,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["dynamic",{"_index":2053,"title":{},"body":{"components/NavbarComponent.html":{},"dependencies.html":{}}}],["e2e",{"_index":3039,"title":{},"body":{"index.html":{}}}],["each",{"_index":1481,"title":{},"body":{"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"index.html":{}}}],["earth",{"_index":1364,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"components/SimpleDocumentationComponent.html":{}}}],["earth's",{"_index":2385,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["earthmu",{"_index":1224,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["earthradius",{"_index":1225,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["ease",{"_index":2140,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["easily",{"_index":913,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"index.html":{}}}],["eb/n0",{"_index":1114,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ebno_threshold",{"_index":1113,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ecc",{"_index":1247,"title":{},"body":{"classes/HelperFunctions.html":{},"injectables/SaveLoadService.html":{}}}],["ececec",{"_index":2112,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["edit",{"_index":1670,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["edited",{"_index":780,"title":{},"body":{"components/FormComponent.html":{}}}],["editgain",{"_index":1722,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["editgain(id",{"_index":1667,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["editgains",{"_index":1723,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["editgains(gains",{"_index":1669,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["edittitle",{"_index":1960,"title":{},"body":{"components/NavbarComponent.html":{}}}],["eg",{"_index":963,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{}}}],["element",{"_index":326,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"miscellaneous/typealiases.html":{}}}],["element.alternative",{"_index":1025,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["element.units.length",{"_index":1017,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["elementref",{"_index":1987,"title":{},"body":{"components/NavbarComponent.html":{}}}],["elements",{"_index":206,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["elev",{"_index":811,"title":{},"body":{"components/FormComponent.html":{}}}],["elevation",{"_index":719,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"injectables/JSatOrbLinkService.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["elevation.unit",{"_index":786,"title":{},"body":{"components/FormComponent.html":{}}}],["elevation.value",{"_index":785,"title":{},"body":{"components/FormComponent.html":{}}}],["elsewhere",{"_index":1478,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{}}}],["empty",{"_index":255,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"components/JSatOrbLinkComponent.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{},"classes/emptyForm.html":{}}}],["emptyform",{"_index":252,"title":{"classes/emptyForm.html":{}},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{},"coverage.html":{},"classes/emptyForm.html":{}}}],["enable",{"_index":2054,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enabled",{"_index":2023,"title":{},"body":{"components/NavbarComponent.html":{}}}],["enablenanospace",{"_index":1934,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/variables.html":{}}}],["end",{"_index":1789,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"index.html":{}}}],["endpoint",{"_index":1879,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"miscellaneous/variables.html":{}}}],["enough",{"_index":892,"title":{},"body":{"components/FormComponent.html":{},"injectables/SaveLoadService.html":{}}}],["enter",{"_index":51,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/SyntheticDrawingComponent.html":{},"interfaces/WarnFn.html":{}}}],["entered",{"_index":472,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["entry",{"_index":1805,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["entry.extrainfo",{"_index":1824,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["entry.level",{"_index":1823,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["entry.logwithdate",{"_index":1825,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["entry.message",{"_index":1821,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["entrydate",{"_index":1743,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["enum",{"_index":1762,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["enumerations",{"_index":2989,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":407,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["environment:any",{"_index":460,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["environment_token",{"_index":440,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["equator",{"_index":1252,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["equivalent",{"_index":2263,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["err",{"_index":2046,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["errlist",{"_index":88,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["erroneoussection",{"_index":915,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["error",{"_index":26,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"injectables/SaveLoadService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["error('cannot",{"_index":2211,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["error(msg",{"_index":1800,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["error.error",{"_index":515,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["error.error.stack",{"_index":523,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["error.message",{"_index":522,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["error:any",{"_index":2890,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["errorhandler",{"_index":539,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["errors",{"_index":80,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/WarnFn.html":{}}}],["errors.error",{"_index":879,"title":{},"body":{"components/FormComponent.html":{}}}],["eslint",{"_index":504,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{}}}],["eslint/no",{"_index":2424,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["even",{"_index":979,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["event",{"_index":1440,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavbarComponent.html":{}}}],["event.id",{"_index":1521,"title":{},"body":{"components/LayoutComponent.html":{}}}],["event.preventdefault",{"_index":2030,"title":{},"body":{"components/NavbarComponent.html":{}}}],["event.returnvalue",{"_index":2032,"title":{},"body":{"components/NavbarComponent.html":{}}}],["event.validity",{"_index":1523,"title":{},"body":{"components/LayoutComponent.html":{}}}],["eventemitter",{"_index":664,"title":{},"body":{"components/FormComponent.html":{}}}],["everything",{"_index":908,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/NavbarComponent.html":{}}}],["ex",{"_index":1534,"title":{},"body":{"components/LayoutComponent.html":{}}}],["exactly",{"_index":2815,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["excentricity",{"_index":2910,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["excluded",{"_index":1684,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["excluded.includes(id",{"_index":1686,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["excluded.includes(key",{"_index":2785,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["execute",{"_index":3037,"title":{},"body":{"index.html":{}}}],["executing",{"_index":3013,"title":{},"body":{"index.html":{}}}],["execution",{"_index":2019,"title":{},"body":{"components/NavbarComponent.html":{}}}],["exist",{"_index":149,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"miscellaneous/variables.html":{}}}],["existed",{"_index":857,"title":{},"body":{"components/FormComponent.html":{}}}],["exists",{"_index":850,"title":{},"body":{"components/FormComponent.html":{}}}],["expects",{"_index":2683,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["experiments",{"_index":2103,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["explained",{"_index":2709,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["export",{"_index":32,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"classes/emptyForm.html":{}}}],["exportconfigfile",{"_index":2173,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["exportconfigfile(data",{"_index":2190,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["exportconfigfile(data:any",{"_index":2302,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["exports",{"_index":378,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"modules/WelcomeModule.html":{}}}],["expressions",{"_index":2426,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["extends",{"_index":9,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"injectables/CustomValidators.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{},"classes/emptyForm.html":{}}}],["extra",{"_index":1771,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["extracted",{"_index":2261,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["extrainfo",{"_index":1744,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["faangledown",{"_index":278,"title":{},"body":{"components/CardComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["faangleleft",{"_index":1976,"title":{},"body":{"components/NavbarComponent.html":{}}}],["facheck",{"_index":2488,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["factor",{"_index":1267,"title":{},"body":{"classes/HelperFunctions.html":{},"components/SyntheticDrawingComponent.html":{}}}],["fails",{"_index":2904,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["fainterrogation",{"_index":639,"title":{},"body":{"components/FormComponent.html":{}}}],["false",{"_index":129,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"miscellaneous/variables.html":{}}}],["fapencilalt",{"_index":1983,"title":{},"body":{"components/NavbarComponent.html":{}}}],["faquestioncircle",{"_index":677,"title":{},"body":{"components/FormComponent.html":{}}}],["far",{"_index":2185,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["faster",{"_index":1626,"title":{},"body":{"modules/LayoutModule.html":{}}}],["fatal",{"_index":1764,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["fatal(msg",{"_index":1807,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["fb",{"_index":657,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"injectables/SaveLoadService.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{}}}],["fb:formbuilder",{"_index":2880,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["fbfbfb",{"_index":2126,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["feed",{"_index":2223,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["ffffff",{"_index":2703,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["fg",{"_index":984,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["field",{"_index":98,"title":{"interfaces/Field.html":{}},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"injectables/CustomValidators.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{},"interfaces/WarnFn.html":{},"coverage.html":{},"classes/emptyForm.html":{}}}],["field.directive",{"_index":698,"title":{},"body":{"components/FormComponent.html":{}}}],["field.ts",{"_index":8,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["field.ts:19",{"_index":584,"title":{},"body":{"injectables/CustomValidators.html":{}}}],["field.ts:33",{"_index":586,"title":{},"body":{"injectables/CustomValidators.html":{}}}],["field.ts:43",{"_index":587,"title":{},"body":{"injectables/CustomValidators.html":{}}}],["field.ts:58",{"_index":585,"title":{},"body":{"injectables/CustomValidators.html":{}}}],["fields",{"_index":773,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["fields.ts",{"_index":866,"title":{},"body":{"components/FormComponent.html":{}}}],["fieldvalidator",{"_index":63,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["figure",{"_index":1200,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"classes/emptyForm.html":{},"miscellaneous/variables.html":{}}}],["file:./projects/ngx",{"_index":2977,"title":{},"body":{"dependencies.html":{}}}],["filelist",{"_index":1968,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["filename",{"_index":1997,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"dependencies.html":{}}}],["filereader",{"_index":2212,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["filereader.onabort",{"_index":2215,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["filereader.onerror",{"_index":2213,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["filereader.onload",{"_index":2216,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["filereader.onloadend",{"_index":2218,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["filereader.readastext(file",{"_index":2220,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":1970,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["files.item(0",{"_index":2206,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["files.length",{"_index":2341,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["files[0].name",{"_index":2343,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["fill",{"_index":2730,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["find",{"_index":455,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["fine",{"_index":2012,"title":{},"body":{"components/NavbarComponent.html":{}}}],["finished",{"_index":162,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["firefox",{"_index":2320,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["first",{"_index":230,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"injectables/SaveLoadService.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{},"index.html":{}}}],["fix",{"_index":243,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["fixed",{"_index":2116,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["fixme",{"_index":54,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/AntennaField.html":{},"injectables/CustomValidators.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{},"interfaces/Template.html":{},"interfaces/WarnFn.html":{},"classes/emptyForm.html":{}}}],["fixme:compute",{"_index":451,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["flag",{"_index":3035,"title":{},"body":{"index.html":{}}}],["flex",{"_index":888,"title":{},"body":{"components/FormComponent.html":{}}}],["float",{"_index":1561,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["float:left",{"_index":2733,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["float:right",{"_index":2736,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["following",{"_index":777,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["font",{"_index":1562,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["fontawesome",{"_index":385,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["fontawesomemodule",{"_index":383,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["footer",{"_index":424,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["for(let",{"_index":89,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["forget",{"_index":2760,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["forgot",{"_index":1700,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["form",{"_index":116,"title":{"interfaces/Form.html":{}},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"classes/emptyForm.html":{}}}],["form'},{'name",{"_index":333,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["form.component",{"_index":2846,"title":{},"body":{"modules/SyntheticDrawingModule.html":{}}}],["form.component.html",{"_index":636,"title":{},"body":{"components/FormComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.scss",{"_index":635,"title":{},"body":{"components/FormComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts",{"_index":2738,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:16",{"_index":2754,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:17",{"_index":2753,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:18",{"_index":2755,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:19",{"_index":2756,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:21",{"_index":2748,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:32",{"_index":2750,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:42",{"_index":2749,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:47",{"_index":2752,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.component.ts:64",{"_index":2751,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["form.model",{"_index":121,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["form.service",{"_index":696,"title":{},"body":{"components/FormComponent.html":{},"modules/FormModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/SyntheticDrawingModule.html":{}}}],["form.service.ts",{"_index":2800,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{},"coverage.html":{}}}],["form.service.ts:18",{"_index":2812,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["form.service.ts:19",{"_index":2814,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["form.service.ts:21",{"_index":2811,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["form.service.ts:22",{"_index":2802,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["form.service.ts:40",{"_index":2810,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["form.service.ts:45",{"_index":2806,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["form.service.ts:49",{"_index":2804,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["form/form.module",{"_index":1607,"title":{},"body":{"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/WelcomeModule.html":{}}}],["form/form.service",{"_index":437,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{}}}],["form/synthetic",{"_index":2737,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{},"modules/SyntheticDrawingModule.html":{},"coverage.html":{}}}],["form_template_token",{"_index":905,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formatjsodata",{"_index":2174,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["formatjsodata(satellites",{"_index":2192,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["formatparams",{"_index":1747,"title":{},"body":{"classes/LogEntry.html":{}}}],["formatparams(params",{"_index":1757,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["formbuilder",{"_index":658,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{}}}],["formbuilder().group",{"_index":1918,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["formcomponent",{"_index":332,"title":{"components/FormComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"modules/FormModule.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formcontrol",{"_index":19,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{}}}],["formcontrol(element.units[0",{"_index":1019,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["formcontrols",{"_index":997,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["formcontrolwarn",{"_index":900,"title":{"classes/FormControlWarn.html":{}},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"coverage.html":{}}}],["formcontrolwarn(element.default",{"_index":1000,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["formfragments",{"_index":1529,"title":{},"body":{"components/LayoutComponent.html":{}}}],["formgroup",{"_index":681,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{}}}],["formgroup.formvalues",{"_index":1673,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["formmodule",{"_index":1030,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/WelcomeModule.html":{},"modules.html":{},"overview.html":{}}}],["forms",{"_index":30,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/StepbarComponent.html":{},"interfaces/Validity.html":{},"interfaces/WarnFn.html":{}}}],["formsdata",{"_index":1218,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["formservice",{"_index":404,"title":{"injectables/FormService.html":{}},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"overview.html":{}}}],["formservice.globalform.value",{"_index":1550,"title":{},"body":{"components/LayoutComponent.html":{}}}],["formslabel",{"_index":1217,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["formsmodule",{"_index":1868,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["formstatus",{"_index":654,"title":{},"body":{"components/FormComponent.html":{}}}],["formstemplate",{"_index":640,"title":{"classes/FormsTemplate.html":{}},"body":{"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"coverage.html":{}}}],["formstemplate.dl_atmosphere",{"_index":1186,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.dl_carrier",{"_index":1187,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.dl_gs_rx_antenna",{"_index":1188,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.dl_receiver_gs",{"_index":1189,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.dl_sc_tx_antenna",{"_index":1185,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.dl_transmitter_sc",{"_index":1184,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.geometry",{"_index":1177,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.ul_atmosphere",{"_index":1181,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.ul_carrier",{"_index":1180,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.ul_gs_tx_antenna",{"_index":1179,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.ul_receiver_sc",{"_index":1183,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.ul_sc_rx_antenna",{"_index":1182,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate.ul_transmitter_gs",{"_index":1178,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["formstemplate:any",{"_index":699,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["formtemplate",{"_index":649,"title":{},"body":{"components/FormComponent.html":{}}}],["formtemplate(value",{"_index":705,"title":{},"body":{"components/FormComponent.html":{}}}],["formula",{"_index":2377,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["formulas",{"_index":2357,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["formvalidity",{"_index":1429,"title":{},"body":{"components/LayoutComponent.html":{}}}],["formvalues",{"_index":2792,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["forroot",{"_index":1836,"title":{},"body":{"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["forroot(config",{"_index":1889,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["fortawesome/angular",{"_index":384,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":2963,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":293,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/StepbarComponent.html":{},"interfaces/Validity.html":{},"dependencies.html":{}}}],["found",{"_index":996,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["frac{t_2}{g_1",{"_index":2393,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["frac{t_3}{g_1g_2",{"_index":2394,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["fragment",{"_index":930,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["free",{"_index":2448,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["freq",{"_index":1106,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["frequency",{"_index":1102,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["friis",{"_index":2470,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["fsl",{"_index":607,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["fspl",{"_index":2450,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["full",{"_index":2050,"title":{},"body":{"components/NavbarComponent.html":{}}}],["function",{"_index":34,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/WarnFn.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["functions",{"_index":694,"title":{"miscellaneous/functions.html":{}},"body":{"components/FormComponent.html":{},"classes/HelperFunctions.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/functions.html":{}}}],["functions.ts",{"_index":1222,"title":{},"body":{"classes/HelperFunctions.html":{},"coverage.html":{}}}],["functions.ts:15",{"_index":1242,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["functions.ts:21",{"_index":1251,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["functions.ts:40",{"_index":1240,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["functions.ts:49",{"_index":1245,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["functions.ts:6",{"_index":1236,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["functions.ts:7",{"_index":1234,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["functions.ts:8",{"_index":1232,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["further",{"_index":3041,"title":{},"body":{"index.html":{}}}],["future",{"_index":563,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["future.routeconfig",{"_index":581,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["future.url",{"_index":580,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["g/t",{"_index":2471,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["gain",{"_index":110,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/WarnFn.html":{},"miscellaneous/variables.html":{}}}],["gain_iso",{"_index":109,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["gaincalculation",{"_index":119,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["gains",{"_index":1671,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["gains[key",{"_index":1678,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["gases",{"_index":1096,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["gathers",{"_index":864,"title":{},"body":{"components/FormComponent.html":{}}}],["generalized",{"_index":772,"title":{},"body":{"components/FormComponent.html":{}}}],["generate",{"_index":842,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"index.html":{}}}],["generated",{"_index":2286,"title":{},"body":{"injectables/SaveLoadService.html":{},"index.html":{}}}],["generates",{"_index":977,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["genericantenna",{"_index":177,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["geo",{"_index":1916,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/ToastrTestingModule.html":{}}}],["geo.altitude.unit",{"_index":2443,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["geo.elevation.unit",{"_index":2441,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["geo.slantrange.unit",{"_index":2445,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["geometry",{"_index":714,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"interfaces/Validity.html":{},"components/WelcomeComponent.html":{}}}],["geometry.altitude.value",{"_index":2265,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["geometry.elevation.value",{"_index":2268,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["geometry.slantrange.value",{"_index":2270,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["geometrysubscribe",{"_index":646,"title":{},"body":{"components/FormComponent.html":{}}}],["getcomponents",{"_index":2596,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["getcomponentvalues",{"_index":1047,"title":{},"body":{"injectables/FormService.html":{}}}],["getcomponentvalues(componentid",{"_index":943,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["geterrormessage",{"_index":647,"title":{},"body":{"components/FormComponent.html":{}}}],["geterrormessage(control",{"_index":672,"title":{},"body":{"components/FormComponent.html":{}}}],["geterrormessage(this.localform.get(field.id)).error",{"_index":884,"title":{},"body":{"components/FormComponent.html":{}}}],["getformdata",{"_index":970,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["getformtemplate",{"_index":688,"title":{},"body":{"components/FormComponent.html":{}}}],["getisnanospaceenabled",{"_index":1991,"title":{},"body":{"components/NavbarComponent.html":{}}}],["getjsodata",{"_index":1355,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["getlabels",{"_index":1646,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["getlbscenario",{"_index":2801,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["getlbscenario$(id",{"_index":2805,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["getlbscenario(id",{"_index":2803,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["getpoints",{"_index":1681,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["getpowerin",{"_index":2593,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["getpowerout",{"_index":1644,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["getresult",{"_index":397,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["getstep",{"_index":2501,"title":{},"body":{"components/StepbarComponent.html":{}}}],["getter",{"_index":2605,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["getting",{"_index":2992,"title":{"index.html":{}},"body":{}}],["getvalidity",{"_index":2498,"title":{},"body":{"components/StepbarComponent.html":{}}}],["git",{"_index":3004,"title":{},"body":{"index.html":{}}}],["given",{"_index":2260,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["gives",{"_index":1485,"title":{},"body":{"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["global",{"_index":747,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["globalform",{"_index":843,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["globalformvalue",{"_index":1955,"title":{},"body":{"components/NavbarComponent.html":{}}}],["go",{"_index":1702,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/StepbarComponent.html":{},"interfaces/Validity.html":{},"index.html":{}}}],["going",{"_index":3011,"title":{},"body":{"index.html":{}}}],["good",{"_index":1014,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["graph",{"_index":1698,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules.html":{}}}],["graphpoints",{"_index":2551,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["green",{"_index":1591,"title":{},"body":{"components/LayoutComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["ground",{"_index":2727,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["groundstation",{"_index":1123,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["groundstations",{"_index":1407,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["groundstations:any",{"_index":1416,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"injectables/SaveLoadService.html":{}}}],["group",{"_index":855,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["group.addcontrol(groupname",{"_index":956,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["group.setcontrol(name",{"_index":938,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["group.setcontrol(this.componentname",{"_index":858,"title":{},"body":{"components/FormComponent.html":{}}}],["group[element.alternative.componentid",{"_index":1028,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["group[element.id",{"_index":1022,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["groupid",{"_index":650,"title":{},"body":{"components/FormComponent.html":{}}}],["groupname",{"_index":949,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["grx",{"_index":613,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{}}}],["gtx",{"_index":604,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{}}}],["hacky",{"_index":875,"title":{},"body":{"components/FormComponent.html":{}}}],["handle",{"_index":96,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"interfaces/WarnFn.html":{},"miscellaneous/variables.html":{}}}],["handled",{"_index":1174,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["handleerror",{"_index":399,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/LayoutComponent.html":{}}}],["handleerror(error",{"_index":417,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["handleerror(event",{"_index":1438,"title":{},"body":{"components/LayoutComponent.html":{}}}],["handles",{"_index":512,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["handling",{"_index":27,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["happening",{"_index":880,"title":{},"body":{"components/FormComponent.html":{}}}],["hardcoded",{"_index":479,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["hasantenna",{"_index":247,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["hasantennacard",{"_index":1430,"title":{},"body":{"components/LayoutComponent.html":{}}}],["hasatmcard",{"_index":1431,"title":{},"body":{"components/LayoutComponent.html":{}}}],["hasgeometrybeendrawn",{"_index":2358,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["hasimage",{"_index":641,"title":{},"body":{"components/FormComponent.html":{}}}],["hasn't",{"_index":2026,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{}}}],["haven't",{"_index":980,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["header",{"_index":301,"title":{},"body":{"components/CardComponent.html":{},"injectables/JSatOrbLinkService.html":{}}}],["height",{"_index":1571,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["helicoidal",{"_index":208,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["helixantenna",{"_index":207,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["help",{"_index":3042,"title":{},"body":{"index.html":{}}}],["helper",{"_index":729,"title":{},"body":{"components/FormComponent.html":{},"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["helperfunctions",{"_index":692,"title":{"classes/HelperFunctions.html":{}},"body":{"components/FormComponent.html":{},"classes/HelperFunctions.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{}}}],["helperfunctions.altitudefromsrelev(sr",{"_index":794,"title":{},"body":{"components/FormComponent.html":{}}}],["helperfunctions.convertdistance(parsefloat(altitude.value",{"_index":809,"title":{},"body":{"components/FormComponent.html":{}}}],["helperfunctions.convertdistance(parsefloat(value.value",{"_index":790,"title":{},"body":{"components/FormComponent.html":{}}}],["helperfunctions.converttletokeplearian",{"_index":2249,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["helperfunctions.converttletokeplearian(satellite.line1",{"_index":2247,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["helperfunctions.slantrangefromaltelev(alt",{"_index":802,"title":{},"body":{"components/FormComponent.html":{}}}],["helperfunctions.slantrangefromaltelev(altitude.value",{"_index":813,"title":{},"body":{"components/FormComponent.html":{}}}],["helperfunctions.slantrangefromaltelev(satellite.sma",{"_index":2271,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["here",{"_index":41,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/WarnFn.html":{}}}],["hiding",{"_index":2435,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["horizon",{"_index":2446,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["horz",{"_index":2724,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["html",{"_index":325,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["http",{"_index":513,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["http://localhost:4200",{"_index":3029,"title":{},"body":{"index.html":{}}}],["http://localhost:8001",{"_index":1936,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/variables.html":{}}}],["httpclient",{"_index":403,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["httpclientmodule",{"_index":1872,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["httperrorresponse",{"_index":418,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["https://blog.hardinglabs.com/tle",{"_index":1275,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["https://dcas",{"_index":1880,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"miscellaneous/variables.html":{}}}],["https://dev.to/vishesh/custom",{"_index":25,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["https://github.com/angular/angular/issues/38376#issuecomment",{"_index":1884,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["https://github.com/garciparedes/ng",{"_index":2398,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["https://github.com/scttcper/ngx",{"_index":1906,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["https://medium.com/dailyjs/how",{"_index":3001,"title":{},"body":{"index.html":{}}}],["https://stackoverflow.com/questions/695151/data",{"_index":2321,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["https://www.codemag.com/article/1711021/logging",{"_index":1783,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["human",{"_index":226,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["hz",{"_index":1105,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["icons",{"_index":296,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/StepbarComponent.html":{},"interfaces/Validity.html":{},"dependencies.html":{}}}],["id",{"_index":183,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["id:string",{"_index":222,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["id:string]:number",{"_index":2783,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["identifier",{"_index":2924,"title":{},"body":{"coverage.html":{}}}],["if(!control",{"_index":49,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["if(!isup",{"_index":1718,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["if(control.errors",{"_index":44,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["if(this.componentname",{"_index":758,"title":{},"body":{"components/FormComponent.html":{}}}],["image",{"_index":198,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["impl_loss",{"_index":1117,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["implement",{"_index":480,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["implementation",{"_index":1118,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["implemented",{"_index":138,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["implements",{"_index":253,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/CustomRouteReuseStrategy.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Template.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"classes/emptyForm.html":{}}}],["import",{"_index":16,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{}}}],["import'},{'name",{"_index":337,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["import.component",{"_index":1619,"title":{},"body":{"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["import.component.html",{"_index":1304,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.scss",{"_index":1303,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts",{"_index":1302,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"coverage.html":{}}}],["import.component.ts:12",{"_index":1314,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts:14",{"_index":1322,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts:15",{"_index":1321,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts:16",{"_index":1320,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts:18",{"_index":1319,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts:23",{"_index":1316,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import.component.ts:38",{"_index":1315,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["import/jsatorb",{"_index":1352,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"modules/LayoutModule.html":{},"coverage.html":{}}}],["import/luplink",{"_index":1301,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"coverage.html":{}}}],["importance",{"_index":76,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["important",{"_index":321,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["importconfigfile",{"_index":2175,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["importconfigfile(files",{"_index":2194,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["importconfigfile(files:filelist",{"_index":2277,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["imported",{"_index":1346,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["importfile(files",{"_index":2339,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["importform",{"_index":1048,"title":{},"body":{"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{}}}],["importform(results",{"_index":959,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["importing",{"_index":960,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["importjsatorbconfigfile",{"_index":2176,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["importjsatorbconfigfile(files",{"_index":2196,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["importjsatorbdata",{"_index":2861,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["importjsatorbdata(files",{"_index":2868,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["importjso",{"_index":1308,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["importjsodata",{"_index":2177,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["importjsodata(title",{"_index":2198,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["imports",{"_index":386,"title":{},"body":{"modules/CardModule.html":{},"components/FormComponent.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"modules/WelcomeModule.html":{}}}],["improved",{"_index":453,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{}}}],["improvement",{"_index":822,"title":{},"body":{"components/FormComponent.html":{}}}],["inc",{"_index":2253,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["include",{"_index":2761,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["increment",{"_index":1573,"title":{},"body":{"components/LayoutComponent.html":{}}}],["independant",{"_index":2186,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["index",{"_index":11,"title":{"index.html":{}},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"classes/MockFormService.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"classes/emptyForm.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["individualconfig",{"_index":1909,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"classes/emptyForm.html":{},"miscellaneous/enumerations.html":{}}}],["info(msg",{"_index":1794,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["information",{"_index":526,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["init",{"_index":2620,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["initforms",{"_index":975,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["initgraph",{"_index":2554,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["initial",{"_index":2631,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["initialize",{"_index":724,"title":{},"body":{"components/FormComponent.html":{}}}],["initialized",{"_index":919,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["initlbscenario(id",{"_index":2832,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["inject",{"_index":430,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["inject(environment_token",{"_index":1412,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["inject(form_template_token",{"_index":921,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{}}}],["injectable",{"_index":17,"title":{"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"injectables/LoggerService.html":{},"injectables/MockToastPackage.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{}},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{},"coverage.html":{}}}],["injectables",{"_index":388,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"injectables/LoggerService.html":{},"injectables/MockToastPackage.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{},"overview.html":{}}}],["injection",{"_index":1929,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"injectables/SaveLoadService.html":{},"modules/ToastrTestingModule.html":{}}}],["injectiontoken",{"_index":1039,"title":{},"body":{"modules/FormModule.html":{},"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["injectiontoken('environment",{"_index":3055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectiontoken('formtemplate",{"_index":3056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inline",{"_index":1137,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["input",{"_index":94,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"components/CardComponent.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Validity.html":{},"interfaces/WarnFn.html":{}}}],["inputcontrol",{"_index":999,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["inputed",{"_index":471,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["inputs",{"_index":281,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["inside",{"_index":1347,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["install",{"_index":3015,"title":{},"body":{"index.html":{}}}],["instance",{"_index":953,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["instanceof",{"_index":516,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["instantiated",{"_index":981,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["instead",{"_index":935,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["integer",{"_index":1692,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["intercept",{"_index":872,"title":{},"body":{"components/FormComponent.html":{}}}],["interested",{"_index":2623,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/LinkBudgetComponent.html":{},"interfaces/LuplinkConfig.html":{},"interfaces/Point.html":{},"interfaces/Template.html":{},"interfaces/Validity.html":{},"interfaces/WarnFn.html":{}},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"injectables/CustomValidators.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"interfaces/Point.html":{},"components/StepbarComponent.html":{},"interfaces/Template.html":{},"interfaces/Validity.html":{},"interfaces/WarnFn.html":{},"coverage.html":{},"classes/emptyForm.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/LinkBudgetComponent.html":{},"interfaces/LuplinkConfig.html":{},"interfaces/Point.html":{},"interfaces/Template.html":{},"interfaces/Validity.html":{},"interfaces/WarnFn.html":{},"overview.html":{}}}],["internal",{"_index":1528,"title":{},"body":{"components/LayoutComponent.html":{}}}],["interpolating",{"_index":155,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["invalid",{"_index":469,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"classes/HelperFunctions.html":{},"components/LayoutComponent.html":{},"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["invalid:not(form",{"_index":2798,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["inventory",{"_index":1432,"title":{},"body":{"components/LayoutComponent.html":{}}}],["involved",{"_index":703,"title":{},"body":{"components/FormComponent.html":{}}}],["involves",{"_index":826,"title":{},"body":{"components/FormComponent.html":{}}}],["ionospheric",{"_index":1098,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["isactive",{"_index":2489,"title":{},"body":{"components/StepbarComponent.html":{}}}],["isactive(step",{"_index":2493,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["iscurrentformsaved",{"_index":918,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["iseditingtitle",{"_index":1956,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isempty",{"_index":1305,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["isinitialized",{"_index":922,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["isinterlink",{"_index":917,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["isn't",{"_index":775,"title":{},"body":{"components/FormComponent.html":{},"index.html":{}}}],["isnanospaceenabled",{"_index":1963,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isnanospaceenabled(value",{"_index":2006,"title":{},"body":{"components/NavbarComponent.html":{}}}],["isotropicgainvalidator",{"_index":90,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["isstandalone",{"_index":651,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["issubform",{"_index":652,"title":{},"body":{"components/FormComponent.html":{}}}],["issue",{"_index":79,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["issued",{"_index":1281,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["issues",{"_index":796,"title":{},"body":{"components/FormComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["isup",{"_index":1704,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["iswide",{"_index":282,"title":{},"body":{"components/CardComponent.html":{}}}],["it's",{"_index":238,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["item",{"_index":1539,"title":{},"body":{"components/LayoutComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["jarring",{"_index":78,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["javascript",{"_index":2304,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["jsatorb",{"_index":336,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{}}}],["jsatorb.load",{"_index":1351,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["jsatorb.luplink",{"_index":1348,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["jsatorblinkcomponent",{"_index":334,"title":{"components/JSatOrbLinkComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["jsatorblinkservice",{"_index":1311,"title":{"injectables/JSatOrbLinkService.html":{}},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"modules/LayoutModule.html":{},"coverage.html":{},"overview.html":{}}}],["jso",{"_index":2230,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["jsodata",{"_index":1306,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/WelcomeComponent.html":{}}}],["jsoform",{"_index":2857,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["jsomockdata",{"_index":1354,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["json",{"_index":492,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["json.stringify(item",{"_index":1781,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["k",{"_index":1133,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["karma",{"_index":3038,"title":{},"body":{"index.html":{}}}],["katex",{"_index":2399,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"dependencies.html":{}}}],["katexmodule",{"_index":2480,"title":{},"body":{"modules/SimpleDocumentationModule.html":{}}}],["keeping",{"_index":2817,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["keeps",{"_index":632,"title":{},"body":{"classes/DrawingDefault.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["kep.html",{"_index":1276,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["keplerian",{"_index":2243,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["key",{"_index":995,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["key:string",{"_index":2504,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["keyframes",{"_index":2141,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["khz",{"_index":1104,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["kilometer",{"_index":1257,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["kind",{"_index":95,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"interfaces/WarnFn.html":{}}}],["km",{"_index":792,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["know",{"_index":1474,"title":{},"body":{"components/LayoutComponent.html":{}}}],["label",{"_index":224,"title":{},"body":{"interfaces/AntennaField.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["labels",{"_index":1648,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["labels.push(label",{"_index":1655,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["lacking",{"_index":1278,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["large",{"_index":2306,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["last",{"_index":2818,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["lastpoint",{"_index":1705,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["lastpoint.x",{"_index":1706,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["lastpoint.y",{"_index":1707,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["later",{"_index":56,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{}}}],["latitude",{"_index":1409,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["layout",{"_index":1422,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout'},{'name",{"_index":339,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["layout.component.html",{"_index":1424,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layout.component.scss",{"_index":1423,"title":{},"body":{"components/LayoutComponent.html":{}}}],["layoutcomponent",{"_index":338,"title":{"components/LayoutComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["layoutmodule",{"_index":1594,"title":{"modules/LayoutModule.html":{}},"body":{"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules.html":{},"overview.html":{}}}],["lb",{"_index":1697,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{}}}],["lbscenario",{"_index":2626,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["lbscenariosub",{"_index":2743,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["left",{"_index":821,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["legend",{"_index":324,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["length",{"_index":163,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["less",{"_index":1012,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["level",{"_index":1261,"title":{},"body":{"classes/HelperFunctions.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["li",{"_index":1559,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["li.active",{"_index":1590,"title":{},"body":{"components/LayoutComponent.html":{}}}],["li.active:before",{"_index":1592,"title":{},"body":{"components/LayoutComponent.html":{}}}],["li:after",{"_index":1583,"title":{},"body":{"components/LayoutComponent.html":{}}}],["li:before",{"_index":1569,"title":{},"body":{"components/LayoutComponent.html":{}}}],["li:first",{"_index":1588,"title":{},"body":{"components/LayoutComponent.html":{}}}],["lib",{"_index":271,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["library",{"_index":151,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["limitations",{"_index":2323,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["line",{"_index":507,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Validity.html":{}}}],["line1",{"_index":1377,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["line2",{"_index":1386,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["linear",{"_index":597,"title":{},"body":{"classes/DrawingDefault.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["lines",{"_index":2708,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["link",{"_index":390,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"index.html":{}}}],["link.service",{"_index":1325,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"modules/LayoutModule.html":{}}}],["link.service.ts",{"_index":1353,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"coverage.html":{}}}],["link.service.ts:10",{"_index":1411,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["link.service.ts:44",{"_index":1358,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["link.service.ts:50",{"_index":1361,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["link.service.ts:54",{"_index":1359,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["link.shin",{"_index":3007,"title":{},"body":{"index.html":{}}}],["link:focus",{"_index":2057,"title":{},"body":{"components/NavbarComponent.html":{}}}],["linkbudgetcomponent",{"_index":630,"title":{"interfaces/LinkBudgetComponent.html":{}},"body":{"classes/DrawingDefault.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"coverage.html":{}}}],["linkbudgetcomponent.gain",{"_index":1715,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["linkbudgetcomponent.linear",{"_index":1710,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["linkbudgetcomponent.width",{"_index":1717,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["linkbudgetscenario",{"_index":1636,"title":{"classes/LinkBudgetScenario.html":{}},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"coverage.html":{}}}],["linkbudgetscenario(power",{"_index":2615,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["linkbudgetsynthesis",{"_index":395,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["linkpredict",{"_index":478,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["links",{"_index":1480,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["linkservice",{"_index":1307,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["linktype",{"_index":2559,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["list",{"_index":228,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["listens",{"_index":909,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["literal",{"_index":594,"title":{},"body":{"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Validity.html":{},"components/WelcomeComponent.html":{},"miscellaneous/typealiases.html":{}}}],["lna",{"_index":1140,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["lna_gain",{"_index":1139,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["lnanoisetemp",{"_index":1142,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["load",{"_index":1344,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["load(files",{"_index":1967,"title":{},"body":{"components/NavbarComponent.html":{}}}],["load.service",{"_index":1324,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["load.service.ts",{"_index":2171,"title":{},"body":{"injectables/SaveLoadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["load.service.ts:110",{"_index":2199,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["load.service.ts:135",{"_index":2195,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["load.service.ts:170",{"_index":2191,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["load.service.ts:34",{"_index":2178,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["load.service.ts:42",{"_index":2200,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["load.service.ts:61",{"_index":2197,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["load.service.ts:92",{"_index":2193,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["loaded",{"_index":2293,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["loading",{"_index":1957,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["loadservice",{"_index":1312,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{}}}],["loadservice:saveloadservice",{"_index":1327,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["local",{"_index":3008,"title":{},"body":{"index.html":{}}}],["localform",{"_index":642,"title":{},"body":{"components/FormComponent.html":{}}}],["localfrom",{"_index":846,"title":{},"body":{"components/FormComponent.html":{}}}],["log",{"_index":1782,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["log(msg",{"_index":1809,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["logentry",{"_index":1741,"title":{"classes/LogEntry.html":{}},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"coverage.html":{}}}],["logentry.formatparams(optionalparams",{"_index":1799,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["logentry.formatparams(this.extrainfo",{"_index":1772,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["logger",{"_index":132,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/WelcomeComponent.html":{}}}],["logger.module",{"_index":1761,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["logger.service",{"_index":1842,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger:loggerservice",{"_index":461,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/NavbarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["loggermodule",{"_index":1036,"title":{"modules/LoggerModule.html":{}},"body":{"modules/FormModule.html":{},"modules/LayoutModule.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"modules.html":{},"overview.html":{}}}],["loggermodule.forroot",{"_index":1044,"title":{},"body":{"modules/FormModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["loggerservice",{"_index":133,"title":{"injectables/LoggerService.html":{}},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logic",{"_index":452,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/WelcomeComponent.html":{}}}],["loglevel",{"_index":1751,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"miscellaneous/enumerations.html":{}}}],["loglevel.all",{"_index":1810,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["loglevel.debug",{"_index":1752,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["loglevel.error",{"_index":1801,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["loglevel.fatal",{"_index":1808,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["loglevel.info",{"_index":1795,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["loglevel.off",{"_index":1832,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["loglevel.warn",{"_index":1797,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["loglevel[this.level",{"_index":1768,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["logwithdate",{"_index":1745,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["logwithtoast",{"_index":1790,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["longitude",{"_index":1410,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["look",{"_index":2297,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["looks",{"_index":1701,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["losing",{"_index":2025,"title":{},"body":{"components/NavbarComponent.html":{}}}],["loss",{"_index":40,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/WarnFn.html":{}}}],["losses",{"_index":1099,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["losswarningvalidator",{"_index":2951,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["losswarningvalidator(control",{"_index":35,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{},"miscellaneous/functions.html":{}}}],["lot",{"_index":827,"title":{},"body":{"components/FormComponent.html":{}}}],["lp",{"_index":1172,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["lpath",{"_index":608,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{}}}],["lrx",{"_index":617,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{}}}],["ltx",{"_index":601,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{}}}],["luplink",{"_index":335,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"dependencies.html":{},"index.html":{}}}],["luplink.tgz",{"_index":3017,"title":{},"body":{"index.html":{}}}],["luplink/src/lib/components/card/card.component.ts",{"_index":269,"title":{},"body":{"components/CardComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/components/card/card.component.ts:10",{"_index":286,"title":{},"body":{"components/CardComponent.html":{}}}],["luplink/src/lib/components/card/card.component.ts:12",{"_index":287,"title":{},"body":{"components/CardComponent.html":{}}}],["luplink/src/lib/components/card/card.component.ts:14",{"_index":285,"title":{},"body":{"components/CardComponent.html":{}}}],["luplink/src/lib/components/card/card.component.ts:16",{"_index":292,"title":{},"body":{"components/CardComponent.html":{}}}],["luplink/src/lib/components/card/card.component.ts:18",{"_index":291,"title":{},"body":{"components/CardComponent.html":{}}}],["luplink/src/lib/components/card/card.component.ts:20",{"_index":288,"title":{},"body":{"components/CardComponent.html":{}}}],["luplink/src/lib/components/card/card.module.ts",{"_index":376,"title":{},"body":{"modules/CardModule.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts",{"_index":1949,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:19",{"_index":1990,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:21",{"_index":1986,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:23",{"_index":1979,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:24",{"_index":1975,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:25",{"_index":1992,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:28",{"_index":1994,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:32",{"_index":1977,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:33",{"_index":1981,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:34",{"_index":1984,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:35",{"_index":1982,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:36",{"_index":1964,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:40",{"_index":1978,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:41",{"_index":1980,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:49",{"_index":1973,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:56",{"_index":1966,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:63",{"_index":1971,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:77",{"_index":1974,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:81",{"_index":1969,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.component.ts:84",{"_index":1965,"title":{},"body":{"components/NavbarComponent.html":{}}}],["luplink/src/lib/components/navbar/navbar.module.ts",{"_index":2065,"title":{},"body":{"modules/NavbarModule.html":{}}}],["luplink/src/lib/components/navigation",{"_index":2067,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"coverage.html":{}}}],["luplink/src/lib/components/results/components/results/results.component.ts",{"_index":2929,"title":{},"body":{"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["luplink/src/lib/components/results/components/sidebar/result",{"_index":2153,"title":{},"body":{"components/ResultSidebarComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/components/results/results.module.ts",{"_index":2164,"title":{},"body":{"modules/ResultSidebarModule.html":{}}}],["luplink/src/lib/components/simple",{"_index":2349,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"coverage.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts",{"_index":2482,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{},"coverage.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:17",{"_index":2492,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:20",{"_index":2500,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:28",{"_index":2491,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:31",{"_index":2503,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:34",{"_index":2496,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:35",{"_index":2497,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:36",{"_index":2490,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:40",{"_index":2494,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.component.ts:54",{"_index":2495,"title":{},"body":{"components/StepbarComponent.html":{}}}],["luplink/src/lib/components/stepbar/stepbar.module.ts",{"_index":2529,"title":{},"body":{"modules/StepbarModule.html":{}}}],["luplink/src/lib/components/synthesis/synthesis.component.ts",{"_index":2531,"title":{},"body":{"components/SynthesisComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/components/synthesis/synthesis.component.ts:11",{"_index":2536,"title":{},"body":{"components/SynthesisComponent.html":{}}}],["luplink/src/lib/components/synthesis/synthesis.component.ts:8",{"_index":2535,"title":{},"body":{"components/SynthesisComponent.html":{}}}],["luplink/src/lib/components/synthesis/synthesis.module.ts",{"_index":2542,"title":{},"body":{"modules/SynthesisModule.html":{}}}],["luplink/src/lib/components/synthetic",{"_index":589,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"coverage.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts",{"_index":2854,"title":{},"body":{"components/WelcomeComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:15",{"_index":2863,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:19",{"_index":2873,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:20",{"_index":2876,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:21",{"_index":2877,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:22",{"_index":2874,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:23",{"_index":2872,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:25",{"_index":2875,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:30",{"_index":2870,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:41",{"_index":2869,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:61",{"_index":2867,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.component.ts:71",{"_index":2871,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["luplink/src/lib/components/welcome/welcome.module.ts",{"_index":2921,"title":{},"body":{"modules/WelcomeModule.html":{}}}],["luplink/src/lib/form/component/form.component.ts",{"_index":634,"title":{},"body":{"components/FormComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/form/component/form.component.ts:114",{"_index":671,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:160",{"_index":669,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:209",{"_index":673,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:23",{"_index":679,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:25",{"_index":682,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:26",{"_index":678,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:28",{"_index":660,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:44",{"_index":689,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:48",{"_index":661,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:49",{"_index":663,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:50",{"_index":662,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:52",{"_index":665,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:54",{"_index":675,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:55",{"_index":684,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:56",{"_index":676,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:57",{"_index":680,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:58",{"_index":687,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:60",{"_index":659,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:62",{"_index":683,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:68",{"_index":667,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/component/form.component.ts:76",{"_index":674,"title":{},"body":{"components/FormComponent.html":{}}}],["luplink/src/lib/form/form.module.ts",{"_index":1037,"title":{},"body":{"modules/FormModule.html":{}}}],["luplink/src/lib/form/form.service.ts",{"_index":901,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"coverage.html":{}}}],["luplink/src/lib/form/form.service.ts:103",{"_index":1055,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:107",{"_index":1058,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:128",{"_index":1053,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:17",{"_index":902,"title":{},"body":{"classes/FormControlWarn.html":{}}}],["luplink/src/lib/form/form.service.ts:23",{"_index":1062,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:30",{"_index":1063,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:31",{"_index":1061,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:32",{"_index":1066,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:33",{"_index":1065,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:34",{"_index":1064,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:37",{"_index":1051,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:46",{"_index":1059,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:50",{"_index":1052,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:70",{"_index":1054,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:75",{"_index":1060,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:88",{"_index":1057,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/form/form.service.ts:99",{"_index":1056,"title":{},"body":{"injectables/FormService.html":{}}}],["luplink/src/lib/luplink",{"_index":1300,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"coverage.html":{}}}],["luplink/src/lib/luplink.module.ts",{"_index":1866,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["luplink/src/lib/luplink.module.ts:48",{"_index":1900,"title":{},"body":{"modules/LuplinkModule.html":{}}}],["luplink/src/lib/services/compute",{"_index":389,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"coverage.html":{}}}],["luplink/src/lib/services/save",{"_index":2170,"title":{},"body":{"injectables/SaveLoadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["luplink/src/lib/shared/custom",{"_index":7,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["luplink/src/lib/shared/customroutereusestrategy.ts",{"_index":541,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"coverage.html":{}}}],["luplink/src/lib/shared/customroutereusestrategy.ts:12",{"_index":565,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["luplink/src/lib/shared/customroutereusestrategy.ts:18",{"_index":557,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["luplink/src/lib/shared/customroutereusestrategy.ts:23",{"_index":553,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["luplink/src/lib/shared/customroutereusestrategy.ts:27",{"_index":562,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["luplink/src/lib/shared/customroutereusestrategy.ts:5",{"_index":550,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["luplink/src/lib/shared/customroutereusestrategy.ts:7",{"_index":559,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["luplink/src/lib/shared/dependencies.ts",{"_index":2952,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["luplink/src/lib/shared/helper",{"_index":1221,"title":{},"body":{"classes/HelperFunctions.html":{},"coverage.html":{}}}],["luplink/src/lib/shared/logger/logger.module.ts",{"_index":1835,"title":{},"body":{"modules/LoggerModule.html":{}}}],["luplink/src/lib/shared/logger/logger.module.ts:23",{"_index":1837,"title":{},"body":{"modules/LoggerModule.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts",{"_index":1742,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:103",{"_index":1852,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:111",{"_index":1858,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:116",{"_index":1853,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:120",{"_index":1855,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:124",{"_index":1856,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:142",{"_index":1860,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:158",{"_index":1857,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:24",{"_index":1749,"title":{},"body":{"classes/LogEntry.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:26",{"_index":1755,"title":{},"body":{"classes/LogEntry.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:28",{"_index":1753,"title":{},"body":{"classes/LogEntry.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:30",{"_index":1750,"title":{},"body":{"classes/LogEntry.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:32",{"_index":1754,"title":{},"body":{"classes/LogEntry.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:34",{"_index":1756,"title":{},"body":{"classes/LogEntry.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:50",{"_index":1758,"title":{},"body":{"classes/LogEntry.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:73",{"_index":1850,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:80",{"_index":1861,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:84",{"_index":1862,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:86",{"_index":1863,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:88",{"_index":1864,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:90",{"_index":1851,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:94",{"_index":1854,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/logger/logger.service.ts:98",{"_index":1859,"title":{},"body":{"injectables/LoggerService.html":{}}}],["luplink/src/lib/shared/models/antennas.ts",{"_index":115,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["luplink/src/lib/shared/models/antennas.ts:110",{"_index":262,"title":{},"body":{"classes/Antennas.html":{}}}],["luplink/src/lib/shared/models/antennas.ts:66",{"_index":261,"title":{},"body":{"classes/Antennas.html":{}}}],["luplink/src/lib/shared/models/antennas.ts:86",{"_index":263,"title":{},"body":{"classes/Antennas.html":{}}}],["luplink/src/lib/shared/models/form.model.ts",{"_index":219,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"coverage.html":{},"classes/emptyForm.html":{}}}],["luplink/src/lib/shared/models/form.model.ts:42",{"_index":2986,"title":{},"body":{"classes/emptyForm.html":{}}}],["luplink/src/lib/shared/models/form.model.ts:43",{"_index":2987,"title":{},"body":{"classes/emptyForm.html":{}}}],["luplink/src/lib/shared/models/form.model.ts:44",{"_index":2985,"title":{},"body":{"classes/emptyForm.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts",{"_index":1630,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"coverage.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:106",{"_index":1732,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:15",{"_index":1728,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:17",{"_index":1729,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:19",{"_index":1727,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:23",{"_index":1726,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:31",{"_index":1740,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:35",{"_index":1737,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:39",{"_index":1735,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:57",{"_index":1730,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:61",{"_index":1731,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:71",{"_index":1733,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:75",{"_index":1734,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:86",{"_index":1738,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:90",{"_index":1736,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/models/linkbudgetscenario.model.ts:94",{"_index":1739,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts",{"_index":1067,"title":{},"body":{"classes/FormsTemplate.html":{},"coverage.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:135",{"_index":1197,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:15",{"_index":1176,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:165",{"_index":1210,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:195",{"_index":1191,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:231",{"_index":1208,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:275",{"_index":1163,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:310",{"_index":1150,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:340",{"_index":1100,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:375",{"_index":1121,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:41",{"_index":1196,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:425",{"_index":1128,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:455",{"_index":1144,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:486",{"_index":1083,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:488",{"_index":1190,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:8",{"_index":1164,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mockformstemplate.ts:99",{"_index":1213,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts",{"_index":1903,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:14",{"_index":1939,"title":{},"body":{"classes/MockFormService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:15",{"_index":1938,"title":{},"body":{"classes/MockFormService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:16",{"_index":1940,"title":{},"body":{"classes/MockFormService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:21",{"_index":1942,"title":{},"body":{"classes/MockFormService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:23",{"_index":1941,"title":{},"body":{"classes/MockFormService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:32",{"_index":1947,"title":{},"body":{"classes/MockupLoggerService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:33",{"_index":1944,"title":{},"body":{"classes/MockupLoggerService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:34",{"_index":1945,"title":{},"body":{"classes/MockupLoggerService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:35",{"_index":1946,"title":{},"body":{"classes/MockupLoggerService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:36",{"_index":1948,"title":{},"body":{"classes/MockupLoggerService.html":{}}}],["luplink/src/lib/shared/testing/mocks.ts:40",{"_index":1943,"title":{},"body":{"injectables/MockToastPackage.html":{}}}],["luplink/src/lib/ui/layout.module.ts",{"_index":1604,"title":{},"body":{"modules/LayoutModule.html":{}}}],["luplink/src/lib/ui/link",{"_index":1420,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/ui/view/view.component.ts",{"_index":2849,"title":{},"body":{"components/ViewComponent.html":{},"coverage.html":{}}}],["luplink/src/lib/ui/view/view.component.ts:12",{"_index":2853,"title":{},"body":{"components/ViewComponent.html":{}}}],["luplink/src/lib/ui/view/view.component.ts:8",{"_index":2852,"title":{},"body":{"components/ViewComponent.html":{}}}],["luplinkconfig",{"_index":1865,"title":{"interfaces/LuplinkConfig.html":{}},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"coverage.html":{}}}],["luplinkluplink",{"_index":3021,"title":{},"body":{"index.html":{}}}],["luplinkmodule",{"_index":1888,"title":{"modules/LuplinkModule.html":{}},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules.html":{},"overview.html":{}}}],["lut",{"_index":146,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["luts",{"_index":2105,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["m",{"_index":202,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{}}}],["mainsvg",{"_index":2552,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["major",{"_index":2908,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["make",{"_index":965,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavbarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{}}}],["makes",{"_index":990,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["making",{"_index":502,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["manual",{"_index":1277,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["manually",{"_index":2004,"title":{},"body":{"components/NavbarComponent.html":{}}}],["map",{"_index":549,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["margin",{"_index":302,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["margin:0px",{"_index":2120,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["margin:10px",{"_index":2125,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["margin:24px",{"_index":893,"title":{},"body":{"components/FormComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["margin:auto",{"_index":897,"title":{},"body":{"components/FormComponent.html":{}}}],["mark",{"_index":2338,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["matching",{"_index":112,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"dependencies.html":{},"classes/emptyForm.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.cos(delta",{"_index":1271,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["math.pi",{"_index":788,"title":{},"body":{"components/FormComponent.html":{},"classes/HelperFunctions.html":{}}}],["math.random",{"_index":1693,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["math.round((2.632",{"_index":169,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["math.round((math.random",{"_index":1687,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["math.round(12.316",{"_index":165,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.sqrt(40000",{"_index":172,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["math.round(this.earthradius",{"_index":1268,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["math.sin(delta",{"_index":1272,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["math.sqrt(((altitude",{"_index":1269,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["math.sqrt((sr",{"_index":1273,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["max",{"_index":186,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{},"modules/ToastrTestingModule.html":{}}}],["maximum",{"_index":2131,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["maybe",{"_index":234,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{},"classes/emptyForm.html":{}}}],["mean",{"_index":1293,"title":{},"body":{"classes/HelperFunctions.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["meananomaly']).foreach((val",{"_index":2256,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["menu",{"_index":2118,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["menu.is",{"_index":2132,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["mergemap((result",{"_index":2235,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["message",{"_index":106,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{}}}],["message?:string",{"_index":1812,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["metadata",{"_index":270,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["metadata.title}.json",{"_index":2334,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["meters",{"_index":1171,"title":{},"body":{"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{}}}],["method",{"_index":950,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["methods",{"_index":279,"title":{},"body":{"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"modules/LuplinkModule.html":{},"classes/MockFormService.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["mhz",{"_index":1103,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["middle",{"_index":2640,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["min",{"_index":889,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["minimum",{"_index":2373,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["miscellaneous",{"_index":2988,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miscellanious",{"_index":1785,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["mismatch",{"_index":1161,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["missing",{"_index":2298,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["mission",{"_index":1362,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["mix",{"_index":2189,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["mockcomputeservice",{"_index":1902,"title":{"classes/MockComputeService.html":{}},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{}}}],["mockenvironment",{"_index":1931,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["mockformservice",{"_index":1914,"title":{"classes/MockFormService.html":{}},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{}}}],["mocking",{"_index":1904,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["mockjsatorbdata",{"_index":2878,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["mockpostdata",{"_index":1912,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["mockpostdata.json",{"_index":1913,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["mocktoastpackage",{"_index":1923,"title":{"injectables/MockToastPackage.html":{}},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{}}}],["mockuploggerservice",{"_index":1922,"title":{"classes/MockupLoggerService.html":{}},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"coverage.html":{}}}],["mode",{"_index":2000,"title":{},"body":{"components/NavbarComponent.html":{}}}],["model",{"_index":2759,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["models",{"_index":1479,"title":{},"body":{"components/LayoutComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["models/antennas",{"_index":1214,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["models/default",{"_index":2599,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["models/form.model",{"_index":1215,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["modifications",{"_index":2034,"title":{},"body":{"components/NavbarComponent.html":{}}}],["modified",{"_index":2627,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["modify",{"_index":3000,"title":{},"body":{"index.html":{}}}],["module",{"_index":366,"title":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"modules/WelcomeModule.html":{}},"body":{"classes/DrawingDefault.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/ToastrTestingModule.html":{}}}],["modules",{"_index":368,"title":{"modules.html":{}},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"modules/WelcomeModule.html":{},"modules.html":{},"overview.html":{}}}],["modulewithproviders",{"_index":1040,"title":{},"body":{"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["more",{"_index":107,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/WarnFn.html":{},"index.html":{}}}],["motion",{"_index":1294,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["move",{"_index":1477,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{}}}],["msg",{"_index":1822,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["much",{"_index":525,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{}}}],["multiple",{"_index":71,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"interfaces/WarnFn.html":{}}}],["multiples",{"_index":1663,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["n",{"_index":1289,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["name",{"_index":330,"title":{},"body":{"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["named",{"_index":2342,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["nanospace",{"_index":1877,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{}}}],["nanospaceconfig",{"_index":1878,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nanospacerequestservice",{"_index":1874,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/WelcomeModule.html":{}}}],["nanospaceservice",{"_index":1875,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/WelcomeModule.html":{}}}],["nanostar.isae.fr/api",{"_index":1881,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"miscellaneous/variables.html":{}}}],["navanim",{"_index":2138,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["navbar",{"_index":1950,"title":{},"body":{"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["navbar'},{'name",{"_index":341,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["navbar.component",{"_index":2066,"title":{},"body":{"modules/NavbarModule.html":{}}}],["navbar.component.html",{"_index":1952,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.scss",{"_index":1951,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":340,"title":{"components/NavbarComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navbarmodule",{"_index":2060,"title":{"modules/NavbarModule.html":{}},"body":{"modules/NavbarModule.html":{},"modules.html":{},"overview.html":{}}}],["navigate",{"_index":3028,"title":{},"body":{"index.html":{}}}],["navigation",{"_index":343,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{}}}],["navigationsidebarcomponent",{"_index":342,"title":{"components/NavigationSidebarComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigationsidebarmodule",{"_index":1600,"title":{"modules/NavigationSidebarModule.html":{}},"body":{"modules/LayoutModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{},"modules.html":{},"overview.html":{}}}],["nearest",{"_index":1691,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["necessary",{"_index":2838,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["need",{"_index":925,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/SyntheticDrawingComponent.html":{},"index.html":{}}}],["needed",{"_index":1695,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["neighbor",{"_index":1486,"title":{},"body":{"components/LayoutComponent.html":{}}}],["neighbors",{"_index":1488,"title":{},"body":{"components/LayoutComponent.html":{}}}],["network",{"_index":519,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["new",{"_index":428,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["newform",{"_index":762,"title":{},"body":{"components/FormComponent.html":{}}}],["newform.setvalue(newvalue['geometry",{"_index":764,"title":{},"body":{"components/FormComponent.html":{}}}],["newform.setvalue(previousform",{"_index":852,"title":{},"body":{"components/FormComponent.html":{}}}],["newgains",{"_index":2782,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["newgains[key",{"_index":2786,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["newlbscenario",{"_index":2809,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["newscenario",{"_index":2574,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["newscenario.getlabels",{"_index":2632,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["newscenario.getpoints",{"_index":2676,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["newscenario.getpowerout",{"_index":2677,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["newvalue['geometry",{"_index":761,"title":{},"body":{"components/FormComponent.html":{}}}],["newvalue['geometry'].slantrange.value",{"_index":753,"title":{},"body":{"components/FormComponent.html":{}}}],["next",{"_index":506,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"components/NavbarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Validity.html":{}}}],["ng",{"_index":2481,"title":{},"body":{"modules/SimpleDocumentationModule.html":{},"components/SyntheticDrawingFormComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ngafterviewinit",{"_index":2361,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["ngmodule",{"_index":379,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"modules/WelcomeModule.html":{}}}],["ngondestroy",{"_index":2744,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["ngoninit",{"_index":1309,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["ngx",{"_index":1760,"title":{},"body":{"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"modules/WelcomeModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngxnanospace",{"_index":1886,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngxnanospaceclientlibmodule",{"_index":1876,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"modules/WelcomeModule.html":{}}}],["ngxnanospaceclientlibmodule.forroot(nanospaceconfig",{"_index":1887,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"miscellaneous/variables.html":{}}}],["no_units",{"_index":1205,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["node",{"_index":2011,"title":{},"body":{"components/NavbarComponent.html":{}}}],["node_modules/bulma",{"_index":2520,"title":{},"body":{"components/StepbarComponent.html":{}}}],["noise",{"_index":1131,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["none",{"_index":686,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["none;//remove",{"_index":2110,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["note",{"_index":2181,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["now",{"_index":153,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavbarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":2995,"title":{},"body":{"index.html":{}}}],["null",{"_index":36,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":125,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/HelperFunctions.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{},"classes/emptyForm.html":{},"miscellaneous/variables.html":{}}}],["numberofcomponents",{"_index":1679,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["numerical",{"_index":60,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"interfaces/WarnFn.html":{}}}],["o",{"_index":2521,"title":{},"body":{"components/StepbarComponent.html":{},"dependencies.html":{}}}],["object",{"_index":624,"title":{},"body":{"classes/DrawingDefault.html":{},"injectables/JSatOrbLinkService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"miscellaneous/variables.html":{}}}],["object's",{"_index":2822,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["object.entries(components).foreach(([key",{"_index":2784,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["object.entries(pagevalue).foreach(([key",{"_index":1495,"title":{},"body":{"components/LayoutComponent.html":{}}}],["object.entries(satellites).foreach(([key",{"_index":2244,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["object.entries(this.components).foreach(([key",{"_index":1651,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["object.entries(this.templates).foreach(([pagekey",{"_index":1491,"title":{},"body":{"components/LayoutComponent.html":{}}}],["object.keys(gains).foreach((key:any",{"_index":1676,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["object.keys(this.components).foreach((id",{"_index":1685,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["object.keys(this.components).length",{"_index":1680,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["object.prototype.hasownproperty.call(this.components",{"_index":1719,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["object.prototype.hasownproperty.call(this.validity.steps",{"_index":2512,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["object.values(['sma",{"_index":2252,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["object.values(this.components).foreach((linkbudgetcomponent",{"_index":1709,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["object.values(this.pagevalidity[pageid]).every((item",{"_index":1538,"title":{},"body":{"components/LayoutComponent.html":{}}}],["object.values(this.pagevalidity[pageid]).includes('invalid",{"_index":1537,"title":{},"body":{"components/LayoutComponent.html":{}}}],["objects.mockpostdata.geometry",{"_index":1915,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["obs",{"_index":2037,"title":{},"body":{"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["obs.complete",{"_index":2219,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["obs.error(err",{"_index":2214,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["obs.error(error",{"_index":2233,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["obs.error(new",{"_index":2210,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["obs.next(filereader.result",{"_index":2217,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["obs.next(this.parsejsodata(json.parse(value",{"_index":2232,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["obs.subscribe",{"_index":2040,"title":{},"body":{"components/NavbarComponent.html":{}}}],["obs.unsubscribe",{"_index":2889,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["observable",{"_index":413,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"injectables/SaveLoadService.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/variables.html":{}}}],["observable((obs",{"_index":2202,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["observables",{"_index":2224,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["observed",{"_index":914,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["occured",{"_index":520,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["of(new",{"_index":1921,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["onblur",{"_index":1961,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onblur($event",{"_index":1972,"title":{},"body":{"components/NavbarComponent.html":{}}}],["onblur($event:any",{"_index":2010,"title":{},"body":{"components/NavbarComponent.html":{}}}],["once",{"_index":81,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"interfaces/WarnFn.html":{}}}],["ondestroy",{"_index":2739,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["one",{"_index":231,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"components/LayoutComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["ones",{"_index":865,"title":{},"body":{"components/FormComponent.html":{}}}],["oninit",{"_index":691,"title":{},"body":{"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["onsubmit",{"_index":2745,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["oop",{"_index":244,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["opacity",{"_index":2142,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["open",{"_index":2209,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["opens",{"_index":2203,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["optional",{"_index":117,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"components/WelcomeComponent.html":{},"classes/emptyForm.html":{},"miscellaneous/functions.html":{}}}],["optionalparams",{"_index":1792,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["optionalparams.length>0",{"_index":1804,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["optionalparams[0",{"_index":1803,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["options",{"_index":235,"title":{},"body":{"interfaces/AntennaField.html":{},"injectables/ComputeLinkBudgetService.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"injectables/JSatOrbLinkService.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["optionsfield",{"_index":239,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["order",{"_index":75,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"components/SimpleDocumentationComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/WarnFn.html":{},"index.html":{}}}],["out",{"_index":375,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":72,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"interfaces/WarnFn.html":{}}}],["outputs",{"_index":653,"title":{},"body":{"components/FormComponent.html":{}}}],["overflow",{"_index":310,"title":{},"body":{"components/CardComponent.html":{}}}],["overflow:hidden",{"_index":306,"title":{},"body":{"components/CardComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["overrides",{"_index":2823,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["overview",{"_index":3043,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["overwrite",{"_index":851,"title":{},"body":{"components/FormComponent.html":{}}}],["p",{"_index":1776,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["pa",{"_index":2254,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["pack",{"_index":3010,"title":{},"body":{"index.html":{}}}],["package",{"_index":2958,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["package.json",{"_index":2091,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["packageinfo",{"_index":2090,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["packageinfo.version",{"_index":2098,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["padding",{"_index":2055,"title":{},"body":{"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["padding:0px",{"_index":894,"title":{},"body":{"components/FormComponent.html":{}}}],["padding:10px",{"_index":2114,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["padding:6px",{"_index":885,"title":{},"body":{"components/FormComponent.html":{}}}],["page",{"_index":1482,"title":{},"body":{"components/LayoutComponent.html":{},"index.html":{}}}],["pageid",{"_index":1444,"title":{},"body":{"components/LayoutComponent.html":{}}}],["pages",{"_index":1533,"title":{},"body":{"components/LayoutComponent.html":{}}}],["pagevalidity",{"_index":1433,"title":{},"body":{"components/LayoutComponent.html":{}}}],["pagevalue",{"_index":1492,"title":{},"body":{"components/LayoutComponent.html":{}}}],["param",{"_index":241,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/NavbarComponent.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["parameters",{"_index":406,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":143,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{},"miscellaneous/variables.html":{}}}],["params.boomlength.value",{"_index":164,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["params.component",{"_index":1501,"title":{},"body":{"components/LayoutComponent.html":{}}}],["params.foreach((item",{"_index":1780,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["params.join",{"_index":1773,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["params.some((p",{"_index":1774,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["parent",{"_index":249,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["parentcomponent",{"_index":246,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["parentid",{"_index":945,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["parentid?:string",{"_index":944,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["parentname",{"_index":643,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["parsefloat(`0.${tle2.substring(26",{"_index":1286,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["parsefloat(elev)).tofixed(1",{"_index":814,"title":{},"body":{"components/FormComponent.html":{}}}],["parsefloat(elevation.value)).tofixed(1",{"_index":803,"title":{},"body":{"components/FormComponent.html":{}}}],["parsefloat(geo.altitude.value",{"_index":2438,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["parsefloat(geo.slantrange.value",{"_index":2439,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["parsefloat(satellite[val",{"_index":2258,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["parsefloat(tle2.substring(52",{"_index":1290,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["parsejsodata",{"_index":2172,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["part",{"_index":2813,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{},"components/WelcomeComponent.html":{}}}],["parts",{"_index":993,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["pass",{"_index":68,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"interfaces/WarnFn.html":{}}}],["passes",{"_index":2204,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["patchform",{"_index":1049,"title":{},"body":{"injectables/FormService.html":{}}}],["patchform(parentname",{"_index":948,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["path",{"_index":2375,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["path/to/ngx",{"_index":3016,"title":{},"body":{"index.html":{}}}],["pattern",{"_index":59,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/WarnFn.html":{}}}],["pencil",{"_index":1958,"title":{},"body":{"components/NavbarComponent.html":{}}}],["per",{"_index":2848,"title":{},"body":{"modules/ToastrTestingModule.html":{}}}],["percent",{"_index":1632,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["pertinent",{"_index":531,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["physics",{"_index":1237,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["pick",{"_index":530,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["ping",{"_index":448,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["pipe",{"_index":493,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/SaveLoadService.html":{}}}],["placeholder",{"_index":2327,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["please",{"_index":50,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"components/LayoutComponent.html":{},"interfaces/WarnFn.html":{}}}],["plot",{"_index":1696,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["point",{"_index":1633,"title":{"interfaces/Point.html":{}},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"coverage.html":{}}}],["point.y",{"_index":2687,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["pointing",{"_index":1127,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["points",{"_index":1638,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["points.push",{"_index":1716,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["polarization",{"_index":1093,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["position",{"_index":598,"title":{},"body":{"classes/DrawingDefault.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{}}}],["positionclass",{"_index":1844,"title":{},"body":{"modules/LoggerModule.html":{}}}],["positions",{"_index":1650,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["positive",{"_index":111,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["possible",{"_index":229,"title":{},"body":{"interfaces/AntennaField.html":{},"injectables/ComputeLinkBudgetService.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["post",{"_index":487,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["post(url",{"_index":490,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["postdata",{"_index":476,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["power",{"_index":103,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/WarnFn.html":{}}}],["powerin",{"_index":593,"title":{},"body":{"classes/DrawingDefault.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["powerin(value",{"_index":2608,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["powerout",{"_index":1637,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["powerout.tofixed(1",{"_index":2726,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["powervalidator",{"_index":105,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["practice",{"_index":2816,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["precision",{"_index":1279,"title":{},"body":{"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{}}}],["precisiondecimals",{"_index":1250,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["present",{"_index":2434,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["pretty",{"_index":2312,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["prevent",{"_index":2024,"title":{},"body":{"components/NavbarComponent.html":{}}}],["previous",{"_index":849,"title":{},"body":{"components/FormComponent.html":{}}}],["previousform",{"_index":837,"title":{},"body":{"components/FormComponent.html":{}}}],["private",{"_index":398,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Validity.html":{},"components/WelcomeComponent.html":{}}}],["probably",{"_index":2295,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["process",{"_index":475,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"index.html":{}}}],["processed",{"_index":2905,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["prod",{"_index":2003,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["production",{"_index":1932,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":2517,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["progressbar",{"_index":1557,"title":{},"body":{"components/LayoutComponent.html":{}}}],["progressevent",{"_index":2347,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["project",{"_index":2898,"title":{},"body":{"components/WelcomeComponent.html":{},"index.html":{}}}],["project/ngx",{"_index":3020,"title":{},"body":{"index.html":{}}}],["project=ngx",{"_index":3009,"title":{},"body":{"index.html":{}}}],["projects/.../antennas.ts",{"_index":3050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../custom",{"_index":2991,"title":{},"body":{"miscellaneous/functions.html":{}}}],["projects/.../dependencies.ts",{"_index":3051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../logger.service.ts",{"_index":2990,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/.../luplink.module.ts",{"_index":3053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../mocks.ts",{"_index":3052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/.../results.component.ts",{"_index":3049,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["projects/.../save",{"_index":3054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects/luplink",{"_index":1998,"title":{},"body":{"components/NavbarComponent.html":{}}}],["projects/ngx",{"_index":6,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"classes/emptyForm.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["promise",{"_index":2240,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["promise((results",{"_index":2301,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["promise.reject(error",{"_index":2348,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["promise.resolve(json.parse(filereader.result",{"_index":2346,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["promises",{"_index":2182,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["propagation",{"_index":2455,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["properties",{"_index":12,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"classes/MockFormService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"interfaces/Validity.html":{},"components/WelcomeComponent.html":{},"classes/emptyForm.html":{}}}],["property",{"_index":1154,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["protocol",{"_index":2322,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["protractor",{"_index":3040,"title":{},"body":{"index.html":{}}}],["provide",{"_index":1628,"title":{},"body":{"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["provided",{"_index":1672,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["providedin",{"_index":442,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["providers",{"_index":1038,"title":{},"body":{"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/SyntheticDrawingModule.html":{},"modules/ToastrTestingModule.html":{},"modules/WelcomeModule.html":{}}}],["prx",{"_index":621,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{}}}],["ptx",{"_index":596,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{}}}],["public",{"_index":48,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{}}}],["purposes",{"_index":1010,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{}}}],["python",{"_index":150,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["quick",{"_index":728,"title":{},"body":{"components/FormComponent.html":{}}}],["r",{"_index":2382,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["r_e",{"_index":2384,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["r_e+h",{"_index":2383,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["raan",{"_index":2255,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["rad",{"_index":193,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"classes/FormsTemplate.html":{}}}],["rad/s",{"_index":1296,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["radians",{"_index":784,"title":{},"body":{"components/FormComponent.html":{}}}],["radius",{"_index":1581,"title":{},"body":{"components/LayoutComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["random",{"_index":1683,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["randomize",{"_index":1724,"title":{},"body":{"classes/LinkBudgetScenario.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["randomize(amplitude",{"_index":1682,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["randomizeinputs",{"_index":2746,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["randomizing",{"_index":2821,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["range",{"_index":717,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{}}}],["rate",{"_index":1110,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ratio",{"_index":1194,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["reachable",{"_index":447,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["reactive",{"_index":29,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{}}}],["reactiveformsmodule",{"_index":1041,"title":{},"body":{"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{}}}],["read",{"_index":2345,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["readable",{"_index":227,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["readfile",{"_index":2201,"title":{},"body":{"injectables/SaveLoadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["readfile(files).subscribe",{"_index":2231,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["real",{"_index":102,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["really",{"_index":732,"title":{},"body":{"components/FormComponent.html":{}}}],["reassign",{"_index":2031,"title":{},"body":{"components/NavbarComponent.html":{}}}],["recalculate",{"_index":781,"title":{},"body":{"components/FormComponent.html":{}}}],["receiver",{"_index":1129,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["receiver_antenna",{"_index":1122,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["recognize",{"_index":223,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["recreating",{"_index":1624,"title":{},"body":{"modules/LayoutModule.html":{}}}],["recursion",{"_index":795,"title":{},"body":{"components/FormComponent.html":{}}}],["red",{"_index":2799,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["redundant",{"_index":1631,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["reference",{"_index":1202,"title":{},"body":{"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"index.html":{}}}],["referencetemperature",{"_index":1201,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["refreshpagevalidity",{"_index":1434,"title":{},"body":{"components/LayoutComponent.html":{}}}],["refreshpagevalidity(pageid",{"_index":1442,"title":{},"body":{"components/LayoutComponent.html":{}}}],["regarding",{"_index":454,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["regenerate",{"_index":845,"title":{},"body":{"components/FormComponent.html":{}}}],["regexp",{"_index":873,"title":{},"body":{"components/FormComponent.html":{}}}],["related",{"_index":776,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{}}}],["relative",{"_index":1564,"title":{},"body":{"components/LayoutComponent.html":{}}}],["reload",{"_index":2002,"title":{},"body":{"components/NavbarComponent.html":{},"index.html":{}}}],["remove",{"_index":55,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/NavbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"interfaces/WarnFn.html":{}}}],["removing",{"_index":2336,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["replace",{"_index":933,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{}}}],["req",{"_index":84,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["request",{"_index":484,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["require",{"_index":2606,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["required",{"_index":82,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"modules/LoggerModule.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/WarnFn.html":{}}}],["requiredvalidator",{"_index":20,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["reset",{"_index":374,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"overview.html":{}}}],["response",{"_index":2044,"title":{},"body":{"components/NavbarComponent.html":{}}}],["responsetype",{"_index":491,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["rest",{"_index":2187,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["restarting",{"_index":2997,"title":{},"body":{"index.html":{}}}],["restricted",{"_index":2510,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["result",{"_index":73,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"dependencies.html":{},"classes/emptyForm.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result:behaviorsubject",{"_index":458,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["results",{"_index":113,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"dependencies.html":{},"classes/emptyForm.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["results'},{'name",{"_index":346,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["results.header?.mission",{"_index":2228,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["results.metadata",{"_index":2283,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["results.metadata.title",{"_index":969,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["results.metadata.version",{"_index":2284,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["results.satellite",{"_index":2259,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["resultscomponent",{"_index":345,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resultsidebarcomponent",{"_index":347,"title":{"components/ResultSidebarComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resultsidebarmodule",{"_index":1601,"title":{"modules/ResultSidebarModule.html":{}},"body":{"modules/LayoutModule.html":{},"modules/ResultSidebarModule.html":{},"modules.html":{},"overview.html":{}}}],["ret",{"_index":1766,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["retrieve",{"_index":544,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{}}}],["retrieve(route",{"_index":551,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["return",{"_index":45,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"injectables/JSatOrbLinkService.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":535,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["returns",{"_index":289,"title":{},"body":{"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"modules/LuplinkModule.html":{},"classes/MockFormService.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["reusing",{"_index":1622,"title":{},"body":{"modules/LayoutModule.html":{}}}],["rgb(100",{"_index":2113,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["rgb(255",{"_index":322,"title":{},"body":{"components/CardComponent.html":{}}}],["right",{"_index":771,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"modules/LoggerModule.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["right:auto",{"_index":2735,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["robust",{"_index":966,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["room",{"_index":820,"title":{},"body":{"components/FormComponent.html":{}}}],["root",{"_index":443,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["round",{"_index":1263,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["rounded",{"_index":1690,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["route",{"_index":554,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["route.routeconfig",{"_index":574,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["route.url",{"_index":569,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["router",{"_index":1625,"title":{},"body":{"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["routereusestrategy",{"_index":542,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"modules/LayoutModule.html":{}}}],["routermodule",{"_index":1616,"title":{},"body":{"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["routermodule.forchild(routes",{"_index":1621,"title":{},"body":{"modules/LayoutModule.html":{}}}],["routes",{"_index":570,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{},"modules/LayoutModule.html":{}}}],["run",{"_index":3025,"title":{},"body":{"index.html":{}}}],["running",{"_index":3036,"title":{},"body":{"index.html":{}}}],["rx",{"_index":620,"title":{},"body":{"classes/DrawingDefault.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["rxantennatemp",{"_index":1130,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["rxinlineloss",{"_index":1136,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["rxjs",{"_index":433,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":435,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["s",{"_index":2381,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["s.component",{"_index":1666,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["s=r_e(\\\\sqrt{(\\\\frac{r}{r_e})^2",{"_index":2401,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["s=r_e(\\\\sqrt{[\\\\frac{r}{r_e}]^2",{"_index":2378,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["sa",{"_index":2459,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["safe",{"_index":2288,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["saferesults",{"_index":2287,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["saferesults.metadata.title",{"_index":2289,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["same",{"_index":99,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"interfaces/WarnFn.html":{}}}],["sanitization",{"_index":964,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["sanitize",{"_index":1996,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"dependencies.html":{}}}],["sanitize($event.target.value",{"_index":2015,"title":{},"body":{"components/NavbarComponent.html":{}}}],["sanitize(results.metadata.title",{"_index":2290,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["sanity",{"_index":962,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["satellite",{"_index":1317,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/WelcomeComponent.html":{}}}],["satellite.ecc",{"_index":2266,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["satellite.line2",{"_index":2248,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["satellite.name",{"_index":1342,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/WelcomeComponent.html":{}}}],["satellite.sma",{"_index":2267,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["satellite.type",{"_index":2245,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["satellites",{"_index":1373,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["satellites:any",{"_index":1415,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"injectables/SaveLoadService.html":{}}}],["satellites[key",{"_index":2246,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["satellites[key][val",{"_index":2257,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["save",{"_index":1962,"title":{},"body":{"components/NavbarComponent.html":{}}}],["save/load",{"_index":2279,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["saved",{"_index":737,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["saveloadservice",{"_index":1313,"title":{"injectables/SaveLoadService.html":{}},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["saving",{"_index":2179,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["scaffolding",{"_index":3030,"title":{},"body":{"index.html":{}}}],["scalex(0",{"_index":2144,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["scalex(100",{"_index":2146,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["scenario",{"_index":1345,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{}}}],["scenario.addcomponents(components",{"_index":2616,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["scenario.compute(linktype",{"_index":2617,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["scenarioid",{"_index":2560,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["sea",{"_index":1260,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["section",{"_index":2463,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["see",{"_index":1274,"title":{},"body":{"classes/HelperFunctions.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"injectables/SaveLoadService.html":{},"index.html":{}}}],["seem",{"_index":869,"title":{},"body":{"components/FormComponent.html":{},"injectables/SaveLoadService.html":{}}}],["seems",{"_index":148,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/JSatOrbLinkComponent.html":{},"miscellaneous/variables.html":{}}}],["segment",{"_index":2728,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["select",{"_index":2864,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["select('.yaxis",{"_index":2705,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["select('path",{"_index":2697,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["select('svg",{"_index":2408,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["selectall('line",{"_index":2712,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["selectall('text",{"_index":2634,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["selected",{"_index":1518,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["selectedsatellite",{"_index":2858,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["selectedsatellite.ecc",{"_index":2911,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["selectedsatellite.ecc)*selectedsatellite.sma).toprecision(3",{"_index":2912,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["selectedsatellite.sma)).toprecision(3",{"_index":2909,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["selectedsatellite.sma).toprecision(3",{"_index":2914,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["selectedstation",{"_index":2859,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["selectedstation.elevation).toprecision(3",{"_index":2915,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["selector",{"_index":233,"title":{},"body":{"interfaces/AntennaField.html":{},"components/CardComponent.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Template.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"classes/emptyForm.html":{}}}],["semi",{"_index":2907,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["send",{"_index":449,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["sendtoast",{"_index":1846,"title":{},"body":{"injectables/LoggerService.html":{}}}],["sendtoast(title",{"_index":1811,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["sent",{"_index":978,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["separate",{"_index":97,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["serve",{"_index":3026,"title":{},"body":{"index.html":{}}}],["server",{"_index":3024,"title":{},"body":{"index.html":{}}}],["service",{"_index":906,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"injectables/SaveLoadService.html":{}}}],["services/compute",{"_index":1870,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/ResultSidebarComponent.html":{}}}],["services/logger.service",{"_index":903,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["services/save",{"_index":1323,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["set",{"_index":704,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"interfaces/Validity.html":{},"index.html":{}}}],["setcomponents(value",{"_index":2597,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["setcurrentinjector",{"_index":566,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["setformtemplate(value",{"_index":690,"title":{},"body":{"components/FormComponent.html":{}}}],["setisnanospaceenabled(value",{"_index":1993,"title":{},"body":{"components/NavbarComponent.html":{}}}],["setpowerin",{"_index":1725,"title":{},"body":{"classes/LinkBudgetScenario.html":{}}}],["setpowerin(power",{"_index":1643,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["setpowerin(value",{"_index":2594,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["sets",{"_index":2762,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["setstep(value",{"_index":2502,"title":{},"body":{"components/StepbarComponent.html":{}}}],["setters",{"_index":2604,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["settimeout",{"_index":2018,"title":{},"body":{"components/NavbarComponent.html":{}}}],["setting",{"_index":824,"title":{},"body":{"components/FormComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["setvalidity(value",{"_index":2499,"title":{},"body":{"components/StepbarComponent.html":{}}}],["sgp4",{"_index":1283,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["shared/custom",{"_index":904,"title":{},"body":{"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{}}}],["shared/customroutereusestrategy",{"_index":1620,"title":{},"body":{"modules/LayoutModule.html":{}}}],["shared/dependencies",{"_index":441,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["shared/helper",{"_index":693,"title":{},"body":{"components/FormComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["shared/logger/logger.module",{"_index":1043,"title":{},"body":{"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{}}}],["shared/logger/logger.service",{"_index":436,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/WelcomeComponent.html":{}}}],["shared/models/antennas",{"_index":1471,"title":{},"body":{"components/LayoutComponent.html":{}}}],["shared/models/form.model",{"_index":695,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{}}}],["shared/models/linkbudgetscenario.model",{"_index":631,"title":{},"body":{"classes/DrawingDefault.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["shared/testing/mockjsatorbdata.json",{"_index":2879,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["shouldattach",{"_index":545,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["shouldattach(route",{"_index":556,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["shoulddetach",{"_index":546,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["shoulddetach(route",{"_index":558,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["shouldlog",{"_index":1847,"title":{},"body":{"injectables/LoggerService.html":{}}}],["shouldlog(level",{"_index":1830,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["shouldn't",{"_index":844,"title":{},"body":{"components/FormComponent.html":{}}}],["shouldreuseroute",{"_index":547,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["shouldreuseroute(future",{"_index":560,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["show",{"_index":77,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{}}}],["showing",{"_index":2467,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["shows",{"_index":2453,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["showselector",{"_index":122,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["side",{"_index":518,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/SyntheticDrawingComponent.html":{}}}],["sidebar",{"_index":423,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{}}}],["sidebar'},{'name",{"_index":344,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["sidebar.component",{"_index":2152,"title":{},"body":{"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{}}}],["sidebar.component.html",{"_index":2070,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{}}}],["sidebar.component.scss",{"_index":2069,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{}}}],["sidebar.component.ts",{"_index":2068,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"coverage.html":{}}}],["sidebar.component.ts:10",{"_index":2157,"title":{},"body":{"components/ResultSidebarComponent.html":{}}}],["sidebar.component.ts:12",{"_index":2156,"title":{},"body":{"components/ResultSidebarComponent.html":{}}}],["sidebar.component.ts:27",{"_index":2076,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:32",{"_index":2082,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:33",{"_index":2081,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:35",{"_index":2080,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:38",{"_index":2085,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:39",{"_index":2083,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:41",{"_index":2079,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:44",{"_index":2077,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["sidebar.component.ts:9",{"_index":2155,"title":{},"body":{"components/ResultSidebarComponent.html":{}}}],["sidebar.module",{"_index":1614,"title":{},"body":{"modules/LayoutModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{}}}],["sidebar.module.ts",{"_index":2151,"title":{},"body":{"modules/NavigationSidebarModule.html":{}}}],["sidebar/navigation",{"_index":1613,"title":{},"body":{"modules/LayoutModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/WelcomeModule.html":{},"coverage.html":{}}}],["simple",{"_index":349,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["simpledocumentationcomponent",{"_index":348,"title":{"components/SimpleDocumentationComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["simpledocumentationmodule",{"_index":1602,"title":{"modules/SimpleDocumentationModule.html":{}},"body":{"modules/LayoutModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules.html":{},"overview.html":{}}}],["simpler",{"_index":1175,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["sin{\\\\delta",{"_index":2380,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["size",{"_index":2314,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{}}}],["size:12px",{"_index":1563,"title":{},"body":{"components/LayoutComponent.html":{}}}],["slant",{"_index":716,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{}}}],["slantrange",{"_index":1167,"title":{},"body":{"classes/FormsTemplate.html":{},"injectables/SaveLoadService.html":{}}}],["slantrangefromaltelev",{"_index":1229,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["slantrangefromaltelev(altitude",{"_index":1249,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["sligthly",{"_index":819,"title":{},"body":{"components/FormComponent.html":{}}}],["sma",{"_index":1248,"title":{},"body":{"classes/HelperFunctions.html":{},"injectables/SaveLoadService.html":{}}}],["smaller",{"_index":2056,"title":{},"body":{"components/NavbarComponent.html":{}}}],["snr",{"_index":1192,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["solid",{"_index":294,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Validity.html":{},"dependencies.html":{}}}],["solve",{"_index":2826,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"modules/CardModule.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"modules/NavbarModule.html":{},"components/NavigationSidebarComponent.html":{},"modules/NavigationSidebarModule.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"interfaces/Template.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"classes/emptyForm.html":{},"index.html":{}}}],["space",{"_index":2449,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["spacecraft",{"_index":1146,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["spacing",{"_index":214,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/FormComponent.html":{}}}],["spaghetti",{"_index":817,"title":{},"body":{"components/FormComponent.html":{}}}],["specific",{"_index":770,"title":{},"body":{"components/FormComponent.html":{}}}],["splash",{"_index":2457,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["sr",{"_index":789,"title":{},"body":{"components/FormComponent.html":{},"classes/HelperFunctions.html":{},"components/SimpleDocumentationComponent.html":{}}}],["sr:any",{"_index":2405,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["src/app/shared/custom",{"_index":697,"title":{},"body":{"components/FormComponent.html":{}}}],["standalone",{"_index":1476,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["start",{"_index":927,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/WelcomeComponent.html":{}}}],["started",{"_index":2993,"title":{"index.html":{}},"body":{}}],["state",{"_index":738,"title":{},"body":{"components/FormComponent.html":{}}}],["statements",{"_index":2925,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":176,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/DrawingDefault.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["station",{"_index":1318,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["station.elevation",{"_index":2269,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["station.name",{"_index":1343,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/WelcomeComponent.html":{}}}],["stationaltitude",{"_index":1239,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["stations",{"_index":2903,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["step",{"_index":1371,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["step(value",{"_index":2509,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["step/groups",{"_index":1532,"title":{},"body":{"components/LayoutComponent.html":{}}}],["stepbar",{"_index":2483,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["stepbar'},{'name",{"_index":352,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["stepbar.component",{"_index":2530,"title":{},"body":{"modules/StepbarModule.html":{}}}],["stepbar.component.html",{"_index":2485,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["stepbar.component.scss",{"_index":2484,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["stepbarcomponent",{"_index":351,"title":{"components/StepbarComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["stepbarmodule",{"_index":1603,"title":{"modules/StepbarModule.html":{}},"body":{"modules/LayoutModule.html":{},"modules/StepbarModule.html":{},"modules.html":{},"overview.html":{}}}],["steps",{"_index":1549,"title":{},"body":{"components/LayoutComponent.html":{},"components/StepbarComponent.html":{},"interfaces/Validity.html":{},"dependencies.html":{}}}],["steps.sass",{"_index":2523,"title":{},"body":{"components/StepbarComponent.html":{}}}],["steps/bulma",{"_index":2522,"title":{},"body":{"components/StepbarComponent.html":{}}}],["steps/index.sass",{"_index":2524,"title":{},"body":{"components/StepbarComponent.html":{}}}],["sticky",{"_index":2124,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["still",{"_index":497,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["store",{"_index":548,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["store(route",{"_index":564,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["stored",{"_index":854,"title":{},"body":{"components/FormComponent.html":{},"index.html":{}}}],["storedroutes",{"_index":543,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["straightforward",{"_index":2313,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["string",{"_index":120,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"interfaces/Validity.html":{},"components/WelcomeComponent.html":{},"classes/emptyForm.html":{}}}],["stroke",{"_index":2731,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["study",{"_index":2865,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["style",{"_index":1560,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["style('font",{"_index":2416,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["styleclass",{"_index":283,"title":{},"body":{"components/CardComponent.html":{}}}],["styles",{"_index":266,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["styleurls",{"_index":273,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["subform",{"_index":701,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{}}}],["subforms",{"_index":912,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["subgroup",{"_index":1026,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["subject",{"_index":2807,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["subscribe",{"_index":2886,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["subscribe((newvalue",{"_index":751,"title":{},"body":{"components/FormComponent.html":{}}}],["subscribe((params",{"_index":1500,"title":{},"body":{"components/LayoutComponent.html":{}}}],["subscribe((value",{"_index":2629,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["subscribe((value:formgroup",{"_index":2008,"title":{},"body":{"components/NavbarComponent.html":{}}}],["subscriber",{"_index":2237,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["subscriber.next(filereader.result",{"_index":2344,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["subscribetochanges",{"_index":648,"title":{},"body":{"components/FormComponent.html":{}}}],["subscribing",{"_index":2625,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["subscription",{"_index":746,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["subscription?.unsubscribe",{"_index":2045,"title":{},"body":{"components/NavbarComponent.html":{}}}],["subscriptions",{"_index":778,"title":{},"body":{"components/FormComponent.html":{}}}],["success",{"_index":317,"title":{},"body":{"components/CardComponent.html":{},"injectables/LoggerService.html":{}}}],["success(msg",{"_index":1806,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["suitable",{"_index":456,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["summary",{"_index":2665,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["super",{"_index":134,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["super(1",{"_index":1926,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["supplied",{"_index":708,"title":{},"body":{"components/FormComponent.html":{}}}],["support",{"_index":3045,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":1216,"title":{},"body":{"classes/FormsTemplate.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["svg",{"_index":295,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"interfaces/Validity.html":{},"dependencies.html":{},"modules.html":{}}}],["svg:any",{"_index":2403,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["switch",{"_index":1282,"title":{},"body":{"classes/HelperFunctions.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"injectables/SaveLoadService.html":{}}}],["switched",{"_index":1170,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["switchtemplate",{"_index":2074,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["switchtemplate(name",{"_index":2078,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["switchtemplate(name:string",{"_index":2099,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["syntax",{"_index":2511,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["synthesis",{"_index":2532,"title":{},"body":{"components/SynthesisComponent.html":{}}}],["synthesis'},{'name",{"_index":354,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["synthesis.component",{"_index":2543,"title":{},"body":{"modules/SynthesisModule.html":{}}}],["synthesis.component.html",{"_index":2534,"title":{},"body":{"components/SynthesisComponent.html":{}}}],["synthesis.component.scss",{"_index":2533,"title":{},"body":{"components/SynthesisComponent.html":{}}}],["synthesiscomponent",{"_index":353,"title":{"components/SynthesisComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["synthesismodule",{"_index":2537,"title":{"modules/SynthesisModule.html":{}},"body":{"modules/SynthesisModule.html":{},"modules.html":{},"overview.html":{}}}],["synthetic",{"_index":356,"title":{},"body":{"components/CardComponent.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"modules/ResultSidebarModule.html":{},"components/SimpleDocumentationComponent.html":{},"modules/SimpleDocumentationModule.html":{},"components/StepbarComponent.html":{},"modules/StepbarModule.html":{},"components/SynthesisComponent.html":{},"modules/SynthesisModule.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/SyntheticDrawingModule.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{}}}],["syntheticdrawingcomponent",{"_index":355,"title":{"components/SyntheticDrawingComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/SyntheticDrawingModule.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["syntheticdrawingformcomponent",{"_index":358,"title":{"components/SyntheticDrawingFormComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"modules/SyntheticDrawingModule.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["syntheticdrawingformservice",{"_index":2562,"title":{"injectables/SyntheticDrawingFormService.html":{}},"body":{"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/SyntheticDrawingModule.html":{},"coverage.html":{},"overview.html":{}}}],["syntheticdrawingmodule",{"_index":2163,"title":{"modules/SyntheticDrawingModule.html":{}},"body":{"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"modules.html":{},"overview.html":{}}}],["system",{"_index":1120,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["system_margin",{"_index":1119,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["systemtemperature",{"_index":2359,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["t_1",{"_index":2392,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["t_a",{"_index":2391,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["t_s",{"_index":2390,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["table",{"_index":2957,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2956,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":1627,"title":{},"body":{"modules/LayoutModule.html":{}}}],["takes",{"_index":989,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/SaveLoadService.html":{}}}],["temperature",{"_index":1132,"title":{},"body":{"classes/FormsTemplate.html":{},"components/SimpleDocumentationComponent.html":{}}}],["temperatures",{"_index":2468,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["template",{"_index":124,"title":{"interfaces/Template.html":{}},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Template.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"classes/emptyForm.html":{}}}],["templates",{"_index":774,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{}}}],["templateurl",{"_index":275,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["terrible",{"_index":2824,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["test",{"_index":53,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/ComputeLinkBudgetService.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/WarnFn.html":{},"index.html":{}}}],["testdata",{"_index":2881,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["testdata.header?.mission",{"_index":2882,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["tested",{"_index":1536,"title":{},"body":{"components/LayoutComponent.html":{}}}],["testing",{"_index":1009,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{}}}],["tests",{"_index":1204,"title":{},"body":{"classes/FormsTemplate.html":{},"index.html":{}}}],["text",{"_index":1565,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["text((d:any",{"_index":2636,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["thanks",{"_index":1905,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["that's",{"_index":1280,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["then((results",{"_index":2239,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this._components",{"_index":2611,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this._formtemplate",{"_index":706,"title":{},"body":{"components/FormComponent.html":{}}}],["this._isinitialized",{"_index":923,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this._isnanospaceenabled",{"_index":2005,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._powerin",{"_index":2607,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this._step",{"_index":2508,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["this._validity",{"_index":2505,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["this.addcomponent(s.id",{"_index":1665,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["this.addform",{"_index":986,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.addform(fg",{"_index":987,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.alt",{"_index":2418,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.alt.text(`${alt.toprecision(precision",{"_index":2442,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.antennaname",{"_index":1513,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.atmosphere",{"_index":1516,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.budgettext",{"_index":2667,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.budgettext.text",{"_index":2725,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.buildform",{"_index":2884,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.changecomponent(this._formtemplate",{"_index":707,"title":{},"body":{"components/FormComponent.html":{}}}],["this.collapsed",{"_index":297,"title":{},"body":{"components/CardComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["this.componentid",{"_index":254,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/LayoutComponent.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["this.componentname",{"_index":744,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{}}}],["this.components",{"_index":1641,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["this.components[id",{"_index":1661,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["this.components[id].gain",{"_index":1668,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["this.components[key",{"_index":1656,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["this.computelinkbudget.computelinkbudget",{"_index":2038,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.computelinkbudget.displayingresults",{"_index":2158,"title":{},"body":{"components/ResultSidebarComponent.html":{}}}],["this.computelinkbudget.updateresult(value",{"_index":2042,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.createformgroup(componenttemplate",{"_index":985,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.createformgroup(element.alternative",{"_index":1027,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.currentantenna",{"_index":1512,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.currentantenna.componentname",{"_index":1514,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.currentcomponent",{"_index":2100,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["this.currentscenario",{"_index":2775,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.currentstep",{"_index":1504,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.currenttemplate",{"_index":1507,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.customvalidators.fieldvalidator",{"_index":1024,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.debugmode",{"_index":2028,"title":{},"body":{"components/NavbarComponent.html":{},"components/WelcomeComponent.html":{}}}],["this.defaultlbscenario.getpoints",{"_index":2641,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.delta",{"_index":2409,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.delta.text(`ẟ=${geo.elevation.value",{"_index":2440,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.displayedimage",{"_index":836,"title":{},"body":{"components/FormComponent.html":{}}}],["this.displaygraph",{"_index":2621,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.displayingresults",{"_index":499,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.distance[from",{"_index":1253,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["this.distance[to",{"_index":1254,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["this.drawgeometry",{"_index":2436,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.drawingform",{"_index":2764,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingform.patchvalue",{"_index":2788,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingform.value.gains",{"_index":2793,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingform.value.power",{"_index":2791,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingform.valuechanges.subscribe",{"_index":2771,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingformsub",{"_index":2770,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingformsub.unsubscribe",{"_index":2776,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingservice.getlbscenario$(this.scenarioid",{"_index":2628,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.drawingservice.getlbscenario$(this.scenarioid).subscribe((next",{"_index":2774,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingservice.getlbscenario(this.scenarioid",{"_index":2780,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.drawingservice.updatelbscenario(this.scenarioid",{"_index":2618,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["this.earthmu",{"_index":1298,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["this.earthradius",{"_index":1270,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["this.editgain(key",{"_index":1677,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["this.environment.apiendpoint}linkbudget/${postdata.options.type",{"_index":485,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.environment.debugmode",{"_index":1413,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"components/WelcomeComponent.html":{}}}],["this.environment.enablenanospace",{"_index":2007,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.environment.isstandalone",{"_index":1473,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.environment.version",{"_index":2084,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["this.extrainfo.length",{"_index":1770,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.fb.group",{"_index":941,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.fb.group(geometry",{"_index":2273,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.fb.group(group",{"_index":1029,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.fb.group(mockpostdata.geometry",{"_index":1917,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["this.fb.group(newvalue[this.componentname",{"_index":766,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formatjsodata(satellites",{"_index":2229,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.formbuilder.group",{"_index":2765,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.formbuilder.group(drawingdefault.defaultgains",{"_index":2767,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.formservice.addarchive('geometry",{"_index":2272,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.formservice.addform(this.localform",{"_index":743,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.createformgroup(componenttemplate",{"_index":848,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.createformgroup(this.formtemplate",{"_index":763,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.getformdata",{"_index":473,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["this.formservice.getformdata$().subscribe((obs",{"_index":2428,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.formservice.getformdata().geometry",{"_index":2422,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.formservice.getformdata().uplink.transmitter",{"_index":2465,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.formservice.getformdata().uplink.transmitter_antenna",{"_index":2466,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.formservice.globalform.get(this.parentname",{"_index":856,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.globalform.setcontrol('geometry",{"_index":2274,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.formservice.globalform.setcontrol(this.componentname",{"_index":861,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.globalform.setcontrol(this.parentname",{"_index":859,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.globalform.valid",{"_index":467,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.formservice.globalform.value[this.componentname",{"_index":838,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.globalform.value[this.parentname][this.componentname",{"_index":839,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.globalform.valuechanges",{"_index":750,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.importform(saferesults",{"_index":2291,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.formservice.initforms",{"_index":726,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{}}}],["this.formservice.iscurrentformsaved",{"_index":739,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["this.formservice.isinitialized",{"_index":725,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formservice.title",{"_index":2014,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["this.formservice.title}}{{!this.formservice.iscurrentformsaved",{"_index":2051,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.formstatus.emit",{"_index":721,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formstemplate.geometry",{"_index":1455,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.formstemplate.ul_atmosphere",{"_index":1448,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.formtemplate.componentid",{"_index":713,"title":{},"body":{"components/FormComponent.html":{}}}],["this.formulas",{"_index":2400,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.formvalidity",{"_index":1543,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.formvalidity[neighbor",{"_index":1545,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.formvalidity[pageid",{"_index":1540,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.formvalidity[pagekey",{"_index":1494,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.geometrysubscribe",{"_index":720,"title":{},"body":{"components/FormComponent.html":{}}}],["this.getformdata()?.[link]?.[parentid]?.[componentid",{"_index":947,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.getformdata()[componentid",{"_index":946,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.globalform.get(parent",{"_index":937,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.globalform.get(parentname",{"_index":955,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.globalform.patchvalue(results.data",{"_index":967,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.globalform.setcontrol",{"_index":940,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.globalform.setcontrol(name",{"_index":942,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.globalform.setcontrol(parent",{"_index":939,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.globalform.value",{"_index":972,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.globalform.valuechanges",{"_index":971,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.globalformvalue",{"_index":2009,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.hasantennacard",{"_index":1509,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.hasatmcard",{"_index":1510,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.hasgeometrybeendrawn",{"_index":2421,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.hasimage",{"_index":833,"title":{},"body":{"components/FormComponent.html":{}}}],["this.height",{"_index":2646,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.httpclient",{"_index":489,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.importfile(files",{"_index":2234,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.importfile(files).subscribe((results",{"_index":2238,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.importform.controls['satellite'].value",{"_index":1340,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.importform.controls['station'].value",{"_index":1341,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.importform.patchvalue",{"_index":1333,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.initgraph",{"_index":2624,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.inventory[step].foreach((neighbor",{"_index":1544,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.iseditingtitle",{"_index":2017,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.isempty",{"_index":1332,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.isstandalone",{"_index":1472,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.jsodata",{"_index":1328,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/WelcomeComponent.html":{}}}],["this.jsodata.groundstations.length",{"_index":1331,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.jsodata.groundstations?.length",{"_index":2901,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsodata.groundstations[0",{"_index":1336,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/WelcomeComponent.html":{}}}],["this.jsodata.satellites.length",{"_index":1330,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.jsodata.satellites?.length}})groundstations",{"_index":2900,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsodata.satellites[0",{"_index":1334,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"components/WelcomeComponent.html":{}}}],["this.jsodata.title",{"_index":1339,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.jsodata.title}}satellites",{"_index":2899,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsoform",{"_index":2893,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsoform.patchvalue",{"_index":2892,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.jsomockdata",{"_index":1414,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["this.labels",{"_index":2633,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.lbscenario",{"_index":2830,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenario$.default",{"_index":2827,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenario$.default.getvalue",{"_index":2839,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenario$.downlink",{"_index":2829,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenario$.uplink",{"_index":2828,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenario$[id",{"_index":2835,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenario$[id].next(newlbscenario",{"_index":2834,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenario[id",{"_index":2833,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["this.lbscenariosub",{"_index":2773,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.lbscenariosub.unsubscribe",{"_index":2777,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.level",{"_index":1831,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.linkbudgetsynthesis",{"_index":488,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.linkservice.getjsodata",{"_index":1329,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.linktype",{"_index":2610,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.loading",{"_index":2039,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loadservice.importjsodata",{"_index":1338,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.loadservice.parsejsodata(this.jsodata",{"_index":1419,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["this.localform",{"_index":765,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.get('altitude')?.setvalue",{"_index":793,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.get('altitude')?.value",{"_index":807,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.get('altitude')?.valuechanges.subscribe((value",{"_index":797,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.get('elevation')?.value",{"_index":782,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.get('elevation')?.valuechanges.subscribe((value",{"_index":804,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.get('slantrange')?.setvalue",{"_index":801,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.get('slantrange')?.valuechanges.subscribe((_value",{"_index":779,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.valid",{"_index":711,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.value.slantrange",{"_index":757,"title":{},"body":{"components/FormComponent.html":{}}}],["this.localform.valuechanges.subscribe",{"_index":735,"title":{},"body":{"components/FormComponent.html":{}}}],["this.logger.debug(\"api",{"_index":2043,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.logger.debug('error",{"_index":2047,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.logger.debug('exporting",{"_index":2309,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.logger.debug('full",{"_index":529,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.debug('got",{"_index":722,"title":{},"body":{"components/FormComponent.html":{}}}],["this.logger.debug('importing",{"_index":2227,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.logger.debug('newscenario",{"_index":2680,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.logger.debug('sending",{"_index":486,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.debug('the",{"_index":1517,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.logger.debug('updating",{"_index":2679,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.logger.debug('value",{"_index":2041,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.logger.debug(`geometry",{"_index":759,"title":{},"body":{"components/FormComponent.html":{}}}],["this.logger.debug(`importing",{"_index":2340,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.logger.debug(`initialized",{"_index":727,"title":{},"body":{"components/FormComponent.html":{}}}],["this.logger.debug(`subscribing",{"_index":755,"title":{},"body":{"components/FormComponent.html":{}}}],["this.logger.debug(this.formtemplate.componentid",{"_index":867,"title":{},"body":{"components/FormComponent.html":{}}}],["this.logger.debug(this.jsodata",{"_index":1337,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["this.logger.error(\"internal",{"_index":868,"title":{},"body":{"components/FormComponent.html":{}}}],["this.logger.error(\"post",{"_index":514,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.error('backend",{"_index":537,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.error('client",{"_index":521,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.error('error",{"_index":2300,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["this.logger.error('invalid",{"_index":1546,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.logger.error('this",{"_index":2296,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.logger.error(event.id",{"_index":1522,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.logger.error(pageid",{"_index":1541,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.logger.info('logging",{"_index":2022,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.logger.success('importing",{"_index":2276,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.logger.success('successfully",{"_index":2292,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.logger.warn",{"_index":957,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.logger.warn('computebeamwidth",{"_index":140,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["this.logger.warn('computegain",{"_index":137,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["this.logger.warn('current",{"_index":1548,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.logger.warn('error",{"_index":2207,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["this.logger.warn('errors",{"_index":470,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.warn('form",{"_index":465,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.warn('initializing",{"_index":982,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.logger.warn('no",{"_index":474,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.logger.warn('validity",{"_index":1542,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.logger.warn('version",{"_index":2285,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["this.logger.warn('warning",{"_index":2262,"title":{},"body":{"injectables/SaveLoadService.html":{},"components/WelcomeComponent.html":{}}}],["this.logwithdate",{"_index":1767,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.logwithtoast",{"_index":1814,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.mainsvg",{"_index":2656,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.mainsvg.append('g",{"_index":2673,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.mainsvg.append('g').attr('class",{"_index":2671,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.margin.bottom",{"_index":2649,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.margin.left",{"_index":2644,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.margin.right",{"_index":2645,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.margin.top",{"_index":2648,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.message",{"_index":1769,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.onsubmit.bind(this",{"_index":2772,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["this.pagevalidity[pagekey",{"_index":1493,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.pagevalidity[pagekey][v.componentid",{"_index":1497,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.pagevalidity[this.componentid][event.id",{"_index":1524,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.params",{"_index":258,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["this.parentcomponent",{"_index":256,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["this.parentname",{"_index":745,"title":{},"body":{"components/FormComponent.html":{}}}],["this.points",{"_index":1642,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["this.powerin",{"_index":1640,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["this.powerout",{"_index":1645,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["this.refreshpagevalidity(this.componentid",{"_index":1525,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.requiredvalidator(value?.value",{"_index":85,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["this.result",{"_index":511,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.result.next(this.linkbudgetsynthesis",{"_index":500,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.result.next(value",{"_index":510,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["this.route.queryparams",{"_index":1499,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.saveloadservice.exportconfigfile(this.formservice.getformdata",{"_index":2035,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.saveloadservice.formatjsodata(testdata.satellites",{"_index":2883,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.saveloadservice.importconfigfile(files",{"_index":2036,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.saveloadservice.importjsatorbconfigfile(files",{"_index":2885,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.saveloadservice.importjsodata(this.jsodata.title",{"_index":2896,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.selectedsatellite",{"_index":2894,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.selectedstation",{"_index":2895,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["this.sendtoast(msg",{"_index":1798,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.shallowequal(newvalue['geometry'].slantrange",{"_index":756,"title":{},"body":{"components/FormComponent.html":{}}}],["this.shouldlog(level",{"_index":1813,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.showselector",{"_index":128,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["this.sr",{"_index":2419,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.sr.text(`${sr.toprecision(precision",{"_index":2444,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.step",{"_index":2516,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["this.storedroutes.get(route.routeconfig!.path",{"_index":577,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["this.storedroutes.get(route.routeconfig.path",{"_index":575,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["this.storedroutes.set(route.routeconfig!.path",{"_index":572,"title":{},"body":{"classes/CustomRouteReuseStrategy.html":{}}}],["this.subscribetochanges",{"_index":712,"title":{},"body":{"components/FormComponent.html":{}}}],["this.svg",{"_index":2406,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["this.template.template.components.foreach((componenttemplate",{"_index":983,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.templates",{"_index":1483,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.templates[this.componentid",{"_index":1503,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.title",{"_index":968,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["this.titleinput?.nativeelement.focus",{"_index":2021,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.toastr.error(message",{"_index":1815,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.toastr.show(title",{"_index":1819,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.toastr.success(message",{"_index":1818,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.toastr.warning(message",{"_index":1817,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.updatediagram(geo",{"_index":2427,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.updatediagram(obs.geometry",{"_index":2431,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["this.updategraphdata(value",{"_index":2630,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.updatelabels(newscenario",{"_index":2678,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.updatelbscenario(this.powerin",{"_index":2613,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.updatelbscenario(value",{"_index":2609,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.updatestepsvalidity(this.componentid",{"_index":1526,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.validity",{"_index":710,"title":{},"body":{"components/FormComponent.html":{}}}],["this.validity.steps",{"_index":1490,"title":{},"body":{"components/LayoutComponent.html":{},"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["this.validity.steps[key",{"_index":2515,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["this.validity.steps[step",{"_index":1547,"title":{},"body":{"components/LayoutComponent.html":{}}}],["this.validvalidator(value.value",{"_index":87,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["this.verticallinesgroup",{"_index":2668,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.width",{"_index":2642,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.writetolog(msg",{"_index":1793,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["this.x",{"_index":2650,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.x.domain([0",{"_index":2653,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.y",{"_index":2652,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.y.domain([max",{"_index":2689,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["this.yagigaincomputation(params",{"_index":174,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["threshold",{"_index":1115,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["through",{"_index":70,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["throwerror",{"_index":432,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["throwerror(error",{"_index":538,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["tidied",{"_index":1535,"title":{},"body":{"components/LayoutComponent.html":{}}}],["ties",{"_index":2758,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["time",{"_index":2999,"title":{},"body":{"index.html":{}}}],["timeend",{"_index":1369,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["times",{"_index":974,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["timestart",{"_index":1365,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["title",{"_index":284,"title":{},"body":{"components/CardComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/JSatOrbLinkService.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{}}}],["title:any",{"_index":2225,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["titleinput",{"_index":1959,"title":{},"body":{"components/NavbarComponent.html":{}}}],["tle",{"_index":1376,"title":{},"body":{"injectables/JSatOrbLinkService.html":{},"injectables/SaveLoadService.html":{}}}],["tle1",{"_index":1246,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["tle2",{"_index":1244,"title":{},"body":{"classes/HelperFunctions.html":{}}}],["toast",{"_index":1845,"title":{},"body":{"modules/LoggerModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastclass",{"_index":1925,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastconfig",{"_index":1924,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastpackage",{"_index":1910,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastr",{"_index":450,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/LogEntry.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"dependencies.html":{}}}],["toastr/issues/339#issuecomment",{"_index":1907,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastref",{"_index":1911,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastref(null",{"_index":1927,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastrmodule",{"_index":1841,"title":{},"body":{"modules/LoggerModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastrmodule.forroot",{"_index":1843,"title":{},"body":{"modules/LoggerModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["toastrservice",{"_index":1759,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["toastrtestingmodule",{"_index":1928,"title":{"modules/ToastrTestingModule.html":{}},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"modules.html":{}}}],["todo",{"_index":74,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"injectables/SaveLoadService.html":{},"interfaces/WarnFn.html":{}}}],["toggleresults",{"_index":400,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["tokens",{"_index":1930,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["tools",{"_index":2101,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["tooltips",{"_index":309,"title":{},"body":{"components/CardComponent.html":{}}}],["top",{"_index":1585,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["tracking",{"_index":928,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["tracks",{"_index":907,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["transform",{"_index":1567,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["transition",{"_index":2087,"title":{},"body":{"components/NavigationSidebarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["transition('void",{"_index":2094,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["translate(0",{"_index":2675,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["translatey",{"_index":2095,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["transmission",{"_index":991,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["transmitter",{"_index":1124,"title":{},"body":{"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{}}}],["transmitter_antenna",{"_index":1145,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["transmitter_gs",{"_index":1220,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["transparent",{"_index":2143,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["tree",{"_index":268,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["tried",{"_index":1265,"title":{},"body":{"classes/HelperFunctions.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["trigger",{"_index":2088,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["trigger('panelinout",{"_index":2093,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["triggered",{"_index":2769,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["trouble",{"_index":2685,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["true",{"_index":135,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":2981,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":213,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["turns",{"_index":210,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["turnspacing",{"_index":212,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["twice",{"_index":1883,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["tx",{"_index":595,"title":{},"body":{"classes/DrawingDefault.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["txantennamismatch",{"_index":1160,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["txcableloss",{"_index":1156,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["txconnectorloss",{"_index":1158,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockFormService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"interfaces/Validity.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"classes/emptyForm.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":3047,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":1775,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["types",{"_index":730,"title":{},"body":{"components/FormComponent.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{}}}],["typescript",{"_index":2423,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["u",{"_index":1919,"title":{},"body":{"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["ugly",{"_index":242,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["ui",{"_index":2102,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["ui/layout.module",{"_index":1873,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["ul_atmosphere",{"_index":1075,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ul_carrier",{"_index":1076,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ul_gs_tx_antenna",{"_index":1077,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ul_receiver_sc",{"_index":1078,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ul_sc_rx_antenna",{"_index":1079,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ul_transmitter_gs",{"_index":1080,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["ulcarrier",{"_index":1461,"title":{},"body":{"components/LayoutComponent.html":{}}}],["ulreceiver",{"_index":1463,"title":{},"body":{"components/LayoutComponent.html":{}}}],["ultransmitter",{"_index":1462,"title":{},"body":{"components/LayoutComponent.html":{}}}],["undefined",{"_index":414,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/SaveLoadService.html":{},"components/SyntheticDrawingComponent.html":{},"components/WelcomeComponent.html":{}}}],["underline",{"_index":2111,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["unexpected",{"_index":2208,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":66,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"interfaces/WarnFn.html":{},"index.html":{}}}],["unitcontrol",{"_index":1016,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["units",{"_index":187,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["unknown",{"_index":61,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"interfaces/WarnFn.html":{}}}],["unless",{"_index":2836,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["unlimited",{"_index":2319,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["unsaved",{"_index":2033,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{}}}],["until",{"_index":1173,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["untitled_link_budget",{"_index":916,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["unused",{"_index":2425,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["unvisited",{"_index":1498,"title":{},"body":{"components/LayoutComponent.html":{}}}],["up",{"_index":825,"title":{},"body":{"components/FormComponent.html":{},"components/LayoutComponent.html":{},"components/SyntheticDrawingComponent.html":{},"index.html":{}}}],["update",{"_index":818,"title":{},"body":{"components/FormComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["updated",{"_index":973,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{}}}],["updatediagram",{"_index":2362,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["updatediagram(geo",{"_index":2367,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["updatediagram(geo:any",{"_index":2437,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["updategraphdata",{"_index":2555,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["updategraphdata(newscenario",{"_index":2572,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["updatejsodata",{"_index":1356,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["updatejsodata(data",{"_index":1360,"title":{},"body":{"injectables/JSatOrbLinkService.html":{}}}],["updatelabels",{"_index":2556,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["updatelabels(newscenario",{"_index":2575,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["updatelbscenario",{"_index":2557,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["updatelbscenario(id",{"_index":2808,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["updatelbscenario(power",{"_index":2577,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["updateon",{"_index":1005,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["updateon:blur",{"_index":2768,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["updateresult",{"_index":401,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["updateresult(value",{"_index":421,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["updateresult(value:any",{"_index":509,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["updates",{"_index":961,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{}}}],["updatestepsvalidity",{"_index":1435,"title":{},"body":{"components/LayoutComponent.html":{}}}],["updatestepsvalidity(id",{"_index":1445,"title":{},"body":{"components/LayoutComponent.html":{}}}],["updating",{"_index":1011,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"injectables/SaveLoadService.html":{}}}],["uplink",{"_index":257,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["uppercase",{"_index":1568,"title":{},"body":{"components/LayoutComponent.html":{}}}],["uri",{"_index":2311,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["url",{"_index":464,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/SaveLoadService.html":{}}}],["urlin",{"_index":409,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["urlin?:string",{"_index":463,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{}}}],["use",{"_index":840,"title":{},"body":{"components/FormComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"components/WelcomeComponent.html":{},"index.html":{}}}],["useclass",{"_index":1629,"title":{},"body":{"modules/LayoutModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{}}}],["used",{"_index":157,"title":{},"body":{"interfaces/Antenna.html":{},"interfaces/AntennaField.html":{},"classes/Antennas.html":{},"classes/DrawingDefault.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{},"miscellaneous/variables.html":{}}}],["useful",{"_index":733,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"components/LayoutComponent.html":{}}}],["user",{"_index":532,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["uses",{"_index":145,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["useselecteddata",{"_index":2862,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["usevalue",{"_index":1891,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["using",{"_index":881,"title":{},"body":{"components/FormComponent.html":{},"classes/FormsTemplate.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"index.html":{}}}],["usually",{"_index":43,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/WarnFn.html":{}}}],["utf8",{"_index":2221,"title":{},"body":{"injectables/SaveLoadService.html":{},"miscellaneous/variables.html":{}}}],["v",{"_index":1496,"title":{},"body":{"components/LayoutComponent.html":{}}}],["v\"+version",{"_index":2106,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["v0.2",{"_index":1985,"title":{},"body":{"components/NavbarComponent.html":{}}}],["val",{"_index":86,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["valid",{"_index":685,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/LayoutComponent.html":{}}}],["valid.required",{"_index":2797,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["valid[required",{"_index":2796,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["validation",{"_index":92,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"classes/FormsTemplate.html":{},"interfaces/WarnFn.html":{}}}],["validationerrors",{"_index":21,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["validator",{"_index":104,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["validatorfn",{"_index":22,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["validators",{"_index":23,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/SyntheticDrawingFormComponent.html":{},"interfaces/WarnFn.html":{}}}],["validators.maxlength(6",{"_index":1008,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["validators.nullvalidator",{"_index":1018,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["validators.pattern",{"_index":1001,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["validators.required",{"_index":1007,"title":{},"body":{"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["validities",{"_index":1530,"title":{},"body":{"components/LayoutComponent.html":{}}}],["validity",{"_index":466,"title":{"interfaces/Validity.html":{}},"body":{"injectables/ComputeLinkBudgetService.html":{},"components/FormComponent.html":{},"components/LayoutComponent.html":{},"components/StepbarComponent.html":{},"interfaces/Validity.html":{},"coverage.html":{}}}],["validity(value",{"_index":2506,"title":{},"body":{"components/StepbarComponent.html":{},"interfaces/Validity.html":{}}}],["validity:any",{"_index":1489,"title":{},"body":{"components/LayoutComponent.html":{}}}],["validvalidator",{"_index":57,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{}}}],["value",{"_index":52,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"injectables/CustomValidators.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/FormsTemplate.html":{},"classes/HelperFunctions.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockFormService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"interfaces/Validity.html":{},"interfaces/WarnFn.html":{},"components/WelcomeComponent.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["value.gain",{"_index":2787,"title":{},"body":{"components/SyntheticDrawingFormComponent.html":{}}}],["value.label",{"_index":1652,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["value.position",{"_index":1653,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["value.unit",{"_index":791,"title":{},"body":{"components/FormComponent.html":{}}}],["value.value",{"_index":812,"title":{},"body":{"components/FormComponent.html":{}}}],["value.width",{"_index":1654,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{}}}],["value:any",{"_index":2887,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["valueline",{"_index":2690,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["values",{"_index":633,"title":{},"body":{"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"components/WelcomeComponent.html":{}}}],["var",{"_index":328,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["variable",{"_index":1520,"title":{},"body":{"components/LayoutComponent.html":{},"coverage.html":{}}}],["variables",{"_index":1787,"title":{"miscellaneous/variables.html":{}},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"components/SyntheticDrawingComponent.html":{},"miscellaneous/variables.html":{}}}],["variables.sass",{"_index":299,"title":{},"body":{"components/CardComponent.html":{},"components/StepbarComponent.html":{}}}],["vars",{"_index":2831,"title":{},"body":{"injectables/SyntheticDrawingFormService.html":{}}}],["verification",{"_index":2281,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["version",{"_index":1895,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavigationSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"modules/ToastrTestingModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["vert",{"_index":2715,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["vertical",{"_index":2707,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["verticallinesgroup",{"_index":2553,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["verticallinesgroup:any",{"_index":2602,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["via",{"_index":2460,"title":{},"body":{"components/SimpleDocumentationComponent.html":{},"index.html":{}}}],["view",{"_index":2619,"title":{},"body":{"components/SyntheticDrawingComponent.html":{},"components/ViewComponent.html":{}}}],["view'},{'name",{"_index":361,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["view.component.html",{"_index":2851,"title":{},"body":{"components/ViewComponent.html":{}}}],["view.component.scss",{"_index":2850,"title":{},"body":{"components/ViewComponent.html":{}}}],["view/view.component",{"_index":1618,"title":{},"body":{"modules/LayoutModule.html":{}}}],["viewbox",{"_index":2654,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["viewchild",{"_index":1995,"title":{},"body":{"components/NavbarComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["viewchild('diagram",{"_index":2582,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["viewchild('titleinput",{"_index":1989,"title":{},"body":{"components/NavbarComponent.html":{}}}],["viewcomponent",{"_index":360,"title":{"components/ViewComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"modules/LayoutModule.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"coverage.html":{},"overview.html":{}}}],["void",{"_index":290,"title":{},"body":{"components/CardComponent.html":{},"injectables/ComputeLinkBudgetService.html":{},"classes/CustomRouteReuseStrategy.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"components/JSatOrbLinkComponent.html":{},"injectables/JSatOrbLinkService.html":{},"components/LayoutComponent.html":{},"classes/LinkBudgetScenario.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"injectables/SaveLoadService.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{},"modules/ToastrTestingModule.html":{},"interfaces/Validity.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["vswr",{"_index":2104,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["w",{"_index":1152,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["want",{"_index":715,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"classes/HelperFunctions.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SaveLoadService.html":{},"components/StepbarComponent.html":{},"interfaces/Validity.html":{},"index.html":{}}}],["warn",{"_index":1763,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{},"classes/MockComputeService.html":{},"classes/MockFormService.html":{},"injectables/MockToastPackage.html":{},"classes/MockupLoggerService.html":{},"modules/ToastrTestingModule.html":{},"miscellaneous/enumerations.html":{}}}],["warn(msg",{"_index":1796,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["warnfn",{"_index":33,"title":{"interfaces/WarnFn.html":{}},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"interfaces/WarnFn.html":{},"coverage.html":{}}}],["warning",{"_index":46,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"components/CardComponent.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"components/NavbarComponent.html":{},"injectables/SaveLoadService.html":{},"components/StepbarComponent.html":{},"interfaces/Validity.html":{},"interfaces/WarnFn.html":{}}}],["warnings",{"_index":13,"title":{},"body":{"interfaces/AbstractControlWarn.html":{},"injectables/CustomValidators.html":{},"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{},"interfaces/WarnFn.html":{}}}],["watts",{"_index":1219,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["way",{"_index":815,"title":{},"body":{"components/FormComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["we'll",{"_index":236,"title":{},"body":{"interfaces/AntennaField.html":{},"interfaces/Field.html":{},"interfaces/Form.html":{},"interfaces/Template.html":{},"classes/emptyForm.html":{}}}],["we're",{"_index":154,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["weight",{"_index":2135,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["welcome",{"_index":363,"title":{},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{}}}],["welcome.component",{"_index":2922,"title":{},"body":{"modules/WelcomeModule.html":{}}}],["welcome.component.html",{"_index":2856,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["welcome.component.scss",{"_index":2855,"title":{},"body":{"components/WelcomeComponent.html":{}}}],["welcomecomponent",{"_index":362,"title":{"components/WelcomeComponent.html":{}},"body":{"components/CardComponent.html":{},"components/FormComponent.html":{},"components/JSatOrbLinkComponent.html":{},"components/LayoutComponent.html":{},"components/NavbarComponent.html":{},"components/NavigationSidebarComponent.html":{},"components/ResultSidebarComponent.html":{},"components/SimpleDocumentationComponent.html":{},"components/StepbarComponent.html":{},"components/SynthesisComponent.html":{},"components/SyntheticDrawingComponent.html":{},"components/SyntheticDrawingFormComponent.html":{},"components/ViewComponent.html":{},"components/WelcomeComponent.html":{},"modules/WelcomeModule.html":{},"coverage.html":{},"overview.html":{}}}],["welcomemodule",{"_index":2916,"title":{"modules/WelcomeModule.html":{}},"body":{"modules/WelcomeModule.html":{},"modules.html":{},"overview.html":{}}}],["white",{"_index":316,"title":{},"body":{"components/CardComponent.html":{},"components/LayoutComponent.html":{}}}],["wide",{"_index":319,"title":{},"body":{"components/CardComponent.html":{}}}],["width",{"_index":180,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"components/CardComponent.html":{},"classes/DrawingDefault.html":{},"components/FormComponent.html":{},"components/LayoutComponent.html":{},"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"components/NavigationSidebarComponent.html":{},"interfaces/Point.html":{},"components/SimpleDocumentationComponent.html":{},"components/SyntheticDrawingComponent.html":{}}}],["width:200px;//fixed",{"_index":2128,"title":{},"body":{"components/NavigationSidebarComponent.html":{}}}],["width:250px;//not",{"_index":1551,"title":{},"body":{"components/LayoutComponent.html":{}}}],["width:360px",{"_index":898,"title":{},"body":{"components/FormComponent.html":{}}}],["width:480px",{"_index":899,"title":{},"body":{"components/FormComponent.html":{}}}],["width:50",{"_index":2734,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["width:900px",{"_index":1553,"title":{},"body":{"components/LayoutComponent.html":{}}}],["width:90px",{"_index":891,"title":{},"body":{"components/FormComponent.html":{}}}],["wikimedia",{"_index":2461,"title":{},"body":{"components/SimpleDocumentationComponent.html":{}}}],["window.addeventlistener('beforeunload",{"_index":2029,"title":{},"body":{"components/NavbarComponent.html":{}}}],["within",{"_index":2058,"title":{},"body":{"components/NavbarComponent.html":{},"components/SyntheticDrawingFormComponent.html":{}}}],["without",{"_index":1207,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["won't",{"_index":1349,"title":{},"body":{"components/JSatOrbLinkComponent.html":{},"injectables/SaveLoadService.html":{}}}],["won\\'t",{"_index":1350,"title":{},"body":{"components/JSatOrbLinkComponent.html":{}}}],["work",{"_index":2307,"title":{},"body":{"injectables/SaveLoadService.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["workaround",{"_index":1882,"title":{},"body":{"interfaces/LuplinkConfig.html":{},"modules/LuplinkModule.html":{}}}],["working",{"_index":1552,"title":{},"body":{"components/LayoutComponent.html":{},"injectables/SaveLoadService.html":{}}}],["worst",{"_index":2264,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["wrapper",{"_index":886,"title":{},"body":{"components/FormComponent.html":{},"classes/FormControlWarn.html":{},"injectables/FormService.html":{}}}],["writetolog",{"_index":1848,"title":{},"body":{"injectables/LoggerService.html":{}}}],["writetolog(msg",{"_index":1820,"title":{},"body":{"classes/LogEntry.html":{},"injectables/LoggerService.html":{}}}],["wrong",{"_index":874,"title":{},"body":{"components/FormComponent.html":{},"injectables/SyntheticDrawingFormService.html":{}}}],["x",{"_index":1634,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["x((d",{"_index":2691,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["x(0",{"_index":2693,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["x(d.x",{"_index":2692,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["x_pol",{"_index":1091,"title":{},"body":{"classes/FormsTemplate.html":{}}}],["xss",{"_index":2305,"title":{},"body":{"injectables/SaveLoadService.html":{}}}],["y",{"_index":1635,"title":{},"body":{"interfaces/LinkBudgetComponent.html":{},"classes/LinkBudgetScenario.html":{},"interfaces/Point.html":{},"components/SyntheticDrawingComponent.html":{}}}],["y((d",{"_index":2694,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["y(0",{"_index":2696,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["y(d.y",{"_index":2695,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["yagi",{"_index":197,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["yagiantenna",{"_index":130,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{}}}],["yagibeamwidthcomputation",{"_index":171,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["yagigaincomputation",{"_index":142,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["yagioptimumelements",{"_index":168,"title":{},"body":{"interfaces/Antenna.html":{},"classes/Antennas.html":{},"miscellaneous/variables.html":{}}}],["yaxis",{"_index":2672,"title":{},"body":{"components/SyntheticDrawingComponent.html":{}}}],["yes",{"_index":412,"title":{},"body":{"injectables/ComputeLinkBudgetService.html":{},"injectables/FormService.html":{},"injectables/LoggerService.html":{}}}],["yourself",{"_index":3005,"title":{},"body":{"index.html":{}}}],["z",{"_index":1587,"title":{},"body":{"components/LayoutComponent.html":{},"components/NavigationSidebarComponent.html":{}}}],["zone.js",{"_index":2983,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":373,"title":{},"body":{"modules/CardModule.html":{},"modules/FormModule.html":{},"modules/LayoutModule.html":{},"modules/LoggerModule.html":{},"modules/LuplinkModule.html":{},"modules/NavbarModule.html":{},"modules/NavigationSidebarModule.html":{},"modules/ResultSidebarModule.html":{},"modules/SimpleDocumentationModule.html":{},"modules/StepbarModule.html":{},"modules/SynthesisModule.html":{},"modules/SyntheticDrawingModule.html":{},"modules/WelcomeModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AbstractControlWarn.html":{"url":"interfaces/AbstractControlWarn.html","title":"interface - AbstractControlWarn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AbstractControlWarn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/custom-field.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        AbstractControl\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            warnings\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        warnings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        warnings:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractControl, FormControl, RequiredValidator, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\n\n// https://dev.to/vishesh/custom-error-handling-in-angular-reactive-forms-5f05\n\nexport interface AbstractControlWarn extends AbstractControl { warnings: any; }\nexport interface WarnFn extends ValidatorFn { }\nexport function lossWarningValidator(control: AbstractControlWarn): null  {\n  if (control.get('value')?.value > 0) {\n    control.warnings = 'Loss is here algebraic and usually  {\n  //   if(control.errors === null){\n  //     return null\n  //     let { warning } = control.\n  //   };\n  //   return null;\n  // };\n\n  public requiredValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if(!control && control !== 0){\n      return {\n        error: \"Please enter a value here\",\n        warning: \"Test Warning!\" // FIXME: Remove later\n      }\n    }\n    return null;\n  };\n\n  public validValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (control.errors === null) {\n      return null\n    }\n    let { pattern } = control.errors;\n    if( pattern ){\n      return {\n        error: \"Please enter a numerical value\",\n      }\n    }\n    return {\n      error: 'Unknown error (3)'\n    }\n  };\n\n public fieldValidator: ValidatorFn = (control: AbstractControl):\n\n ValidationErrors | null => {\n\n  let value = control.get('value');\n  const unit = control.get('unit');\n\n  /*\n  Pass value Abstract control through multiple validators and output the result\n  TODO: order them by importance and only show the most jarring issue (or should we show all errors at once?)\n  -required\n  -numerical\n  -bounds\n  - ?\n  */\n  let req = this.requiredValidator(value?.value);\n  //let val = this.validValidator(value.value)\n  //let errList = [req, val];\n\n  // for(let i = 0; i  null;\n\n// export const isotropicGainValidator: ValidatorFn = ():\n\n// ValidationErrors | null => null;\n\n// // #TODO Custom validation depending on input kind\n// // How to handle separate field / unit validation ? Or is it all the same ?\n\n// export class CustomValidators {\n//   // TODO For real\n//   validators = {\n//     power:\n//     {\n//       validator: powerValidator,\n//       message: 'The power should be no more than 1MW',\n//     },\n//     gain_iso: {\n//       validator: isotropicGainValidator,\n//       message: 'The gain should be positive',\n//     },\n//   };\n// }\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Antenna.html":{"url":"interfaces/Antenna.html","title":"interface - Antenna","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Antenna\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/Antennas.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Form\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            beamWidthCalculation\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            gainCalculation\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        beamWidthCalculation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        beamWidthCalculation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gainCalculation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gainCalculation:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Field, Form } from './Form.model';\n\n// export class Antenna {\n//   public showSelector: boolean;\n//   // public template: Antenna;\n//   // public gain: number;\n//   // public beamwidth: number;\n\n//   constructor() {\n//     this.showSelector = false;\n//   }\n// }\n\n// export class YagiAntenna extends Antenna {\n//   constructor(private logger: LoggerService) {\n//     super();\n//     this.showSelector = true;\n//   }\n\n//   public computeGain(): number {\n//     this.logger.warn('computeGain not implemented for YagiAntenna');\n//     return 0;\n//   }\n\n//   public computeBeamWidth(): number {\n//     this.logger.warn('computeBeamWidth not implemented for YagiAntenna');\n//     return 0;\n//   }\n// }\nexport interface Antenna extends Form {\n  gainCalculation?: string,\n  beamWidthCalculation?: string\n}\nexport const AntennasUtilsFunctions = {\n  yagiGainComputation: function (params: any): number {\n    /**\n     * AMSAT uses a LUT for this computation.\n     * There seems to exist Python library that could handle these calculations.\n     * For now, we're interpolating the data used in AMSAT\n     * This function could also call API for complex calculations\n     */\n    console.warn('Yagi Gain Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round(12.316 * length ** 0.2665 * 100) / 100;\n  },\n  yagiOptimumElements: function (params: any): number {\n    console.warn('Yagi Beamwidth Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round((2.632 * length ** 0.2665 + 3.149) * 100) / 100;\n  },\n  yagiBeamwidthComputation: function (params: any): number {\n    console.warn('Yagi Beamwidth Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round(Math.sqrt(40000 / (10 ** (this.yagiGainComputation(params) / 10))) * 100) / 100;\n  },\n};\nexport abstract class Antennas {\n  static genericAntenna : Antenna = { // This template is always used to display gain and width\n    // componentType: \"antenna\",\n    componentId: '',\n    params: [{\n      id: 'antMaxGain',\n      desc: 'Max Gain',\n      units: ['dBi'],\n      // dimension:\"iso_gain\",\n      default: 14.0,\n    },\n    {\n      id: 'antBeamWidth',\n      desc: 'Beamwidth',\n      units: ['°', 'rad'],\n      // dimension:\"angle\",\n      default: 35.0,\n    },\n    ],\n  };\n\n  static yagiAntenna: Antenna = {\n    // componentType: \"antenna\",\n    componentId: 'yagiAntenna',\n    componentName: 'Yagi',\n    image: 'assets/antennas/yagi.jpg',\n    gainCalculation: 'yagiGainComputation',\n    params: [\n      {\n        id: 'boomLength',\n        desc: 'Boom Length',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.4,\n      },\n      {\n        id: 'elements',\n        desc: 'Number of elements',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.4,\n      },\n    ],\n  };\n\n  static helixAntenna: Antenna = {\n    // componentType: \"antenna\",\n    componentId: 'helixAntenna',\n    componentName: 'Helicoidal',\n    image: 'assets/antennas/helix.jpg',\n    params: [\n      {\n        id: 'turns',\n        desc: 'Turns',\n        units: [],\n        // dimension: \"adimensional\",\n        default: 10,\n      },\n      {\n        id: 'turnSpacing',\n        desc: 'Turn Spacing',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.25,\n      },\n      {\n        id: 'circumference',\n        desc: 'Circumference',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 1,\n      },\n    ],\n  };\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AntennaField.html":{"url":"interfaces/AntennaField.html","title":"interface - AntennaField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AntennaField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            antennaId\n                                        \n                                \n                                \n                                        \n                                            antennaValues\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        antennaId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        antennaId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        antennaValues\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        antennaValues:         Field[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Field[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Field {\n\n  id:string, // id used by API to recognize label\n  desc: string, // the label displayed, human-readable\n  units: string[], // A list of possible units, the first one being displayed by default\n  // #FIXME antenna selector extends field maybe\n  options?: 'field' | 'antenna' // Optional, since by default we'll assume it's a field\n  optionsField?: Field[]\n  default: number\n  alternative? : Form;\n}\n\n// FIXME:!!! The type param is ugly,  fix with oop\nexport interface Form {\n\n  /// /componentType:string,\n  componentId: string,\n  parentComponent?: string,\n  hasAntenna?: boolean,\n  componentName?:string,\n  image?: string,\n  params: Field[],\n\n  parent?: string,\n  computeFn?: string,\n\n}\n\nexport interface AntennaField{\n  id:string,\n  antennaId: string,\n\n  antennaValues: Field[]\n}\n\nexport interface Template {\n  components: Form[]\n}\n\nexport class emptyForm implements Form {\n  // componentType: '',\n    componentId: string;\n    parentComponent?: string;\n    params: Field[];\n\n    constructor() {\n      this.componentId = 'empty';\n      this.parentComponent = 'uplink';\n      this.params = [];\n    }\n  };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Antennas.html":{"url":"classes/Antennas.html","title":"class - Antennas","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Antennas\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/Antennas.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                genericAntenna\n                            \n                            \n                                    Static\n                                helixAntenna\n                            \n                            \n                                    Static\n                                yagiAntenna\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        genericAntenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Antenna\n\n                    \n                \n                \n                    \n                        Default value : { // This template is always used to display gain and width\n    // componentType: \"antenna\",\n    componentId: '',\n    params: [{\n      id: 'antMaxGain',\n      desc: 'Max Gain',\n      units: ['dBi'],\n      // dimension:\"iso_gain\",\n      default: 14.0,\n    },\n    {\n      id: 'antBeamWidth',\n      desc: 'Beamwidth',\n      units: ['°', 'rad'],\n      // dimension:\"angle\",\n      default: 35.0,\n    },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/Antennas.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        helixAntenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Antenna\n\n                    \n                \n                \n                    \n                        Default value : {\n    // componentType: \"antenna\",\n    componentId: 'helixAntenna',\n    componentName: 'Helicoidal',\n    image: 'assets/antennas/helix.jpg',\n    params: [\n      {\n        id: 'turns',\n        desc: 'Turns',\n        units: [],\n        // dimension: \"adimensional\",\n        default: 10,\n      },\n      {\n        id: 'turnSpacing',\n        desc: 'Turn Spacing',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.25,\n      },\n      {\n        id: 'circumference',\n        desc: 'Circumference',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 1,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/Antennas.ts:110\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        yagiAntenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Antenna\n\n                    \n                \n                \n                    \n                        Default value : {\n    // componentType: \"antenna\",\n    componentId: 'yagiAntenna',\n    componentName: 'Yagi',\n    image: 'assets/antennas/yagi.jpg',\n    gainCalculation: 'yagiGainComputation',\n    params: [\n      {\n        id: 'boomLength',\n        desc: 'Boom Length',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.4,\n      },\n      {\n        id: 'elements',\n        desc: 'Number of elements',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.4,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/Antennas.ts:86\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Field, Form } from './Form.model';\n\n// export class Antenna {\n//   public showSelector: boolean;\n//   // public template: Antenna;\n//   // public gain: number;\n//   // public beamwidth: number;\n\n//   constructor() {\n//     this.showSelector = false;\n//   }\n// }\n\n// export class YagiAntenna extends Antenna {\n//   constructor(private logger: LoggerService) {\n//     super();\n//     this.showSelector = true;\n//   }\n\n//   public computeGain(): number {\n//     this.logger.warn('computeGain not implemented for YagiAntenna');\n//     return 0;\n//   }\n\n//   public computeBeamWidth(): number {\n//     this.logger.warn('computeBeamWidth not implemented for YagiAntenna');\n//     return 0;\n//   }\n// }\nexport interface Antenna extends Form {\n  gainCalculation?: string,\n  beamWidthCalculation?: string\n}\nexport const AntennasUtilsFunctions = {\n  yagiGainComputation: function (params: any): number {\n    /**\n     * AMSAT uses a LUT for this computation.\n     * There seems to exist Python library that could handle these calculations.\n     * For now, we're interpolating the data used in AMSAT\n     * This function could also call API for complex calculations\n     */\n    console.warn('Yagi Gain Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round(12.316 * length ** 0.2665 * 100) / 100;\n  },\n  yagiOptimumElements: function (params: any): number {\n    console.warn('Yagi Beamwidth Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round((2.632 * length ** 0.2665 + 3.149) * 100) / 100;\n  },\n  yagiBeamwidthComputation: function (params: any): number {\n    console.warn('Yagi Beamwidth Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round(Math.sqrt(40000 / (10 ** (this.yagiGainComputation(params) / 10))) * 100) / 100;\n  },\n};\nexport abstract class Antennas {\n  static genericAntenna : Antenna = { // This template is always used to display gain and width\n    // componentType: \"antenna\",\n    componentId: '',\n    params: [{\n      id: 'antMaxGain',\n      desc: 'Max Gain',\n      units: ['dBi'],\n      // dimension:\"iso_gain\",\n      default: 14.0,\n    },\n    {\n      id: 'antBeamWidth',\n      desc: 'Beamwidth',\n      units: ['°', 'rad'],\n      // dimension:\"angle\",\n      default: 35.0,\n    },\n    ],\n  };\n\n  static yagiAntenna: Antenna = {\n    // componentType: \"antenna\",\n    componentId: 'yagiAntenna',\n    componentName: 'Yagi',\n    image: 'assets/antennas/yagi.jpg',\n    gainCalculation: 'yagiGainComputation',\n    params: [\n      {\n        id: 'boomLength',\n        desc: 'Boom Length',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.4,\n      },\n      {\n        id: 'elements',\n        desc: 'Number of elements',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.4,\n      },\n    ],\n  };\n\n  static helixAntenna: Antenna = {\n    // componentType: \"antenna\",\n    componentId: 'helixAntenna',\n    componentName: 'Helicoidal',\n    image: 'assets/antennas/helix.jpg',\n    params: [\n      {\n        id: 'turns',\n        desc: 'Turns',\n        units: [],\n        // dimension: \"adimensional\",\n        default: 10,\n      },\n      {\n        id: 'turnSpacing',\n        desc: 'Turn Spacing',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 0.25,\n      },\n      {\n        id: 'circumference',\n        desc: 'Circumference',\n        units: ['m', 'cm'],\n        // dimension: \"length\",\n        default: 1,\n      },\n    ],\n  };\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CardComponent.html":{"url":"components/CardComponent.html","title":"component - CardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/card/card.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-card\n            \n\n            \n                styleUrls\n                ./card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                collapsed\n                            \n                            \n                                faAngleDown\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collapseCard\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                isWide\n                            \n                            \n                                styleClass\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        isWide\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/card/card.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        styleClass\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/card/card.component.ts:10\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/card/card.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        collapseCard\n                        \n                    \n                \n            \n            \n                \ncollapseCard()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/card/card.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        collapsed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/card/card.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/card/card.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\n\n@Component({\n  selector: 'lib-card',\n  templateUrl: './card.component.html',\n  styleUrls: ['./card.component.scss'],\n})\nexport class CardComponent {\n  @Input() public styleClass: string = '';\n\n  @Input() title?: string;\n\n  @Input() public isWide?: boolean = false;\n\n  faAngleDown = faAngleDown;\n\n  public collapsed: boolean = false;\n\n  collapseCard() {\n    this.collapsed = !this.collapsed;\n  }\n}\n\n    \n\n    \n        \n  \n    {{title}}\n    \n      \n    \n  \n\n  \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./card.component.scss\n                \n                @import '~bulma/sass/utilities/derived-variables.sass';\n// @import '~bulma/bulma.sass';\n\n.card-header-title {\n  margin-bottom:0;\n}\n\n.card {\n  margin-bottom: 20px;\n  // overflow:hidden; //disabled to allow tooltips to overflow\n  //width : 361.2px;\n}\n.card.is-danger {\n  background-color: $danger;\n  color: white;\n}\n.card.is-success {\n  background-color: $success;\n  color: white;\n}\n.card.is-warning {\n  background-color: $warning;\n  color: darkslategray;\n}\n.wide {\n  width: auto !important;\n}\n.card-header {\n  background-color: rgb(255, 255, 255);\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{title}}                                  '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CardModule.html":{"url":"modules/CardModule.html","title":"module - CardModule","body":"\n                   \n\n\n\n\n    Modules\n    CardModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CardModule\n\n\n\ncluster_CardModule_exports\n\n\n\ncluster_CardModule_declarations\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nCardModule\n\nCardModule\n\nCardModule -->\n\nCardComponent->CardModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardModule->CardComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/card/card.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CardComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CardComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CardComponent } from './card.component';\n\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome'\n\n@NgModule({\n  declarations: [\n    CardComponent\n  ],\n  imports: [\n    CommonModule,\n    FontAwesomeModule\n  ],\n  exports: [\n    CardComponent\n  ],\n})\nexport class CardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ComputeLinkBudgetService.html":{"url":"injectables/ComputeLinkBudgetService.html","title":"injectable - ComputeLinkBudgetService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ComputeLinkBudgetService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                computeLayout\n                            \n                            \n                                displayFooter\n                            \n                            \n                                displayingResults\n                            \n                            \n                                    Public\n                                linkBudgetSynthesis\n                            \n                            \n                                    Public\n                                result\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                computeLinkBudget\n                            \n                            \n                                getResult$\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Public\n                                toggleResults\n                            \n                            \n                                updateResult\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: any, httpClient: HttpClient, formService: FormService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        computeLinkBudget\n                        \n                    \n                \n            \n            \n                \n                    \n                    computeLinkBudget(dataIn?: any, urlIn?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dataIn\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    urlIn\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getResult$\n                        \n                    \n                \n            \n            \n                \ngetResult$()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     BehaviorSubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                                HttpErrorResponse\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        toggleResults\n                        \n                    \n                \n            \n            \n                \n                    \n                    toggleResults()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateResult\n                        \n                    \n                \n            \n            \n                \nupdateResult(value: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        computeLayout\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"sidebar\" | string | \"footer\"\n\n                    \n                \n                \n                    \n                        Default value : 'sidebar'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayFooter\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayingResults\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        linkBudgetSynthesis\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Observable\n\n                    \n                \n                \n                    \n                        Default value : new Observable()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject([])\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts:25\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\nimport { BehaviorSubject, Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { LoggerService } from '../shared/logger/logger.service';\nimport { FormService } from '../form/form.service';\nimport { APIResult } from '../components/results/components/results/results.component';\nimport { ENVIRONMENT_TOKEN } from '../shared/dependencies';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport default class ComputeLinkBudgetService {\n  displayFooter:boolean=false;\n\n  displayingResults:boolean = true;\n\n  computeLayout: 'sidebar' | '' | 'footer' = 'sidebar';\n\n  // public result: BehaviorSubject = new BehaviorSubject(\"\");\n  // TODO: Should check that API is reachable with a ping and send a toastr\n\n  // #FIXME:compute logic can be improved regarding observable, find suitable architecture\n  public result:BehaviorSubject = new BehaviorSubject([]);\n\n  public linkBudgetSynthesis: Observable = new Observable();\n\n  constructor(@Inject(ENVIRONMENT_TOKEN) private environment:any, private httpClient: HttpClient, private formService: FormService, private logger:LoggerService) { }\n\n  public computeLinkBudget(dataIn?:any, urlIn?:string): Observable | undefined {\n    let data = dataIn;\n    let url = urlIn;\n\n    if (data === undefined) {\n      // this.logger.warn('Form validity', this.formService.globalForm.valid);\n\n      if (!this.formService.globalForm.valid) {\n        // In case the form is invalid\n        this.logger.warn('Errors in the inputed data', 'Please check the validity of entered data');\n        return;\n      }\n      data = this.formService.getFormData();\n      if (data === {}) {\n        this.logger.warn('No data to process', 'Please check the inputed data');\n      }\n    }\n\n    const POSTData = {\n      data,\n      options: {\n        calculation: 'linkpredict', // #TODO: Hardcoded, to implement\n        type: 'static',\n        // debug: true, // This adds delay to the request\n      },\n    };\n\n    if (url === undefined) {\n      url = `${this.environment.APIEndPoint}linkBudget/${POSTData.options.type}`;\n    }\n\n    // this.logger.debug('Sending POST request!', data);\n\n    this.linkBudgetSynthesis = this.httpClient\n      .post(url, POSTData, { responseType: 'json' })\n      .pipe(\n        catchError(this.handleError.bind(this)), // Binding the context of the call in order to still have access to logger\n      );\n\n    this.displayingResults = true;\n    // this.result.next(this.linkBudgetSynthesis)\n\n    // TODO: Check data validity before making it available and test this\n\n    // eslint-disable-next-line consistent-return\n    return this.linkBudgetSynthesis;\n  }\n\n  public toggleResults() {\n    this.displayingResults = !this.displayingResults;\n  }\n\n  updateResult(value:any) {\n    this.result.next(value);\n  }\n\n  getResult$(): BehaviorSubject {\n    return this.result;\n  }\n\n  private handleError(error: HttpErrorResponse) {\n    // This handles HTTP errors\n    // this.logger.error(\"POST request error!\")\n    if (error.error instanceof Error) {\n      // A client-side or network error occured.\n      this.logger.error('Client-side / Network error', [error.message, error.error.stack]);\n      // Displaying as much information as possible in order to choose the best to display later.\n      this.logger.debug('full error (pick pertinent information to display to user & developper', error.error);\n    } else {\n      // The backend returned an error code\n      this.logger.error('Backend Error', error.message);\n    }\n    return throwError(error);\n    // 'An error occured in Custom ErrorHandler'\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CustomRouteReuseStrategy.html":{"url":"classes/CustomRouteReuseStrategy.html","title":"class - CustomRouteReuseStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CustomRouteReuseStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            RouteReuseStrategy\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                storedRoutes\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                retrieve\n                            \n                            \n                                shouldAttach\n                            \n                            \n                                shouldDetach\n                            \n                            \n                                shouldReuseRoute\n                            \n                            \n                                store\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        storedRoutes\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Map()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts:5\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        retrieve\n                        \n                    \n                \n            \n            \n                \nretrieve(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         DetachedRouteHandle\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldAttach\n                        \n                    \n                \n            \n            \n                \nshouldAttach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldDetach\n                        \n                    \n                \n            \n            \n                \nshouldDetach(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        shouldReuseRoute\n                        \n                    \n                \n            \n            \n                \nshouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    future\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    curr\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n            \n                \nstore(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    handle\n                                    \n                                                DetachedRouteHandle\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { ɵsetCurrentInjector } from '@angular/core';\nimport { RouteReuseStrategy, ActivatedRouteSnapshot, DetachedRouteHandle } from '@angular/router';\n\nexport class CustomRouteReuseStrategy implements RouteReuseStrategy {\n  private storedRoutes = new Map();\n\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    console.log(`detach ${route.url}`);\n    return true; // TODO: Store all routes for now, to correct\n  }\n\n  store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n    if (route != null) {\n      this.storedRoutes.set(route.routeConfig!.path!, handle);\n    }\n  }\n\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    console.log(`attach ${route.url}`);\n    return !!route.routeConfig && !!this.storedRoutes.get(route.routeConfig.path!);// Not clean\n  }\n\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n    return this.storedRoutes.get(route.routeConfig!.path!)!;// Not clean\n  }\n\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    console.log(`reuse ${curr.url} -> ${future.url}`);\n    return future.routeConfig === curr.routeConfig && !curr.data.noReuse;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CustomValidators.html":{"url":"injectables/CustomValidators.html","title":"injectable - CustomValidators","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CustomValidators\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/custom-field.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fieldValidator\n                            \n                            \n                                    Public\n                                requiredValidator\n                            \n                            \n                                    Public\n                                validValidator\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/shared/custom-field.ts:19\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fieldValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/custom-field.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        requiredValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/custom-field.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validValidator\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ValidatorFn\n\n                    \n                \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/custom-field.ts:43\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractControl, FormControl, RequiredValidator, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\n\n// https://dev.to/vishesh/custom-error-handling-in-angular-reactive-forms-5f05\n\nexport interface AbstractControlWarn extends AbstractControl { warnings: any; }\nexport interface WarnFn extends ValidatorFn { }\nexport function lossWarningValidator(control: AbstractControlWarn): null  {\n  if (control.get('value')?.value > 0) {\n    control.warnings = 'Loss is here algebraic and usually  {\n  //   if(control.errors === null){\n  //     return null\n  //     let { warning } = control.\n  //   };\n  //   return null;\n  // };\n\n  public requiredValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if(!control && control !== 0){\n      return {\n        error: \"Please enter a value here\",\n        warning: \"Test Warning!\" // FIXME: Remove later\n      }\n    }\n    return null;\n  };\n\n  public validValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (control.errors === null) {\n      return null\n    }\n    let { pattern } = control.errors;\n    if( pattern ){\n      return {\n        error: \"Please enter a numerical value\",\n      }\n    }\n    return {\n      error: 'Unknown error (3)'\n    }\n  };\n\n public fieldValidator: ValidatorFn = (control: AbstractControl):\n\n ValidationErrors | null => {\n\n  let value = control.get('value');\n  const unit = control.get('unit');\n\n  /*\n  Pass value Abstract control through multiple validators and output the result\n  TODO: order them by importance and only show the most jarring issue (or should we show all errors at once?)\n  -required\n  -numerical\n  -bounds\n  - ?\n  */\n  let req = this.requiredValidator(value?.value);\n  //let val = this.validValidator(value.value)\n  //let errList = [req, val];\n\n  // for(let i = 0; i  null;\n\n// export const isotropicGainValidator: ValidatorFn = ():\n\n// ValidationErrors | null => null;\n\n// // #TODO Custom validation depending on input kind\n// // How to handle separate field / unit validation ? Or is it all the same ?\n\n// export class CustomValidators {\n//   // TODO For real\n//   validators = {\n//     power:\n//     {\n//       validator: powerValidator,\n//       message: 'The power should be no more than 1MW',\n//     },\n//     gain_iso: {\n//       validator: isotropicGainValidator,\n//       message: 'The gain should be positive',\n//     },\n//   };\n// }\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/DrawingDefault.html":{"url":"classes/DrawingDefault.html","title":"class - DrawingDefault","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  DrawingDefault\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/synthetic-drawing/models/default.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                defaultComponents\n                            \n                            \n                                    Static\n                                defaultGains\n                            \n                            \n                                    Static\n                                powerIn\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        defaultComponents\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 'tx',\n      component: {\n        label: 'Ptx',\n        gain: 0,\n        linear: true,\n        position: 0,\n        width: 15,\n      },\n    },\n    {\n      id: 'cableTx',\n      component: {\n        label: 'Ltx',\n        gain: DrawingDefault.defaultGains.cableTx,\n        linear: true,\n        position: 15,\n        width: 10,\n      },\n    },\n    {\n      id: 'antTx',\n      component: {\n        label: 'Gtx',\n        gain: DrawingDefault.defaultGains.antTx,\n        linear: false,\n        position: 25,\n        width: 10,\n      },\n    },\n    {\n      id: 'fsl',\n      component: {\n        label: 'Lpath',\n        gain: DrawingDefault.defaultGains.fsl,\n        linear: true,\n        position: 35,\n        width: 30,\n      },\n    },\n    {\n      id: 'antRx',\n      component: {\n        label: 'Grx',\n        gain: DrawingDefault.defaultGains.antRx,\n        linear: false,\n        position: 65,\n        width: 10,\n      },\n    },\n    {\n      id: 'cableRx',\n      component: {\n        label: 'Lrx',\n        gain: DrawingDefault.defaultGains.cableRx,\n        linear: true,\n        position: 75,\n        width: 10,\n      },\n    },\n    {\n      id: 'rx',\n      component: {\n        label: 'Prx',\n        gain: 0,\n        linear: true,\n        position: 85,\n        width: 15,\n      },\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/models/default.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        defaultGains\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    cableTx: -3,\n    antTx: 24,\n    fsl: -125,\n    antRx: 35,\n    cableRx: -5,\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/models/default.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        powerIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/models/default.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { LinkBudgetComponent } from '../../../shared/models/LinkBudgetScenario.model';\n\nexport abstract class DrawingDefault {\n  // This class keeps all the default values used by the synthetic drawing module.\n  static powerIn = 10;\n  static defaultGains = {\n    cableTx: -3,\n    antTx: 24,\n    fsl: -125,\n    antRx: 35,\n    cableRx: -5,\n  };\n  static defaultComponents: { id: string; component: LinkBudgetComponent }[] = [\n    {\n      id: 'tx',\n      component: {\n        label: 'Ptx',\n        gain: 0,\n        linear: true,\n        position: 0,\n        width: 15,\n      },\n    },\n    {\n      id: 'cableTx',\n      component: {\n        label: 'Ltx',\n        gain: DrawingDefault.defaultGains.cableTx,\n        linear: true,\n        position: 15,\n        width: 10,\n      },\n    },\n    {\n      id: 'antTx',\n      component: {\n        label: 'Gtx',\n        gain: DrawingDefault.defaultGains.antTx,\n        linear: false,\n        position: 25,\n        width: 10,\n      },\n    },\n    {\n      id: 'fsl',\n      component: {\n        label: 'Lpath',\n        gain: DrawingDefault.defaultGains.fsl,\n        linear: true,\n        position: 35,\n        width: 30,\n      },\n    },\n    {\n      id: 'antRx',\n      component: {\n        label: 'Grx',\n        gain: DrawingDefault.defaultGains.antRx,\n        linear: false,\n        position: 65,\n        width: 10,\n      },\n    },\n    {\n      id: 'cableRx',\n      component: {\n        label: 'Lrx',\n        gain: DrawingDefault.defaultGains.cableRx,\n        linear: true,\n        position: 75,\n        width: 10,\n      },\n    },\n    {\n      id: 'rx',\n      component: {\n        label: 'Prx',\n        gain: 0,\n        linear: true,\n        position: 85,\n        width: 15,\n      },\n    },\n  ];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Field.html":{"url":"interfaces/Field.html","title":"interface - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Field\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            alternative\n                                        \n                                \n                                \n                                        \n                                            default\n                                        \n                                \n                                \n                                        \n                                            desc\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            options\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            optionsField\n                                        \n                                \n                                \n                                        \n                                            units\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alternative\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alternative:         Form\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Form\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        default:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        desc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:     \"field\" | \"antenna\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"field\" | \"antenna\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        optionsField\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        optionsField:         Field[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Field[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        units\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        units:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Field {\n\n  id:string, // id used by API to recognize label\n  desc: string, // the label displayed, human-readable\n  units: string[], // A list of possible units, the first one being displayed by default\n  // #FIXME antenna selector extends field maybe\n  options?: 'field' | 'antenna' // Optional, since by default we'll assume it's a field\n  optionsField?: Field[]\n  default: number\n  alternative? : Form;\n}\n\n// FIXME:!!! The type param is ugly,  fix with oop\nexport interface Form {\n\n  /// /componentType:string,\n  componentId: string,\n  parentComponent?: string,\n  hasAntenna?: boolean,\n  componentName?:string,\n  image?: string,\n  params: Field[],\n\n  parent?: string,\n  computeFn?: string,\n\n}\n\nexport interface AntennaField{\n  id:string,\n  antennaId: string,\n\n  antennaValues: Field[]\n}\n\nexport interface Template {\n  components: Form[]\n}\n\nexport class emptyForm implements Form {\n  // componentType: '',\n    componentId: string;\n    parentComponent?: string;\n    params: Field[];\n\n    constructor() {\n      this.componentId = 'empty';\n      this.parentComponent = 'uplink';\n      this.params = [];\n    }\n  };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Form.html":{"url":"interfaces/Form.html","title":"interface - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Form\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            componentId\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            componentName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            computeFn\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            hasAntenna\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            image\n                                        \n                                \n                                \n                                        \n                                            params\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parent\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            parentComponent\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        componentId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        componentId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        componentName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        componentName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        computeFn\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        computeFn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hasAntenna\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasAntenna:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        image\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        image:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        params\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        params:         Field[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Field[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parentComponent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        parentComponent:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Field {\n\n  id:string, // id used by API to recognize label\n  desc: string, // the label displayed, human-readable\n  units: string[], // A list of possible units, the first one being displayed by default\n  // #FIXME antenna selector extends field maybe\n  options?: 'field' | 'antenna' // Optional, since by default we'll assume it's a field\n  optionsField?: Field[]\n  default: number\n  alternative? : Form;\n}\n\n// FIXME:!!! The type param is ugly,  fix with oop\nexport interface Form {\n\n  /// /componentType:string,\n  componentId: string,\n  parentComponent?: string,\n  hasAntenna?: boolean,\n  componentName?:string,\n  image?: string,\n  params: Field[],\n\n  parent?: string,\n  computeFn?: string,\n\n}\n\nexport interface AntennaField{\n  id:string,\n  antennaId: string,\n\n  antennaValues: Field[]\n}\n\nexport interface Template {\n  components: Form[]\n}\n\nexport class emptyForm implements Form {\n  // componentType: '',\n    componentId: string;\n    parentComponent?: string;\n    params: Field[];\n\n    constructor() {\n      this.componentId = 'empty';\n      this.parentComponent = 'uplink';\n      this.params = [];\n    }\n  };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FormComponent.html":{"url":"components/FormComponent.html","title":"component - FormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/form/component/form.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-form\n            \n\n            \n                styleUrls\n                ./form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _formTemplate\n                            \n                            \n                                componentName\n                            \n                            \n                                displayedImage\n                            \n                            \n                                faInterrogation\n                            \n                            \n                                    Public\n                                FormsTemplate\n                            \n                            \n                                hasImage\n                            \n                            \n                                    Public\n                                localForm\n                            \n                            \n                                    Public\n                                logger\n                            \n                            \n                                parentName\n                            \n                            \n                                validity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asField\n                            \n                            \n                                changeComponent\n                            \n                            \n                                geometrySubscribe\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                subscribeToChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formTemplate\n                            \n                            \n                                groupId\n                            \n                            \n                                isStandalone\n                            \n                            \n                                isSubform\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                formStatus\n                            \n                        \n                    \n                \n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    formTemplate\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService, logger: LoggerService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:60\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formTemplate\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:48\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isStandalone\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        isSubform\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:49\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        formStatus\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:52\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        asField\n                        \n                    \n                \n            \n            \n                \n                    \n                    asField(field: Field | AntennaField)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    field\n                                    \n                                            Field | AntennaField\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Field\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeComponent\n                        \n                    \n                \n            \n            \n                \nchangeComponent(componentTemplate: Form)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:160\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentTemplate\n                                    \n                                                Form\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        geometrySubscribe\n                        \n                    \n                \n            \n            \n                \ngeometrySubscribe()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(control: AbstractControl | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:209\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n                                    \n                                            AbstractControl | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        subscribeToChanges\n                        \n                    \n                \n            \n            \n                \nsubscribeToChanges()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _formTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new emptyForm()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:60\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        componentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:54\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faInterrogation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faQuestionCircle\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        FormsTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasImage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        localForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggerService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:55\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validity\n                        \n                    \n                \n            \n                \n                    \n                        Type :     \"valid\" | \"invalid\" | \"none\"\n\n                    \n                \n                \n                    \n                        Default value : 'none'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:58\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        formTemplate\n                    \n                \n\n                \n                    \n                        getformTemplate()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:44\n                                \n                            \n\n                \n                    \n                        setformTemplate(value: Form)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/form/component/form.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            Form\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  Component, EventEmitter, Input, OnInit, Output,\n} from '@angular/core';\nimport { AbstractControl, FormBuilder, FormGroup } from '@angular/forms';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { HelperFunctions } from '../../shared/helper-functions';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport {\n  AntennaField,\n  emptyForm,\n  Field,\n  Form,\n} from '../../shared/models/Form.model';\nimport { FormService } from '../form.service';\n// import { AbstractControlWarn } from 'src/app/shared/custom-field.directive';\n\n@Component({\n  selector: 'lib-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.scss'],\n})\nexport class FormComponent {\n  public FormsTemplate:any;\n  // We create a subform corresponding to one of the component involved in the link\n  public localForm: FormGroup = new FormGroup({});\n  faInterrogation = faQuestionCircle;\n  @Input()\n  set formTemplate(value: Form) {\n    if (value) {\n      this._formTemplate = value;\n      this.changeComponent(this._formTemplate); // Supplied by datainput template\n      this.validity = this.localForm.valid ? 'valid' : 'invalid';\n      this.subscribeToChanges();\n      if (this.formTemplate.componentId === 'geometry') {\n        // We want to link slant range to altitude & elevation\n        this.geometrySubscribe();\n      }\n      this.formStatus.emit({ id: this.formTemplate.componentId, validity: this.validity });\n      // Check validity\n    } else {\n      this.logger.debug('Got an undefined formTemplate');\n    }\n  }\n  get formTemplate(): Form {\n    return this._formTemplate;\n  }\n\n  @Input() groupId?: string;\n  @Input() isSubform?: boolean = true;\n  @Input() isStandalone?: boolean = true;\n\n  @Output() formStatus: EventEmitter = new EventEmitter();\n\n  componentName: string = '';\n  parentName: string = '';\n  displayedImage: string = '';\n  hasImage: boolean = false;\n  validity: 'valid' | 'invalid' | 'none' = 'none';\n\n  private _formTemplate = new emptyForm();\n\n  constructor(private formService: FormService, public logger: LoggerService, private fb: FormBuilder) {\n    // If this is the first component to be constructed, initialize formService\n    if( !this.formService.isInitialized() ) this.formService.initForms();\n    this.logger.debug(`initialized: ${this.formService.isInitialized()}`)\n  }\n\n  public asField(field: Field | AntennaField): Field {\n    /**\n     * Quick helper function for types conversion in the template\n     * (Not really useful since we do not have AntennaField anymore)\n     */\n    return field as Field;\n  }\n\n  subscribeToChanges(): void {\n    this.localForm.valueChanges.subscribe(\n      (_value) => {\n        // Handle saved state\n        this.formService.isCurrentFormSaved = false;\n        // Handle validity\n        const currentFormValidity:boolean = this.localForm.valid;\n        if (!currentFormValidity && this.validity !== 'invalid') {\n          this.validity = 'invalid';\n          // console.log(this.step);\n          this.formStatus.emit({ id: this.formTemplate.componentId, validity: this.validity });\n        } else if (currentFormValidity && this.validity !== 'valid') {\n          this.validity = 'valid';\n          this.formStatus.emit({ id: this.formTemplate.componentId, validity: this.validity });\n        } else if (this.validity === 'none') {\n          this.validity = currentFormValidity ? 'valid' : 'invalid';\n          this.formStatus.emit({ id: this.formTemplate.componentId, validity: this.validity });\n        }\n        this.formService.addForm(this.localForm, this.componentName, this.parentName);\n      },\n    );\n    //Subscription to geometry global changes caused by JSatOrb imports\n    this.formService.globalForm.valueChanges\n      .subscribe((newValue: any) => {\n        console.warn(`slant range: ${newValue['geometry'].slantRange.value}`);\n        // console.log(this.localForm.value.slantRange);\n        //this.logger.debug(`subscribing: ${!this.shallowEqual(newValue['geometry'].slantRange, this.localForm.value.slantRange)}`)\n        if(this.componentName === 'geometry' && this.formTemplate.componentId === 'geometry'){\n          this.logger.debug(`Geometry change: ${newValue['geometry']}`);\n          const newForm = this.formService.createFormGroup(this.formTemplate);\n          newForm.setValue(newValue['geometry']);\n          this.localForm = newForm;\n        }\n        // this.localForm = this.fb.group(newValue[this.componentName]);\n      });\n  \n  }\n  \n  geometrySubscribe(): void {\n    /* This function handles the link between slant range and altitude+elevation\n    This is a bit specific right now but could be generalized when used for other fields.\n    Only call this function when used with geometry templates */\n    if (this.formTemplate.componentId !== 'geometry') {\n      return; // If our component isn't geometry related, pass the following subscriptions\n    }\n\n    // this.localForm.get('slantRange')?.valueChanges.subscribe((_value) => {\n      // // Slant range has been edited, recalculate altitude\n      // // const elevation = this.localForm.get('elevation')?.value;\n      // // // Convert to radians if required\n      // elevation.value = elevation.unit === '°' ? elevation.value : elevation.value * (180 / Math.PI);\n      // const sr = HelperFunctions.convertDistance(parseFloat(value.value), value.unit, 'km');\n      // this.localForm.get('altitude')?.setValue({\n      //   value: HelperFunctions.altitudeFromSrElev(sr, elevation.value),\n      //   unit: 'km',\n      // });\n    // RECURSION ISSUES\n    // });\n\n    this.localForm.get('altitude')?.valueChanges.subscribe((value) => {\n      // Altitude edited => calculate SR\n      const elevation = this.localForm.get('elevation')?.value;\n      // Convert to radians if required\n      elevation.value = elevation.unit === '°' ? elevation.value : elevation.value * (180 / Math.PI);\n      // Convert altitue to km\n      const alt = HelperFunctions.convertDistance(parseFloat(value.value), value.unit, 'km');\n      this.localForm.get('slantRange')?.setValue({\n        value: HelperFunctions.slantRangeFromAltElev(alt, parseFloat(elevation.value)).toFixed(1),\n        unit: 'km',\n      });\n    });\n    this.localForm.get('elevation')?.valueChanges.subscribe((value) => {\n      // elevation changed => calculate SR again\n      const altitude = this.localForm.get('altitude')?.value;\n      // Convert to radians if required\n      altitude.value = HelperFunctions.convertDistance(parseFloat(altitude.value), altitude.unit, 'km');\n      // Convert altitue to km\n      const elev = value.unit === '°' ? value.value : value.value * (180 / Math.PI);\n      this.localForm.get('slantRange')?.setValue({\n        value: HelperFunctions.slantRangeFromAltElev(altitude.value, parseFloat(elev)).toFixed(1),\n        unit: 'km',\n      });\n    });\n  }\n  changeComponent(componentTemplate: Form) {\n    // FIXME: Could be way cleaner. Too much spaghetti :'(\n    // update: this has been sligthly improved but still some room left for improvement\n\n    // Next we can retrieve our form from archive\n    // Setting up new Template involves a lot a casting and checking if templates fields aren't null or undefined\n    this.parentName = componentTemplate.parentComponent ?? '';\n    this.componentName = componentTemplate.componentId;\n    this.hasImage = !!componentTemplate.image; // Casts our componentTemplate.image to a boolean\n    this.displayedImage = componentTemplate.image ?? '';\n\n    let previousForm;\n    if (this.parentName === '') {\n      previousForm = this.formService.globalForm.value[this.componentName];\n    } else {\n      previousForm = this.formService.globalForm.value[this.parentName][this.componentName];\n    }\n\n    // We use default values here but since they have already been used to generate globalForm, we shouldn't use them once again\n    // Here we want to regenerate the localFrom from archived form\n    const newForm = this.formService.createFormGroup(componentTemplate);\n    if (previousForm) {\n      // Previous from already exists, we overwrite the localForm\n      newForm.setValue(previousForm);\n      this.localForm = newForm;\n\n      // Now we want to add this localForm to the globalForm\n      if (componentTemplate.parentComponent) {\n        // Component is stored in a group\n        const group = this.formService.globalForm.get(this.parentName) as FormGroup;\n        if (group) {\n          // The group already existed\n          group.setControl(this.componentName, this.localForm);\n          this.formService.globalForm.setControl(this.parentName, group);\n        } else {\n          this.formService.addForm(this.localForm, this.componentName, this.parentName);\n        }\n      } else {\n        // Component is not stored in a group (cf geometry)\n        this.formService.globalForm.setControl(this.componentName, this.localForm);\n      }\n    } else {\n      // This form doesn't exist in the archives\n      // We will use the values from globalForm\n      this.localForm = newForm;\n      this.formService.addForm(this.localForm, this.componentName, this.parentName);\n    }\n  }\n\n  getErrorMessage(control: AbstractControl | null): { error: string, warning: string } {\n    /**\n     * This function gathers result from validators the custom ones defined in\n     * custom-fields.ts\n     */\n    let error;\n    const warning = '';\n    // this.logger.debug(this.formTemplate.componentId);\n\n    if (control === null) {\n      // this.logger.error(\"Internal error, control doesn't seem to exist\");\n      error = 'Unknown error (1)';\n    } else {\n      const { errors } = control;\n      // const { warnings } = control;\n      // if (warnings !== null) {\n      //   console.warn(warnings);\n      // }\n      if (errors === null) {\n        if (control.get('value')?.errors?.pattern) {\n          // Here we intercept the case where regexp is wrong. A bit hacky #FIXME\n          error = 'Choose a numerical value';\n        } else {\n          // error = 'Unknown error (2)'; No error or other default error?\n        }\n      } else {\n        // array destructuring (same as error = errors.error;)\n        ({ error } = errors);\n        // ({ warning } = errors);\n        // warning = '';\n      }\n    }\n    return { error, warning };\n  }\n}\n// FIXME: Handle the error happening when using template that doesn't exist\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            {{asField(field).desc}}:\n              \n               0 is a gain\" -->\n                \n              \n            \n            \n              \n                \n              \n               1\">\n                \n                  \n                    {{ unit }}\n                  \n                \n              \n              \n                {{ asField(field).units[0] }}\n              \n            \n            \n              {{getErrorMessage(this.localForm.get(field.id)).error}}\n            \n          \n        \n      \n    \n     -->\n  \n  \n  \n\n\n    \n\n    \n                \n                    ./form.component.scss\n                \n                label {\n  padding:6px; //just as the input\n  margin: 0;\n  margin-bottom:0 !important;\n}\n.input-wrapper {\n  display:inline-flex;\n}\n.form-control {\n  min-width: 90px; max-width:90px;// 90px is enough for 1MW\n}\n.spacing {\n  margin:24px;\n  padding:0px 24px 0px 24px;\n}\n.field {\n  margin:auto;\n  max-width:360px;\n}\nform {\n  // max-width:480px;\n  margin:auto;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          {{asField(field).desc}}:                             0 is a gain\" -->                                                                                                                 1\">                                                      {{ unit }}                                                                              {{ asField(field).units[0] }}                                                    {{getErrorMessage(this.localForm.get(field.id)).error}}                                             -->      '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormControlWarn.html":{"url":"classes/FormControlWarn.html","title":"class - FormControlWarn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormControlWarn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/form/form.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        FormControl\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                warnings\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        warnings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { BehaviorSubject, Observable } from 'rxjs';\n// import { LoggerService } from '../services/logger.service';\nimport { CustomValidators } from '../shared/custom-field';\nimport { FORM_TEMPLATE_TOKEN } from '../shared/dependencies';\nimport { LoggerService } from '../shared/logger/logger.service';\nimport { Form, Field } from '../shared/models/Form.model';\n\nexport class FormControlWarn extends FormControl { warnings: any; }\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormService {\n  public FormsTemplate:any;\n  /**\n   * This service keeps tracks of everything form-related.\n   * It listens for forms changes and returns the form Data to the computeLinkBudget service\n   */\n  // This contains the concatenation of all subforms\n  \n  public globalForm: FormGroup = new FormGroup({}); // A form group can easily be observed\n  public erroneousSection: BehaviorSubject = new BehaviorSubject('');\n  public title: string = 'Untitled_Link_Budget';\n  public isInterlink: boolean = false;\n  public isCurrentFormSaved: boolean = true;\n\n  // Has forms already been initialized ?\n  private _isInitialized: boolean = false;\n\n  constructor(\n    @Inject(FORM_TEMPLATE_TOKEN) private template: any,\n    private fb: FormBuilder,\n    private customValidators: CustomValidators,\n    private logger: LoggerService,\n  ) {}\n\n  public isInitialized(): boolean {\n    return this._isInitialized;\n  }\n\n  public addForm(formGroup: FormGroup, name: string, parent: string = '') {\n    // #FIXME: Usually we need id before content\n    // Start tracking a new form; called when a form-fragment component is created\n    // If we generate globalForm right at the beginning, we want to replace controls instead of adding them.\n    if (parent && parent !== '') {\n      const group = this.globalForm.get(parent) as FormGroup;\n      if (group) {\n        group.setControl(name, formGroup);\n        this.globalForm.setControl(parent, group);\n      } else {\n        this.globalForm.setControl(\n          parent,\n          this.fb.group({ [name]: formGroup }),\n        );\n      }\n    } else if (name !== '') {\n      this.globalForm.setControl(name, formGroup);\n    }\n  }\n\n  public getComponentValues(componentId: string, link: string = '', parentId?:string): any | undefined {\n    if (!parentId) return this.getFormData()[componentId];\n    return this.getFormData()?.[link]?.[parentId]?.[componentId];\n  }\n\n  public patchForm(parentName: string, groupName: string, formGroup: FormGroup) {\n    // A wrapper for the method from FormGroup. This allows us to have a globalForm with more depth.\n    // For instance, useful for changing antenna\n    const group =  this.globalForm.get(parentName);\n    if (group !== null) {\n      group.addControl(groupName, formGroup);\n      return;\n    }\n    this.logger.warn(\n      `${parentName} does not exist! Cannot attach antenna to it.`,\n    );\n  }\n\n  public importForm(results: any): void {\n    /* This function is called when importing a .json file. It updates the fields values. */\n\n    // #TODO: check file sanity (eg. sanitization)\n    // #TODO: Test\n    // #TODO We now need to make this more robust\n    // Changing global form\n    this.globalForm.patchValue(results.data);\n    this.title = results.metadata.title;\n  }\n\n  public getFormData$(): Observable {\n    return this.globalForm.valueChanges;\n  }\n\n  public getFormData(): any {\n    return this.globalForm.value; // The form updated at all times is used for the calculation\n  }\n\n  public initForms(): void {\n    // This function automatically generates the form to be sent to API even if some components haven't yet been instantiated\n    this.logger.warn('initializing Form Service');\n\n    this.template.template.components.forEach((componentTemplate: Form) => {\n      if (componentTemplate.componentId !== '') {\n        const fg = this.createFormGroup(componentTemplate);\n        if (componentTemplate.parentComponent) {\n          this.addForm(\n            fg,\n            componentTemplate.componentId,\n            componentTemplate.parentComponent,\n          );\n        } else {\n          this.addForm(fg, componentTemplate.componentId);\n        }\n      }\n    });\n    this._isInitialized = true;\n  }\n\n  public createFormGroup(componentTemplate: Form): FormGroup {\n    /**\n     * This function takes in a Form template and return a FormGroup of the corresponding component.\n     * This makes the conversion between angular reactive forms and our custom JSON templates for transmission chain parts.\n     */\n    const group: any = {};\n\n    componentTemplate.params.forEach((element: Field) => {\n      // The default value is 'undefined' if key not found in map\n      // Here we create FormControls for both the input and its unit\n      const inputControl = new FormControlWarn(element.default, {\n        validators: [\n          Validators.pattern('^[+-]?[0-9]+([,][0-9]+)*([.][0-9]+)?$'),\n        ],\n        updateOn: 'blur',\n      }); // , [Validators.required, Validators.maxLength(6)]); //FIXME: For testing purposes\n      // Updating on blur is less distracting, a good compromise\n      const unitControl = (element.units.length === 0)\n        ? new FormControl('', Validators.nullValidator)\n        : new FormControl(element.units[0], Validators.required);\n      // For units, we can assume they will be valid since the user is constrained in his choices\n      group[element.id] = new FormGroup(\n        {\n          // A group composed of both the field and its unit\n          value: inputControl,\n          unit: unitControl,\n        },\n        this.customValidators.fieldValidator,\n      );\n\n      if (element.alternative !== undefined) {\n        const subGroup = this.createFormGroup(element.alternative);\n        group[element.alternative.componentId] = subGroup;\n      }\n    });\n\n    return this.fb.group(group);\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_imports\n\n\n\n\nFormComponent\n\nFormComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nFormModule -->\n\nLoggerModule->FormModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nFormModule -->\n\nLoggerService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/form/form.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FormComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                        \n                            LoggerService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormComponent } from './component/form.component';\nimport { LoggerModule } from '../shared/logger/logger.module';\nimport { LoggerService } from '../shared/logger/logger.service';\nimport { FormService } from './form.service';\nimport { CustomValidators } from '../shared/custom-field';\n\n\n\n@NgModule({\n  declarations: [\n    FormComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\n    LoggerModule.forRoot(),\n  ],\n  exports: [\n    FormComponent,\n  ],\n  providers: [\n    FormService,\n    LoggerService\n  ],\n})\nexport class FormModule {\n  \n }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/form/form.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isInitialized\n                            \n                            \n                                    Public\n                                erroneousSection\n                            \n                            \n                                    Public\n                                FormsTemplate\n                            \n                            \n                                    Public\n                                globalForm\n                            \n                            \n                                    Public\n                                isCurrentFormSaved\n                            \n                            \n                                    Public\n                                isInterlink\n                            \n                            \n                                    Public\n                                title\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addForm\n                            \n                            \n                                    Public\n                                createFormGroup\n                            \n                            \n                                    Public\n                                getComponentValues\n                            \n                            \n                                    Public\n                                getFormData\n                            \n                            \n                                    Public\n                                getFormData$\n                            \n                            \n                                    Public\n                                importForm\n                            \n                            \n                                    Public\n                                initForms\n                            \n                            \n                                    Public\n                                isInitialized\n                            \n                            \n                                    Public\n                                patchForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(template: any, fb: FormBuilder, customValidators: CustomValidators, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:37\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        template\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        customValidators\n                                                  \n                                                        \n                                                                        CustomValidators\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    addForm(formGroup: FormGroup, name: string, parent: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    formGroup\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    parent\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        createFormGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    createFormGroup(componentTemplate: Form)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:128\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    componentTemplate\n                                    \n                                                Form\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getComponentValues\n                        \n                    \n                \n            \n            \n                \n                    \n                    getComponentValues(componentId: string, link: string, parentId?: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:70\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    componentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    link\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                                \n                                    parentId\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     any | undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFormData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFormData$\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormData$()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        importForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    importForm(results: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    results\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initForms\n                        \n                    \n                \n            \n            \n                \n                    \n                    initForms()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isInitialized\n                        \n                    \n                \n            \n            \n                \n                    \n                    isInitialized()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        patchForm\n                        \n                    \n                \n            \n            \n                \n                    \n                    patchForm(parentName: string, groupName: string, formGroup: FormGroup)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/form/form.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    parentName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    groupName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    formGroup\n                                    \n                                                FormGroup\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isInitialized\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        erroneousSection\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        FormsTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        globalForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:30\n                        \n                    \n\n            \n                \n                    This service keeps tracks of everything form-related.\nIt listens for forms changes and returns the form Data to the computeLinkBudget service\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isCurrentFormSaved\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isInterlink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Untitled_Link_Budget'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/form/form.service.ts:32\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { BehaviorSubject, Observable } from 'rxjs';\n// import { LoggerService } from '../services/logger.service';\nimport { CustomValidators } from '../shared/custom-field';\nimport { FORM_TEMPLATE_TOKEN } from '../shared/dependencies';\nimport { LoggerService } from '../shared/logger/logger.service';\nimport { Form, Field } from '../shared/models/Form.model';\n\nexport class FormControlWarn extends FormControl { warnings: any; }\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FormService {\n  public FormsTemplate:any;\n  /**\n   * This service keeps tracks of everything form-related.\n   * It listens for forms changes and returns the form Data to the computeLinkBudget service\n   */\n  // This contains the concatenation of all subforms\n  \n  public globalForm: FormGroup = new FormGroup({}); // A form group can easily be observed\n  public erroneousSection: BehaviorSubject = new BehaviorSubject('');\n  public title: string = 'Untitled_Link_Budget';\n  public isInterlink: boolean = false;\n  public isCurrentFormSaved: boolean = true;\n\n  // Has forms already been initialized ?\n  private _isInitialized: boolean = false;\n\n  constructor(\n    @Inject(FORM_TEMPLATE_TOKEN) private template: any,\n    private fb: FormBuilder,\n    private customValidators: CustomValidators,\n    private logger: LoggerService,\n  ) {}\n\n  public isInitialized(): boolean {\n    return this._isInitialized;\n  }\n\n  public addForm(formGroup: FormGroup, name: string, parent: string = '') {\n    // #FIXME: Usually we need id before content\n    // Start tracking a new form; called when a form-fragment component is created\n    // If we generate globalForm right at the beginning, we want to replace controls instead of adding them.\n    if (parent && parent !== '') {\n      const group = this.globalForm.get(parent) as FormGroup;\n      if (group) {\n        group.setControl(name, formGroup);\n        this.globalForm.setControl(parent, group);\n      } else {\n        this.globalForm.setControl(\n          parent,\n          this.fb.group({ [name]: formGroup }),\n        );\n      }\n    } else if (name !== '') {\n      this.globalForm.setControl(name, formGroup);\n    }\n  }\n\n  public getComponentValues(componentId: string, link: string = '', parentId?:string): any | undefined {\n    if (!parentId) return this.getFormData()[componentId];\n    return this.getFormData()?.[link]?.[parentId]?.[componentId];\n  }\n\n  public patchForm(parentName: string, groupName: string, formGroup: FormGroup) {\n    // A wrapper for the method from FormGroup. This allows us to have a globalForm with more depth.\n    // For instance, useful for changing antenna\n    const group =  this.globalForm.get(parentName);\n    if (group !== null) {\n      group.addControl(groupName, formGroup);\n      return;\n    }\n    this.logger.warn(\n      `${parentName} does not exist! Cannot attach antenna to it.`,\n    );\n  }\n\n  public importForm(results: any): void {\n    /* This function is called when importing a .json file. It updates the fields values. */\n\n    // #TODO: check file sanity (eg. sanitization)\n    // #TODO: Test\n    // #TODO We now need to make this more robust\n    // Changing global form\n    this.globalForm.patchValue(results.data);\n    this.title = results.metadata.title;\n  }\n\n  public getFormData$(): Observable {\n    return this.globalForm.valueChanges;\n  }\n\n  public getFormData(): any {\n    return this.globalForm.value; // The form updated at all times is used for the calculation\n  }\n\n  public initForms(): void {\n    // This function automatically generates the form to be sent to API even if some components haven't yet been instantiated\n    this.logger.warn('initializing Form Service');\n\n    this.template.template.components.forEach((componentTemplate: Form) => {\n      if (componentTemplate.componentId !== '') {\n        const fg = this.createFormGroup(componentTemplate);\n        if (componentTemplate.parentComponent) {\n          this.addForm(\n            fg,\n            componentTemplate.componentId,\n            componentTemplate.parentComponent,\n          );\n        } else {\n          this.addForm(fg, componentTemplate.componentId);\n        }\n      }\n    });\n    this._isInitialized = true;\n  }\n\n  public createFormGroup(componentTemplate: Form): FormGroup {\n    /**\n     * This function takes in a Form template and return a FormGroup of the corresponding component.\n     * This makes the conversion between angular reactive forms and our custom JSON templates for transmission chain parts.\n     */\n    const group: any = {};\n\n    componentTemplate.params.forEach((element: Field) => {\n      // The default value is 'undefined' if key not found in map\n      // Here we create FormControls for both the input and its unit\n      const inputControl = new FormControlWarn(element.default, {\n        validators: [\n          Validators.pattern('^[+-]?[0-9]+([,][0-9]+)*([.][0-9]+)?$'),\n        ],\n        updateOn: 'blur',\n      }); // , [Validators.required, Validators.maxLength(6)]); //FIXME: For testing purposes\n      // Updating on blur is less distracting, a good compromise\n      const unitControl = (element.units.length === 0)\n        ? new FormControl('', Validators.nullValidator)\n        : new FormControl(element.units[0], Validators.required);\n      // For units, we can assume they will be valid since the user is constrained in his choices\n      group[element.id] = new FormGroup(\n        {\n          // A group composed of both the field and its unit\n          value: inputControl,\n          unit: unitControl,\n        },\n        this.customValidators.fieldValidator,\n      );\n\n      if (element.alternative !== undefined) {\n        const subGroup = this.createFormGroup(element.alternative);\n        group[element.alternative.componentId] = subGroup;\n      }\n    });\n\n    return this.fb.group(group);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FormsTemplate.html":{"url":"classes/FormsTemplate.html","title":"class - FormsTemplate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FormsTemplate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                availableAntennas\n                            \n                            \n                                    Static\n                                DL_atmosphere\n                            \n                            \n                                    Static\n                                DL_carrier\n                            \n                            \n                                    Static\n                                DL_GS_rx_antenna\n                            \n                            \n                                    Static\n                                DL_receiver_GS\n                            \n                            \n                                    Static\n                                DL_SC_tx_antenna\n                            \n                            \n                                    Static\n                                DL_transmitter_SC\n                            \n                            \n                                    Static\n                                emptyForm\n                            \n                            \n                                    Static\n                                geometry\n                            \n                            \n                                    Static\n                                template\n                            \n                            \n                                    Static\n                                UL_atmosphere\n                            \n                            \n                                    Static\n                                UL_carrier\n                            \n                            \n                                    Static\n                                UL_GS_tx_antenna\n                            \n                            \n                                    Static\n                                UL_receiver_SC\n                            \n                            \n                                    Static\n                                UL_SC_rx_antenna\n                            \n                            \n                                    Static\n                                UL_transmitter_GS\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        availableAntennas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [Antennas.yagiAntenna, Antennas.helixAntenna]\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:486\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DL_atmosphere\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    // componentType:'path',\n    componentId: 'atmosphere',\n    parentComponent: 'downlink',\n    params: [\n      {\n        id: 'depointing_loss',\n        desc: 'Depointing Loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.9,\n      },\n      {\n        id: 'x_pol',\n        desc: 'Cross Polarization',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -3.0,\n      },\n      {\n        id: 'atm_gas',\n        desc: 'Atmosphere Gases',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -1.1,\n      },\n      {\n        id: 'ionospheric',\n        desc: 'Ionospheric losses',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.4,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:340\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DL_carrier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    // componentType: 'carrier',\n    componentId: 'carrier',\n    parentComponent: 'downlink',\n    params: [\n      {\n        id: 'frequency',\n        desc: 'Frequency',\n        units: ['MHz', 'kHz', 'Hz'],\n        /// /dimension: \"freq\",\n        default: 146,\n      },\n      {\n        id: 'bandwidth',\n        desc: 'Bandwidth',\n        units: ['Hz', 'kHz', 'MHz'],\n        /// /dimension: \"bandwidth\",\n        default: 3,\n      },\n      {\n        id: 'bit_rate',\n        desc: 'Bit Rate',\n        units: ['bps'],\n        /// /dimension: \"freq\",\n        default: 1200,\n      },\n      {\n        id: 'ebno_threshold',\n        desc: 'Eb/N0 Threshold',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 23.2,\n      },\n      {\n        id: 'impl_loss',\n        desc: 'Implementation Loss',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: -1,\n      },\n\n      {\n        id: 'system_margin',\n        desc: 'System Margin',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 10,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:375\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DL_GS_rx_antenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'receiver_antenna',\n    componentName: 'Groundstation Antenna',\n    parentComponent: 'downlink',\n    image: 'assets/antennas/yagi.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [{\n      id: 'antMaxGain',\n      desc: 'Max Gain',\n      units: ['dBi'],\n      // dimension:\"iso_gain\",\n      default: 14,\n    },\n    {\n      id: 'antBeamWidth',\n      desc: 'Beamwidth',\n      units: ['°', 'rad'],\n      // dimension:\"angle\",\n      default: 35,\n    },\n    // {\n    //   id: 'depointingAngle',\n    //   desc: 'Pointing Loss',\n    //   units: ['°', 'rad'],\n    //   // dimension:\"angle\",\n    //   default: 1,\n    // },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:425\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DL_receiver_GS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'receiver',\n    parentComponent: 'downlink',\n    hasAntenna: true,\n    params: [\n      {\n        id: 'rxAntennaTemp',\n        desc: 'Antenna Noise Temperature',\n        units: ['K', '°C'],\n        default: 230.4,\n      },\n      {\n        id: 'rxInlineLoss',\n        desc: 'Inline Losses',\n        units: ['dB'],\n        default: -0.87,\n      },\n      {\n        id: 'LNA_gain',\n        desc: 'LNA Gain',\n        units: ['dB', ''],\n        default: 20,\n      },\n      {\n        id: 'LNANoiseTemp',\n        desc: 'LNA Noise Temperature',\n        units: ['K', '°C'],\n        default: 66.78,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:455\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DL_SC_tx_antenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'transmitter_antenna',\n    componentName: 'Spacecraft Antenna',\n    parentComponent: 'downlink',\n    image: 'assets/AntennesTls.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [{\n      id: 'antMaxGain',\n      desc: 'Max Gain',\n      units: ['dBi'],\n      // dimension:\"iso_gain\",\n      default: 2.15,\n    },\n    {\n      id: 'antBeamWidth',\n      desc: 'Beamwidth',\n      units: ['°', 'rad'],\n      // dimension:\"angle\",\n      default: 138,\n    },\n    // {\n    //   id: 'depointingAngle',\n    //   desc: 'Pointing Loss',\n    //   units: ['°', 'rad'],\n    //   // dimension:\"angle\",\n    //   default: 0,\n    // },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:310\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        DL_transmitter_SC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'transmitter',\n    parentComponent: 'downlink',\n    hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'power',\n        desc: 'Transmitter Power',\n        units: ['dBW', 'W', 'dBm'],\n        /// /dimension: \"power\", //Adding the type property so we can handle validation appropriately\n        default: 10,\n      },\n      {\n        id: 'txCableLoss',\n        desc: 'Line Losses',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -4.5,\n      },\n      {\n        id: 'txConnectorLoss',\n        desc: 'Connector Losses',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -4.5,\n      },\n      {\n        id: 'txAntennaMismatch',\n        desc: 'Antenna Mismatch',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.5,\n      }],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:275\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        emptyForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n  // componentType: '',\n    componentId: 'empty',\n    parentComponent: 'uplink',\n    params: [],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        geometry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n  // componentType: \"geometry\",\n    componentId: 'geometry',\n    params: [\n      {\n        id: 'altitude',\n        desc: 'Altitude',\n        units: ['km', 'm'],\n        default: 650,\n      },\n      {\n        id: 'elevation',\n        desc: 'Elevation Angle',\n        units: ['°', 'rad'],\n        default: 10,\n      },\n      {\n        id: 'slantRange',\n        desc: 'Slant Range',\n        units: ['km', 'm'],\n        /// /dimension:\"length\",\n        default: 2045, // Switched to meters by default because this is what is used by LP and until we have units handled by API, this is simpler to handle it like that\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        template\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Template\n\n                    \n                \n                \n                    \n                        Default value : {\n    components: [\n      FormsTemplate.geometry,\n\n      FormsTemplate.UL_transmitter_GS,\n      FormsTemplate.UL_GS_tx_antenna,\n      FormsTemplate.UL_carrier,\n      FormsTemplate.UL_atmosphere,\n      FormsTemplate.UL_SC_rx_antenna,\n      FormsTemplate.UL_receiver_SC,\n\n      FormsTemplate.DL_transmitter_SC,\n      FormsTemplate.DL_SC_tx_antenna,\n      FormsTemplate.DL_atmosphere,\n      FormsTemplate.DL_carrier,\n      FormsTemplate.DL_GS_rx_antenna,\n      FormsTemplate.DL_receiver_GS,\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:488\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        UL_atmosphere\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    // componentType:'path',\n    componentId: 'atmosphere',\n    parentComponent: 'uplink',\n    params: [\n      {\n        id: 'depointing_loss',\n        desc: 'Depointing Loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.9,\n      },\n      {\n        id: 'x_pol',\n        desc: 'Cross Polarization',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -3.0,\n      },\n      {\n        id: 'atm_gas',\n        desc: 'Atmosphere Gases',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -1.1,\n      },\n      {\n        id: 'ionospheric',\n        desc: 'Ionospheric losses',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.4,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:195\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        UL_carrier\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n  // componentType: 'carrier',\n    componentId: 'carrier',\n    parentComponent: 'uplink',\n    params: [\n      {\n        id: 'frequency',\n        desc: 'Frequency',\n        units: ['MHz', 'kHz', 'Hz'],\n        /// /dimension: \"freq\",\n        default: 146,\n      },\n      {\n        id: 'bandwidth',\n        desc: 'Bandwidth',\n        units: ['Hz', 'kHz', 'MHz'],\n        /// /dimension: \"bandwidth\",\n        default: 3,\n      },\n      {\n        id: 'bit_rate',\n        desc: 'Bit Rate',\n        units: ['bps'],\n        /// /dimension: \"freq\",\n        default: 1200,\n      },\n      // Using the SNR method for now\n      // {\n      //   id: 'ber',\n      //   desc: 'BER',\n      //   units: [],\n      //   // dimension: \"ratio\",\n      //   default: 0.005,\n      // },\n      {\n        id: 'ebno_threshold',\n        desc: 'Eb/N0 Threshold',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 23.2,\n      },\n      {\n        id: 'impl_loss',\n        desc: 'Implementation Loss',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: -1,\n      },\n      {\n        id: 'system_margin',\n        desc: 'System Margin',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 10,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        UL_GS_tx_antenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'transmitter_antenna',\n    componentName: 'Groundstation Antenna',\n    parentComponent: 'uplink',\n    image: 'assets/AntennesTls.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [{\n      id: 'antMaxGain',\n      desc: 'Max Gain',\n      units: ['dBi'],\n      // dimension:\"iso_gain\",\n      default: 14,\n    },\n    {\n      id: 'antBeamWidth',\n      desc: 'Beamwidth',\n      units: ['°', 'rad'],\n      // dimension:\"angle\",\n      default: 35,\n    },\n    // {\n    //   id: 'depointingAngle',\n    //   desc: 'Pointing Loss',\n    //   units: ['°', 'rad'],\n    //   // dimension:\"angle\",\n    //   default: 1,\n    // },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:135\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        UL_receiver_SC\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'receiver',\n    parentComponent: 'uplink',\n    hasAntenna: true,\n    params: [\n      {\n        id: 'rxAntennaTemp',\n        desc: 'Antenna Noise Temperature',\n        units: ['K', '°C'],\n        default: 233.15,\n      },\n      {\n        id: 'rxInlineLoss',\n        desc: 'Inline Losses',\n        units: ['dB'],\n        default: 0,\n      },\n      {\n        id: 'LNA_gain',\n        desc: 'LNA Gain',\n        units: ['dB', ''],\n        default: 20,\n      },\n      {\n        id: 'LNANoiseTemp',\n        desc: 'LNA Noise Temperature',\n        units: ['K', '°C'],\n        default: 66.78,\n      },\n\n      // Useful to compute temperature from Noise Figure\n      // {\n      //   id: 'referenceTemperature',\n      //   desc: 'Reference Temperature',\n      //   units: ['K', '°C'],\n      //   default: 280,\n      // },\n      // { #TODO: Add to tests\n      //   id: 'no_units',\n      //   desc:'Value without units',\n      //   units: []\n      // }\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:231\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        UL_SC_rx_antenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'receiver_antenna',\n    componentName: 'Spacecraft Antenna',\n    parentComponent: 'uplink',\n    image: 'assets/antennas/yagi.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [{\n      id: 'antMaxGain',\n      desc: 'Max Gain',\n      units: ['dBi'],\n      // dimension:\"iso_gain\",\n      default: 2.15,\n    },\n    {\n      id: 'antBeamWidth',\n      desc: 'Beamwidth',\n      units: ['°', 'rad'],\n      // dimension:\"angle\",\n      default: 238,\n    },\n    // {\n    //   id: 'depointingAngle',\n    //   desc: 'Pointing Loss',\n    //   units: ['°', 'rad'],\n    //   // dimension:\"angle\",\n    //   default: 0,\n    // },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:165\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        UL_transmitter_GS\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : {\n    componentId: 'transmitter',\n    parentComponent: 'uplink',\n    hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'power',\n        desc: 'Transmitter Power',\n        units: ['dBW', 'W', 'dBm'],\n        /// /dimension: \"power\", //Adding the type property so we can handle validation appropriately\n        default: 10,\n      },\n      {\n        id: 'txCableLoss',\n        desc: 'Line Losses',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -2.79,\n      },\n      {\n        id: 'txConnectorLoss',\n        desc: 'Connector Losses',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -1.7,\n      },\n      {\n        id: 'txAntennaMismatch',\n        desc: 'Antenna Mismatch',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.5,\n      },\n    ],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts:99\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Antennas } from '../models/Antennas';\nimport { Form, Field, Template } from '../models/Form.model';\n\nexport abstract class FormsTemplate {\n// If the unit selector doesn't display the correct unit, make sure Formslabel and FormsData have the same units (eg. W =/= Watts)\n  static emptyForm : Form = {\n  // componentType: '',\n    componentId: 'empty',\n    parentComponent: 'uplink',\n    params: [],\n  };\n\n  static geometry : Form = {\n  // componentType: \"geometry\",\n    componentId: 'geometry',\n    params: [\n      {\n        id: 'altitude',\n        desc: 'Altitude',\n        units: ['km', 'm'],\n        default: 650,\n      },\n      {\n        id: 'elevation',\n        desc: 'Elevation Angle',\n        units: ['°', 'rad'],\n        default: 10,\n      },\n      {\n        id: 'slantRange',\n        desc: 'Slant Range',\n        units: ['km', 'm'],\n        /// /dimension:\"length\",\n        default: 2045, // Switched to meters by default because this is what is used by LP and until we have units handled by API, this is simpler to handle it like that\n      },\n    ],\n  };\n\n  static UL_carrier: Form = {\n  // componentType: 'carrier',\n    componentId: 'carrier',\n    parentComponent: 'uplink',\n    params: [\n      {\n        id: 'frequency',\n        desc: 'Frequency',\n        units: ['MHz', 'kHz', 'Hz'],\n        /// /dimension: \"freq\",\n        default: 146,\n      },\n      {\n        id: 'bandwidth',\n        desc: 'Bandwidth',\n        units: ['Hz', 'kHz', 'MHz'],\n        /// /dimension: \"bandwidth\",\n        default: 3,\n      },\n      {\n        id: 'bit_rate',\n        desc: 'Bit Rate',\n        units: ['bps'],\n        /// /dimension: \"freq\",\n        default: 1200,\n      },\n      // Using the SNR method for now\n      // {\n      //   id: 'ber',\n      //   desc: 'BER',\n      //   units: [],\n      //   // dimension: \"ratio\",\n      //   default: 0.005,\n      // },\n      {\n        id: 'ebno_threshold',\n        desc: 'Eb/N0 Threshold',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 23.2,\n      },\n      {\n        id: 'impl_loss',\n        desc: 'Implementation Loss',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: -1,\n      },\n      {\n        id: 'system_margin',\n        desc: 'System Margin',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 10,\n      },\n    ],\n  };\n\n  static UL_transmitter_GS: Form = {\n    componentId: 'transmitter',\n    parentComponent: 'uplink',\n    hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'power',\n        desc: 'Transmitter Power',\n        units: ['dBW', 'W', 'dBm'],\n        /// /dimension: \"power\", //Adding the type property so we can handle validation appropriately\n        default: 10,\n      },\n      {\n        id: 'txCableLoss',\n        desc: 'Line Losses',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -2.79,\n      },\n      {\n        id: 'txConnectorLoss',\n        desc: 'Connector Losses',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -1.7,\n      },\n      {\n        id: 'txAntennaMismatch',\n        desc: 'Antenna Mismatch',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.5,\n      },\n    ],\n  };\n  static UL_GS_tx_antenna: Form = {\n    componentId: 'transmitter_antenna',\n    componentName: 'Groundstation Antenna',\n    parentComponent: 'uplink',\n    image: 'assets/AntennesTls.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [{\n      id: 'antMaxGain',\n      desc: 'Max Gain',\n      units: ['dBi'],\n      // dimension:\"iso_gain\",\n      default: 14,\n    },\n    {\n      id: 'antBeamWidth',\n      desc: 'Beamwidth',\n      units: ['°', 'rad'],\n      // dimension:\"angle\",\n      default: 35,\n    },\n    // {\n    //   id: 'depointingAngle',\n    //   desc: 'Pointing Loss',\n    //   units: ['°', 'rad'],\n    //   // dimension:\"angle\",\n    //   default: 1,\n    // },\n    ],\n  };\n  static UL_SC_rx_antenna: Form = {\n    componentId: 'receiver_antenna',\n    componentName: 'Spacecraft Antenna',\n    parentComponent: 'uplink',\n    image: 'assets/antennas/yagi.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [{\n      id: 'antMaxGain',\n      desc: 'Max Gain',\n      units: ['dBi'],\n      // dimension:\"iso_gain\",\n      default: 2.15,\n    },\n    {\n      id: 'antBeamWidth',\n      desc: 'Beamwidth',\n      units: ['°', 'rad'],\n      // dimension:\"angle\",\n      default: 238,\n    },\n    // {\n    //   id: 'depointingAngle',\n    //   desc: 'Pointing Loss',\n    //   units: ['°', 'rad'],\n    //   // dimension:\"angle\",\n    //   default: 0,\n    // },\n    ],\n  };\n  static UL_atmosphere : Form = {\n    // componentType:'path',\n    componentId: 'atmosphere',\n    parentComponent: 'uplink',\n    params: [\n      {\n        id: 'depointing_loss',\n        desc: 'Depointing Loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.9,\n      },\n      {\n        id: 'x_pol',\n        desc: 'Cross Polarization',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -3.0,\n      },\n      {\n        id: 'atm_gas',\n        desc: 'Atmosphere Gases',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -1.1,\n      },\n      {\n        id: 'ionospheric',\n        desc: 'Ionospheric losses',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.4,\n      },\n    ],\n  };\n\n  static UL_receiver_SC: Form = {\n    componentId: 'receiver',\n    parentComponent: 'uplink',\n    hasAntenna: true,\n    params: [\n      {\n        id: 'rxAntennaTemp',\n        desc: 'Antenna Noise Temperature',\n        units: ['K', '°C'],\n        default: 233.15,\n      },\n      {\n        id: 'rxInlineLoss',\n        desc: 'Inline Losses',\n        units: ['dB'],\n        default: 0,\n      },\n      {\n        id: 'LNA_gain',\n        desc: 'LNA Gain',\n        units: ['dB', ''],\n        default: 20,\n      },\n      {\n        id: 'LNANoiseTemp',\n        desc: 'LNA Noise Temperature',\n        units: ['K', '°C'],\n        default: 66.78,\n      },\n\n      // Useful to compute temperature from Noise Figure\n      // {\n      //   id: 'referenceTemperature',\n      //   desc: 'Reference Temperature',\n      //   units: ['K', '°C'],\n      //   default: 280,\n      // },\n      // { #TODO: Add to tests\n      //   id: 'no_units',\n      //   desc:'Value without units',\n      //   units: []\n      // }\n    ],\n  };\n  static DL_transmitter_SC: Form = {\n    componentId: 'transmitter',\n    parentComponent: 'downlink',\n    hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [\n      {\n        id: 'power',\n        desc: 'Transmitter Power',\n        units: ['dBW', 'W', 'dBm'],\n        /// /dimension: \"power\", //Adding the type property so we can handle validation appropriately\n        default: 10,\n      },\n      {\n        id: 'txCableLoss',\n        desc: 'Line Losses',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -4.5,\n      },\n      {\n        id: 'txConnectorLoss',\n        desc: 'Connector Losses',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -4.5,\n      },\n      {\n        id: 'txAntennaMismatch',\n        desc: 'Antenna Mismatch',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.5,\n      }],\n  };\n  static DL_SC_tx_antenna: Form = {\n    componentId: 'transmitter_antenna',\n    componentName: 'Spacecraft Antenna',\n    parentComponent: 'downlink',\n    image: 'assets/AntennesTls.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [{\n      id: 'antMaxGain',\n      desc: 'Max Gain',\n      units: ['dBi'],\n      // dimension:\"iso_gain\",\n      default: 2.15,\n    },\n    {\n      id: 'antBeamWidth',\n      desc: 'Beamwidth',\n      units: ['°', 'rad'],\n      // dimension:\"angle\",\n      default: 138,\n    },\n    // {\n    //   id: 'depointingAngle',\n    //   desc: 'Pointing Loss',\n    //   units: ['°', 'rad'],\n    //   // dimension:\"angle\",\n    //   default: 0,\n    // },\n    ],\n  };\n  static DL_atmosphere : Form = {\n    // componentType:'path',\n    componentId: 'atmosphere',\n    parentComponent: 'downlink',\n    params: [\n      {\n        id: 'depointing_loss',\n        desc: 'Depointing Loss',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.9,\n      },\n      {\n        id: 'x_pol',\n        desc: 'Cross Polarization',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -3.0,\n      },\n      {\n        id: 'atm_gas',\n        desc: 'Atmosphere Gases',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -1.1,\n      },\n      {\n        id: 'ionospheric',\n        desc: 'Ionospheric losses',\n        units: ['dB'],\n        /// /dimension: \"loss\",\n        default: -0.4,\n      },\n    ],\n  };\n  static DL_carrier: Form = {\n    // componentType: 'carrier',\n    componentId: 'carrier',\n    parentComponent: 'downlink',\n    params: [\n      {\n        id: 'frequency',\n        desc: 'Frequency',\n        units: ['MHz', 'kHz', 'Hz'],\n        /// /dimension: \"freq\",\n        default: 146,\n      },\n      {\n        id: 'bandwidth',\n        desc: 'Bandwidth',\n        units: ['Hz', 'kHz', 'MHz'],\n        /// /dimension: \"bandwidth\",\n        default: 3,\n      },\n      {\n        id: 'bit_rate',\n        desc: 'Bit Rate',\n        units: ['bps'],\n        /// /dimension: \"freq\",\n        default: 1200,\n      },\n      {\n        id: 'ebno_threshold',\n        desc: 'Eb/N0 Threshold',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 23.2,\n      },\n      {\n        id: 'impl_loss',\n        desc: 'Implementation Loss',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: -1,\n      },\n\n      {\n        id: 'system_margin',\n        desc: 'System Margin',\n        units: ['dB'],\n        /// /dimension: \"adimensional\",\n        default: 10,\n      },\n    ],\n  };\n  static DL_GS_rx_antenna: Form = {\n    componentId: 'receiver_antenna',\n    componentName: 'Groundstation Antenna',\n    parentComponent: 'downlink',\n    image: 'assets/antennas/yagi.jpg',\n    // hasAntenna: true,\n    // componentType: 'transmitter',\n    params: [{\n      id: 'antMaxGain',\n      desc: 'Max Gain',\n      units: ['dBi'],\n      // dimension:\"iso_gain\",\n      default: 14,\n    },\n    {\n      id: 'antBeamWidth',\n      desc: 'Beamwidth',\n      units: ['°', 'rad'],\n      // dimension:\"angle\",\n      default: 35,\n    },\n    // {\n    //   id: 'depointingAngle',\n    //   desc: 'Pointing Loss',\n    //   units: ['°', 'rad'],\n    //   // dimension:\"angle\",\n    //   default: 1,\n    // },\n    ],\n  };\n  static DL_receiver_GS: Form = {\n    componentId: 'receiver',\n    parentComponent: 'downlink',\n    hasAntenna: true,\n    params: [\n      {\n        id: 'rxAntennaTemp',\n        desc: 'Antenna Noise Temperature',\n        units: ['K', '°C'],\n        default: 230.4,\n      },\n      {\n        id: 'rxInlineLoss',\n        desc: 'Inline Losses',\n        units: ['dB'],\n        default: -0.87,\n      },\n      {\n        id: 'LNA_gain',\n        desc: 'LNA Gain',\n        units: ['dB', ''],\n        default: 20,\n      },\n      {\n        id: 'LNANoiseTemp',\n        desc: 'LNA Noise Temperature',\n        units: ['K', '°C'],\n        default: 66.78,\n      },\n    ],\n  };\n  static availableAntennas = [Antennas.yagiAntenna, Antennas.helixAntenna];\n\n  static template: Template = {\n    components: [\n      FormsTemplate.geometry,\n\n      FormsTemplate.UL_transmitter_GS,\n      FormsTemplate.UL_GS_tx_antenna,\n      FormsTemplate.UL_carrier,\n      FormsTemplate.UL_atmosphere,\n      FormsTemplate.UL_SC_rx_antenna,\n      FormsTemplate.UL_receiver_SC,\n\n      FormsTemplate.DL_transmitter_SC,\n      FormsTemplate.DL_SC_tx_antenna,\n      FormsTemplate.DL_atmosphere,\n      FormsTemplate.DL_carrier,\n      FormsTemplate.DL_GS_rx_antenna,\n      FormsTemplate.DL_receiver_GS,\n    ],\n  };\n  // static transmitter_GS: Form;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/HelperFunctions.html":{"url":"classes/HelperFunctions.html","title":"class - HelperFunctions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  HelperFunctions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/helper-functions.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                distance\n                            \n                            \n                                    Static\n                                earthMu\n                            \n                            \n                                    Static\n                                earthRadius\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                altitudeFromSrElev\n                            \n                            \n                                    Static\n                                convertDistance\n                            \n                            \n                                    Static\n                                convertTLEtoKeplearian\n                            \n                            \n                                    Static\n                                slantRangeFromAltElev\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        distance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n    km: 10e3,\n    // cm: 10e-2,\n    m: 1,\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/helper-functions.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        earthMu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 3.986004418 * (10 ** 14)\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/helper-functions.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        earthRadius\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 6378.137\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/helper-functions.ts:6\n                        \n                    \n\n            \n                \n                    This class contains physics-related functions.\n\n                \n            \n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        altitudeFromSrElev\n                        \n                    \n                \n            \n            \n                \n                    \n                    altitudeFromSrElev(sr: number, elevation: number, stationAltitude: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/helper-functions.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    sr\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    elevation\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    stationAltitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        convertDistance\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertDistance(value: number, from: string, to: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/helper-functions.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    from\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        convertTLEtoKeplearian\n                        \n                    \n                \n            \n            \n                \n                    \n                    convertTLEtoKeplearian(tle1: string, tle2: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/helper-functions.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    tle1\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    tle2\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { ecc: number; sma: number; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        slantRangeFromAltElev\n                        \n                    \n                \n            \n            \n                \n                    \n                    slantRangeFromAltElev(altitude: number, elevation: number, stationAltitude: number, precisionDecimals: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/helper-functions.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    altitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    elevation\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    stationAltitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    precisionDecimals\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export class HelperFunctions {\n  /**\n   * This class contains physics-related functions.\n   */\n\n  static earthRadius: number = 6378.137; // in km, at the equator\n  static earthMu: number = 3.986004418 * (10 ** 14);\n  static distance: any =\n  {\n    km: 10e3,\n    // cm: 10e-2,\n    m: 1,\n  };\n\n  public static convertDistance(value: number, from: string, to: string) {\n    return value * (this.distance[from] / this.distance[to]);\n  }\n  // public static convertAngle(value: number, from: string, to: string) {\n  //   return value * (this.distance[from] / this.distance[to]);\n  // }\n  public static slantRangeFromAltElev(altitude: number, elevation: number, stationAltitude: number = 0, precisionDecimals = 0): number {\n    /* Computes the slant range from the altitude and the elevation\n    * The altitude is in kilometer and the delta angle in degrees,\n    * stationAltitude from sea level in meters\n    * precisionDecimals is the number of decimals you want to round to\n    * */\n    if (!(altitude && elevation)) {\n      console.error('Warning', 'Tried to compute slant range with invalid values');\n      console.debug(`altitude: ${altitude}, elevation: ${elevation}`)\n      return 0;\n    }\n    const factor = 10 ** precisionDecimals;\n    const delta = elevation * (Math.PI / 180);\n    return Math.round(this.earthRadius * (\n      Math.sqrt(((altitude + this.earthRadius) / this.earthRadius) ** 2\n        - Math.cos(delta) ** 2)\n        - Math.sin(delta)) * factor) / factor;\n  }\n\n  public static altitudeFromSrElev(sr: number, elevation: number, stationAltitude: number = 0): number {\n    /**\n     * Computes the slant range from the altitude and the elevation\n     * The altitude is in kilometer and the delta angle in degrees, stationAltitude from sea level in meters\n    */\n    const delta = elevation * (Math.PI / 180);\n    return this.earthRadius * Math.sqrt((sr / this.earthRadius + Math.sin(delta)) ** 2 + Math.cos(delta) ** 2);\n  }\n\n  public static convertTLEtoKeplearian(tle1: string, tle2: string) {\n    // See https://blog.hardinglabs.com/tle-to-kep.html\n    // These manual calculations might be lacking precision. If that's an issued, switch to sgp4\n    // console.log(tle1);\n    // console.log(tle2.split(''));\n    const ecc = parseFloat(`0.${tle2.substring(26, 33)}`) / 10;\n    // console.log(ecc);\n\n    const n = parseFloat(tle2.substring(52, 63)) * ((2 * Math.PI) / (3600 * 24)); // Mean motion converted to rad/s\n    // console.log(tle2.substring(52, 63));\n    const sma = (this.earthMu / (n ** 2)) ** (1 / 3) / 1000;\n    return { ecc, sma };\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JSatOrbLinkComponent.html":{"url":"components/JSatOrbLinkComponent.html","title":"component - JSatOrbLinkComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  JSatOrbLinkComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-luplink-jsatorb-import\n            \n\n            \n                styleUrls\n                ./luplink-jsatorb-import.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./luplink-jsatorb-import.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                importForm\n                            \n                            \n                                    Public\n                                isEmpty\n                            \n                            \n                                    Public\n                                jsoData\n                            \n                            \n                                    Public\n                                linkService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                importJSO\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(linkService: JSatOrbLinkService, logger: LoggerService, loadService: SaveLoadService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        linkService\n                                                  \n                                                        \n                                                                        JSatOrbLinkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadService\n                                                  \n                                                        \n                                                                        SaveLoadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        importJSO\n                        \n                    \n                \n            \n            \n                \nimportJSO()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        importForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    satellite: new FormControl(),\n    station: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isEmpty\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        jsoData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        linkService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         JSatOrbLinkService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { SaveLoadService } from '../services/save-load.service';\nimport { LoggerService } from '../shared/logger/logger.service';\nimport { JSatOrbLinkService } from './jsatorb-link.service';\n\n@Component({\n  selector: 'lib-luplink-jsatorb-import',\n  templateUrl: './luplink-jsatorb-import.component.html',\n  styleUrls: ['./luplink-jsatorb-import.component.scss']\n})\nexport class JSatOrbLinkComponent implements OnInit {\n\n  constructor(public linkService: JSatOrbLinkService, private logger: LoggerService, private loadService:SaveLoadService) { }\n  public jsoData: any;\n  public isEmpty: boolean = false;\n\n  importForm = new FormGroup({\n    satellite: new FormControl(),\n    station: new FormControl(),\n  });\n\n  ngOnInit(): void {\n    this.jsoData = this.linkService.getJSOData()\n\n    if (this.jsoData.satellites.length === 0 && this.jsoData.groundStations.length === 0) {\n      this.isEmpty = true;\n    }\n\n    this.importForm.patchValue({\n      satellite: this.jsoData.satellites[0], //MIGHT CRASH IF EMPTY\n      station: this.jsoData.groundStations[0]\n    })\n\n    this.logger.debug(this.jsoData);\n  }\n\n  importJSO() {\n    this.loadService.importJSOData(\n      this.jsoData.title, \n      this.importForm.controls['satellite'].value, \n      this.importForm.controls['station'].value\n      );\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n                Satellite:\n                \n                    \n                        {{satellite.name}}\n                    \n                \n            \n            \n                Station:\n                \n                    \n                        {{station.name}}\n                    \n                \n            \n         \n    \n    \n        \n            \n        \n        \n            \n                Load\n            \n        \n    \n\n\n    It seems no scenario has been imported inside JSatOrb.Luplink won't be able to import data from JSatOrb.\n\nLoad -->\n{{this.linkService.getJSOData() | json }} -->\n\n\n    \n\n    \n                \n                    ./luplink-jsatorb-import.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Satellite:                                                            {{satellite.name}}                                                                            Station:                                                            {{station.name}}                                                                                                                                 Load                            It seems no scenario has been imported inside JSatOrb.Luplink won\\'t be able to import data from JSatOrb.Load -->{{this.linkService.getJSOData() | json }} -->'\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JSatOrbLinkComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JSatOrbLinkService.html":{"url":"injectables/JSatOrbLinkService.html","title":"injectable - JSatOrbLinkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JSatOrbLinkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                jsoData\n                            \n                            \n                                    Private\n                                jsoMockData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getJSOData\n                            \n                            \n                                updateJSOData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loadService: SaveLoadService, environment: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:44\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadService\n                                                  \n                                                        \n                                                                        SaveLoadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getJSOData\n                        \n                    \n                \n            \n            \n                \ngetJSOData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     literal type | null\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateJSOData\n                        \n                    \n                \n            \n            \n                \nupdateJSOData(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsoData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        jsoMockData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    \"header\": {\n      \"mission\": \"Default-mission\",\n      \"celestialBody\": \"EARTH\",\n      \"timeStart\": \"2021-07-22T01:53:36\",\n      \"timeEnd\": \"2021-07-23T01:53:41\",\n      \"step\": \"600\"\n    },\n    \"satellites\": [\n      {\n        \"name\": \"CALSPHERE 4A\",\n        \"type\": \"tle\",\n        \"line1\": \"1 01520U 65065H   21200.78530898  .00000048  00000-0  74357-4 0  9995\",\n        \"line2\": \"2 01520  90.0154 130.0589 0071394 120.1784 294.1357 13.35847446723246\"\n      },\n      {\n        \"name\": \"CALSPHERE 2\",\n        \"type\": \"tle\",\n        \"line1\": \"1 00902U 64063E   21200.88552299  .00000048  00000-0  58478-4 0  9991\",\n        \"line2\": \"2 00902  90.1726  37.8678 0019554  38.2840  29.0114 13.52697507613817\"\n      }\n    ],\n    \"constellations\": [],\n    \"groundStations\": [\n      {\n        \"name\": \"aaa\",\n        \"latitude\": \"1\",\n        \"longitude\": \"1\",\n        \"altitude\": \"1\",\n        \"elevation\": \"1\"\n      }\n    ],\n    \"options\": {}\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { SaveLoadService } from '../services/save-load.service';\nimport { ENVIRONMENT_TOKEN } from '../shared/dependencies';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JSatOrbLinkService {\n\n  private jsoMockData = {\n    \"header\": {\n      \"mission\": \"Default-mission\",\n      \"celestialBody\": \"EARTH\",\n      \"timeStart\": \"2021-07-22T01:53:36\",\n      \"timeEnd\": \"2021-07-23T01:53:41\",\n      \"step\": \"600\"\n    },\n    \"satellites\": [\n      {\n        \"name\": \"CALSPHERE 4A\",\n        \"type\": \"tle\",\n        \"line1\": \"1 01520U 65065H   21200.78530898  .00000048  00000-0  74357-4 0  9995\",\n        \"line2\": \"2 01520  90.0154 130.0589 0071394 120.1784 294.1357 13.35847446723246\"\n      },\n      {\n        \"name\": \"CALSPHERE 2\",\n        \"type\": \"tle\",\n        \"line1\": \"1 00902U 64063E   21200.88552299  .00000048  00000-0  58478-4 0  9991\",\n        \"line2\": \"2 00902  90.1726  37.8678 0019554  38.2840  29.0114 13.52697507613817\"\n      }\n    ],\n    \"constellations\": [],\n    \"groundStations\": [\n      {\n        \"name\": \"aaa\",\n        \"latitude\": \"1\",\n        \"longitude\": \"1\",\n        \"altitude\": \"1\",\n        \"elevation\": \"1\"\n      }\n    ],\n    \"options\": {}\n  }\n  private jsoData: any;\n\n  constructor(private loadService: SaveLoadService, @Inject(ENVIRONMENT_TOKEN) private environment: any,) { \n    this.jsoData = this.environment.debugMode ? this.jsoMockData : {};  //= this.jsoMockData; //{};\n  }\n\n  updateJSOData(data: any): void {\n    this.jsoData = data;\n  }\n\n  getJSOData(): { title: string, satellites:any, groundStations:any } | null {\n    console.log(this.jsoData);\n    console.log(this.environment.debugMode);\n    return this.loadService.parseJSOData(this.jsoData);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LayoutComponent.html":{"url":"components/LayoutComponent.html","title":"component - LayoutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LayoutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-layout\n            \n\n            \n                styleUrls\n                ./layout.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./layout.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                antennaName\n                            \n                            \n                                    Public\n                                atmosphere\n                            \n                            \n                                    Public\n                                componentId\n                            \n                            \n                                    Public\n                                componentName\n                            \n                            \n                                    Public\n                                currentAntenna\n                            \n                            \n                                    Public\n                                currentStep\n                            \n                            \n                                    Public\n                                currentTemplate\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                formValidity\n                            \n                            \n                                    Public\n                                hasAntennaCard\n                            \n                            \n                                    Public\n                                hasAtmCard\n                            \n                            \n                                    Private\n                                inventory\n                            \n                            \n                                    Public\n                                isStandalone\n                            \n                            \n                                    Public\n                                logger\n                            \n                            \n                                    Public\n                                pageValidity\n                            \n                            \n                                    Public\n                                templates\n                            \n                            \n                                    Public\n                                validity\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                handleError\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                refreshPageValidity\n                            \n                            \n                                    Public\n                                updateStepsValidity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: any, FormsTemplate: any, formService: FormService, route: ActivatedRoute, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        FormsTemplate\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleError(event: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:137\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        refreshPageValidity\n                        \n                    \n                \n            \n            \n                \n                    \n                    refreshPageValidity(pageId: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        updateStepsValidity\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateStepsValidity(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        antennaName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:89\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        atmosphere\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : this.FormsTemplate.UL_atmosphere\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        componentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'geometry'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        componentName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Geometry'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:82\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentAntenna\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : Antennas.genericAntenna\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:87\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentStep\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'geometry'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentTemplate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Form\n\n                    \n                \n                \n                    \n                        Default value : this.FormsTemplate.geometry\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formValidity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:79\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasAntennaCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:90\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasAtmCard\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:91\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        inventory\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    geometry: ['geometry'],\n    uplink: ['ULCarrier', 'ULTransmitter', 'ULReceiver'],\n    downlink: ['DLCarrier', 'DLTransmitter', 'DLReceiver'],\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isStandalone\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggerService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pageValidity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        templates\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:92\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        validity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts:76\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component, Inject, Input, OnInit,\n} from '@angular/core';\nimport { FormService } from '../../form/form.service';\nimport { Form } from '../../shared/models/Form.model'\nimport { ActivatedRoute } from '@angular/router';\nimport { Antennas } from '../../shared/models/Antennas';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { ENVIRONMENT_TOKEN, FORM_TEMPLATE_TOKEN } from '../../shared/dependencies';\n\n@Component({\n  selector: 'lib-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.scss'],\n})\nexport class LayoutComponent implements OnInit {\n  public isStandalone: boolean = false;\n  constructor(@Inject(ENVIRONMENT_TOKEN) private environment: any, @Inject(FORM_TEMPLATE_TOKEN) private FormsTemplate: any, public formService: FormService, private route: ActivatedRoute, public logger: LoggerService) {\n    this.isStandalone = this.environment.isStandalone; //Used to know if app is standalone\n    // FIXME: Move elsewhere with models\n    // This links each page to its components and its \n    this.templates = {\n      geometry: {\n        name: 'Geometry',\n        step: 'geometry',\n        form: FormsTemplate.geometry,\n      },\n      ULCarrier: {\n        name: 'Uplink Carrier',\n        step: 'uplink',\n        form: FormsTemplate.UL_carrier,\n        atm: FormsTemplate.UL_atmosphere,\n      },\n      ULTransmitter: {\n        name: 'Groundstation Transmitter',\n        step: 'uplink',\n        form: FormsTemplate.UL_transmitter_GS,\n        antenna: FormsTemplate.UL_GS_tx_antenna,\n      },\n      ULReceiver: {\n        name: 'Spacecraft Receiver',\n        step: 'uplink',\n        form: FormsTemplate.UL_receiver_SC,\n        antenna: FormsTemplate.UL_SC_rx_antenna,\n      },\n      DLCarrier: {\n        name: 'Uplink Carrier',\n        step: 'downlink',\n        form: FormsTemplate.DL_carrier,\n        atm: FormsTemplate.DL_atmosphere,\n      },\n      DLTransmitter: {\n        name: 'Groundstation Transmitter',\n        step: 'downlink',\n        form: FormsTemplate.DL_transmitter_SC,\n        antenna: FormsTemplate.DL_SC_tx_antenna,\n      },\n      DLReceiver: {\n        name: 'Spacecraft Receiver',\n        step: 'downlink',\n        form: FormsTemplate.DL_receiver_GS,\n        antenna: FormsTemplate.DL_GS_rx_antenna,\n      },\n    };\n  }\n  /* Inventory gives access to neighbor for each step,\n  useful when one of the page is updated and we want to\n  know if step is complete : page -> step -> neighbors */\n  private inventory : { [key: string] : string[] } = {\n    geometry: ['geometry'],\n    uplink: ['ULCarrier', 'ULTransmitter', 'ULReceiver'],\n    downlink: ['DLCarrier', 'DLTransmitter', 'DLReceiver'],\n  };\n\n  public validity:any = {};\n\n  // Both are public for testing purposes\n  public formValidity: any = {};\n  public pageValidity: any = {};\n\n  public componentName: string = 'Geometry';\n  public componentId: string = 'geometry';\n  public currentStep: string = 'geometry';\n\n  public currentTemplate: Form = this.FormsTemplate.geometry;\n  public currentAntenna: Form = Antennas.genericAntenna;\n  public atmosphere: Form = this.FormsTemplate.UL_atmosphere;\n  public antennaName: string = '';\n  public hasAntennaCard: boolean = false;\n  public hasAtmCard: boolean = false;\n  public templates: { [key: string]: { name: string, step: string, form: Form, atm?: Form, antenna?: Form } } = {};\n\n  ngOnInit(): void {\n    this.validity.steps = {\n      geometry: 'none',\n      uplink: 'none',\n      downlink: 'none',\n      results: 'none',\n    };\n\n    Object.entries(this.templates).forEach(([pageKey, pageValue]) => {\n      this.pageValidity[pageKey] = {};\n      this.formValidity[pageKey] = {};\n      Object.entries(pageValue).forEach(([key, value]) => {\n        if (key !== 'step' && key !== 'name') {\n          const v = value;\n          this.pageValidity[pageKey][v.componentId] = 'unvisited';\n        }\n      });\n    });\n\n    this.route.queryParams\n      .subscribe((params) => {\n        if (params.component) {\n          this.componentId = params.component;\n        }\n        const currentComponentTemplate = this.templates[this.componentId];\n        if (currentComponentTemplate) {\n          this.currentStep = currentComponentTemplate.step;\n          this.componentName = currentComponentTemplate.name;\n          this.currentTemplate = currentComponentTemplate.form;\n          this.hasAntennaCard = false;\n          this.hasAtmCard = false;\n          if (currentComponentTemplate.antenna) {\n            this.currentAntenna = currentComponentTemplate.antenna;\n            this.antennaName = this.currentAntenna.componentName || 'Antenna';\n            this.hasAntennaCard = true;\n          }\n          if (currentComponentTemplate.atm) { this.atmosphere = currentComponentTemplate.atm; this.hasAtmCard = true; }\n        } else {\n          this.logger.debug('The selected template doesn\\'t exist, please check the variable name used');\n        }\n      });\n  }\n\n  public handleError(event: { id: string, validity: 'valid' | 'invalid' | 'none' }) {\n    if (event.id !== \"\" && this.componentId) {\n      // this.logger.error(event.id, event.validity);\n      this.pageValidity[this.componentId][event.id] = event.validity;\n      this.refreshPageValidity(this.componentId);\n      this.updateStepsValidity(this.componentId);\n    }\n  }\n\n  public refreshPageValidity(pageId: string) {\n    /**\n     * This function updates the validity of a page based on its internal 'formFragments' validities.\n     * Once again, the dependency is the following :\n     * \"Step/Groups validity\" --> \"Pages validity\" --> \"FormFragments validity\"\n     * ex: Uplink validity --> Carrier, Transmitter, Receiver validities --> Carrier, Environment, Rx Antenna, ... validities\n     *\n     * This function could be tidied up. At least it is tested.\n     */\n    let valid = 'none';\n    if (Object.values(this.pageValidity[pageId]).includes('invalid')) valid = 'invalid';\n    if (Object.values(this.pageValidity[pageId]).every((item) => item === 'valid')) valid = 'valid';\n    this.formValidity[pageId] = valid;\n    if (!valid) this.logger.error(pageId);\n  }\n\n  public updateStepsValidity(id: string) {\n    const { step } = this.templates[this.componentId];\n    let valid: boolean = true;\n    let unvisited: boolean = false;\n    let validity: string = 'valid';\n\n    // this.logger.warn('validity', this.formValidity);\n    this.inventory[step].forEach((neighbor) => {\n      if (this.formValidity[neighbor] === 'invalid') {\n        this.logger.error('invalid neighbor', neighbor);\n        valid = false;\n      }\n      if (!this.formValidity[neighbor]) {\n        unvisited = true;\n      }\n    });\n    if (!valid) validity = 'invalid';\n    if (unvisited) validity = 'unvisited';\n    this.validity.steps[step] = validity;\n\n    // this.logger.warn('Current steps validity', this.validity.steps);\n  }\n}\n\n    \n\n    \n        \n  \n  \n   \n    \n\n    \n\n      \n        \n          \n            \n          \n          \n            \n          \n          \n            \n          \n        \n        \n          \n            \n          \n          \n            \n          \n        \n      \n      \n        \n      \n    \n  \n  \n  \n    \n    \n    \n  \n  \n    {{ formService.globalForm.value | json }}\n  \n\n\n\n\n  \n -->\n\n    \n\n    \n                \n                    ./layout.component.scss\n                \n                \n.subform {\n  min-width:250px;//Not working\n  max-width:900px;\n\n}\n\n.container {\n  width: 80%;\n  margin: 25px;\n}\n\n.progressbar {\n  counter-reset: step;\n}\n\n.progressbar li {\n  list-style-type: none;\n  width: 25%;\n  float: left;\n  font-size:12px;\n  position: relative;\n  text-align:center;\n  text-transform: uppercase;\n}\n.progressbar li:before {\n  width: 30px;\n  height: 30px;\n  content: counter(step);\n  counter-increment: step;\n  line-height: 30px;\n  border: 2px solid #7d7d7d;\n  display: block;\n  text-align: center;\n  margin: 0 auto 10px auto;\n  border-radius: 50%;\n  background-color: white;\n}\n.progressbar li:after {\n  width: 100%;\n  height: 2px;\n  content: '';\n  position: absolute;\n  background-color: #7d7d7d;\n  top: 15px;\n  left: -50%;\n  z-index: -1;\n}\n.progressbar li:first-child:after {\n  content: none;\n}\n.progressbar li.active {\n  color: green;\n}\n.progressbar li.active:before {\n  border-color: #55b776;\n}\n.progressbar li.active + li:after {\n  background-color: #55b776;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                                             {{ formService.globalForm.value | json }}     -->'\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LayoutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LayoutModule.html":{"url":"modules/LayoutModule.html","title":"module - LayoutModule","body":"\n                   \n\n\n\n\n    Modules\n    LayoutModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_imports\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_providers\n\n\n\ncluster_LayoutModule_exports\n\n\n\n\nJSatOrbLinkComponent\n\nJSatOrbLinkComponent\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nJSatOrbLinkComponent->LayoutModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nLayoutModule -->\n\nLayoutComponent->LayoutModule\n\n\n\n\n\nViewComponent\n\nViewComponent\n\nLayoutModule -->\n\nViewComponent->LayoutModule\n\n\n\n\n\nJSatOrbLinkComponent \n\nJSatOrbLinkComponent \n\nJSatOrbLinkComponent  -->\n\nLayoutModule->JSatOrbLinkComponent \n\n\n\n\n\nLayoutComponent \n\nLayoutComponent \n\nLayoutComponent  -->\n\nLayoutModule->LayoutComponent \n\n\n\n\n\nViewComponent \n\nViewComponent \n\nViewComponent  -->\n\nLayoutModule->ViewComponent \n\n\n\n\n\nCardModule\n\nCardModule\n\nLayoutModule -->\n\nCardModule->LayoutModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nLayoutModule -->\n\nFormModule->LayoutModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nLayoutModule -->\n\nLoggerModule->LayoutModule\n\n\n\n\n\nNavigationSidebarModule\n\nNavigationSidebarModule\n\nLayoutModule -->\n\nNavigationSidebarModule->LayoutModule\n\n\n\n\n\nResultSidebarModule\n\nResultSidebarModule\n\nLayoutModule -->\n\nResultSidebarModule->LayoutModule\n\n\n\n\n\nSimpleDocumentationModule\n\nSimpleDocumentationModule\n\nLayoutModule -->\n\nSimpleDocumentationModule->LayoutModule\n\n\n\n\n\nStepbarModule\n\nStepbarModule\n\nLayoutModule -->\n\nStepbarModule->LayoutModule\n\n\n\n\n\nJSatOrbLinkService\n\nJSatOrbLinkService\n\nLayoutModule -->\n\nJSatOrbLinkService->LayoutModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/ui/layout.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            JSatOrbLinkComponent\n                        \n                        \n                            LayoutComponent\n                        \n                        \n                            ViewComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            JSatOrbLinkService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardModule\n                        \n                        \n                            FormModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            NavigationSidebarModule\n                        \n                        \n                            ResultSidebarModule\n                        \n                        \n                            SimpleDocumentationModule\n                        \n                        \n                            StepbarModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            JSatOrbLinkComponent\n                        \n                        \n                            LayoutComponent\n                        \n                        \n                            ViewComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { LayoutComponent } from './link-budget/layout.component';\nimport { CardModule } from '../components/card/card.module';\nimport { FormModule } from '../form/form.module';\nimport { LoggerModule } from '../shared/logger/logger.module';\nimport { SimpleDocumentationModule } from '../components/simple-documentation/simple-documentation.module';\nimport { StepbarModule } from '../components/stepbar/stepbar.module';\nimport { NavigationSidebarModule } from '../components/navigation-sidebar/navigation-sidebar.module';\nimport { ResultSidebarModule } from '../components/results/results.module';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { routes } from './app.routes';\nimport { ViewComponent } from './view/view.component';\nimport { JSatOrbLinkComponent } from '../luplink-jsatorb-import/luplink-jsatorb-import.component';\nimport { JSatOrbLinkService } from '../luplink-jsatorb-import/jsatorb-link.service';\nimport { CustomRouteReuseStrategy } from '../shared/CustomRouteReuseStrategy';\n\n@NgModule({\n  declarations: [\n    LayoutComponent,\n    ViewComponent,\n    JSatOrbLinkComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    CardModule,\n    FormModule,\n    LoggerModule,\n    SimpleDocumentationModule,\n    StepbarModule,\n    NavigationSidebarModule,\n    ResultSidebarModule,\n    ReactiveFormsModule,\n    \n  ],\n  exports: [\n    LayoutComponent,\n    ViewComponent,\n    JSatOrbLinkComponent\n  ],\n  providers: [\n    JSatOrbLinkService,\n    // Reusing routes allow us to avoid recreating our components on each router change.\n    // Also, faster change between tabs\n    // {\n    //   provide: RouteReuseStrategy,\n    //   useClass: CustomRouteReuseStrategy,\n    // }\n   ],\n})\nexport class LayoutModule { \n  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LinkBudgetComponent.html":{"url":"interfaces/LinkBudgetComponent.html","title":"interface - LinkBudgetComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LinkBudgetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            gain\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            linear\n                                        \n                                \n                                \n                                        \n                                            position\n                                        \n                                \n                                \n                                        \n                                            width\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        gain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        gain:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        linear\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        linear:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        position\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        position:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        width\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        width:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LinkBudgetComponent {\n  label: string;\n  gain: number;\n  linear: boolean;\n  position: number; // This is redundant #FIXME\n  width: number; // These values are defined in percent\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport class LinkBudgetScenario {\n  private powerIn: number = 0;\n\n  private powerOut: number = 0;\n\n  private components: {\n    [id: string]: LinkBudgetComponent;\n  };\n\n  private points: Point[];\n\n  constructor(power: number) {\n    this.powerIn = power;\n    this.components = {};\n    this.points = [];\n  }\n\n  public setPowerIn(power: number) {\n    this.powerIn = power;\n  }\n\n  public getPowerOut() {\n    return this.powerOut;\n  }\n\n  public getLabels() {\n    /**\n    * Returns the different labels for the components with their associated positions in\n    * the form of a list of {label, position};\n    */\n    const labels: { name: string, position: number }[] = [];\n    Object.entries(this.components).forEach(([key, value]) => {\n      const label = { name: value.label, position: value.position + value.width / 2 };\n      labels.push(label);\n    });\n    // for (const key in this.components) {\n    //     const c = this.components[key];\n    //     const label = { name: c.label, position: c.position + c.width / 2 };\n    //     labels.push(label);\n    // }\n    return labels;\n  }\n\n  public addComponent(id: string, LinkBudgetComponent: LinkBudgetComponent) {\n    this.components[id] = LinkBudgetComponent;\n  }\n\n  public addComponents(components: { id: string; component: LinkBudgetComponent }[]) {\n    /**\n     * This method adds multiples components at once\n     */\n\n    components.forEach((s) => {\n      this.addComponent(s.id, s.component);\n    });\n  }\n\n  public editGain(id: string, value: number) {\n    this.components[id].gain = value;\n  }\n\n  public editGains(gains: { [key: string]: number }) {\n    /**\n     * Edit multiple gains at once, these can be provided by a formGroup using the formGroup.formValues attribute\n     */\n    // console.log(gains.keys());\n\n    Object.keys(gains).forEach((key:any) => {\n      this.editGain(key, gains[key]);\n    });\n  }\n\n  public numberOfComponents(): number {\n    return Object.keys(this.components).length;\n  }\n\n  public getPoints(): Point[] {\n    return this.points;\n  }\n\n  public randomize(amplitude: number = 30): { [id: string]: LinkBudgetComponent } {\n    /** This changes the gain from the components with random values and return the new components */\n    const excluded = ['tx', 'rx'];\n    Object.keys(this.components).forEach((id) => {\n      if (!excluded.includes(id)) {\n        this.components[id].gain = Math.round((Math.random() - 0.8) * amplitude);// Rounded to nearest integer\n      }\n    });\n    this.powerIn = Math.random() * amplitude;\n    return this.components;\n  }\n\n  public compute(link: 'uplink' | 'downlink' = 'uplink') {\n    /** This function gives us the points needed to plot our LB graph */\n    // FIXME: Tried to make this clean (still better than before) but forgot about pass by reference and now it looks like it could be way cleaner.\n    // Depending on the kind of link we want to go backward\n    const isUp = link === 'uplink';\n    const lastPoint: Point = { x: isUp ? 0 : 100, y: this.powerIn };\n    const points: Point[] = [{ x: lastPoint.x, y: lastPoint.y }];\n    const discontinuityPoint: Point = { x: 0, y: 0 };\n    Object.values(this.components).forEach((LinkBudgetComponent) => {\n      if (!LinkBudgetComponent.linear) {\n        // Here we create the discontinuity by adding a point with same abscissa\n        discontinuityPoint.x = lastPoint.x;\n        discontinuityPoint.y = lastPoint.y + LinkBudgetComponent.gain;\n        points.push({ x: discontinuityPoint.x, y: discontinuityPoint.y });\n      }\n\n      if (isUp) lastPoint.x += LinkBudgetComponent.width;\n      if(!isUp) lastPoint.x -= LinkBudgetComponent.width;\n      (lastPoint.y += LinkBudgetComponent.gain);\n\n      points.push({ x: lastPoint.x, y: lastPoint.y });\n    });\n    this.powerOut = lastPoint.y;\n    this.points = points;\n    // for (const id in this.components) {\n    //   if (Object.prototype.hasOwnProperty.call(this.components, id)) {\n    //     const LinkBudgetComponent = this.components[id];\n\n    //     if (!LinkBudgetComponent.linear) {\n    //     // Here we create the discontinuity by adding a point with same abscissa\n    //       discontinuityPoint.x = lastPoint.x;\n    //       discontinuityPoint.y = lastPoint.y + LinkBudgetComponent.gain;\n    //       points.push({ x: discontinuityPoint.x, y: discontinuityPoint.y });\n    //     }\n\n    //     (lastPoint.x += LinkBudgetComponent.width);\n    //     (lastPoint.y += LinkBudgetComponent.gain);\n\n    //     points.push({ x: lastPoint.x, y: lastPoint.y });\n    //   }\n\n    //   this.powerOut = lastPoint.y;\n    //   this.points = points;\n    // // return points;\n    // }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LinkBudgetScenario.html":{"url":"classes/LinkBudgetScenario.html","title":"class - LinkBudgetScenario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LinkBudgetScenario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                components\n                            \n                            \n                                    Private\n                                points\n                            \n                            \n                                    Private\n                                powerIn\n                            \n                            \n                                    Private\n                                powerOut\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addComponent\n                            \n                            \n                                    Public\n                                addComponents\n                            \n                            \n                                    Public\n                                compute\n                            \n                            \n                                    Public\n                                editGain\n                            \n                            \n                                    Public\n                                editGains\n                            \n                            \n                                    Public\n                                getLabels\n                            \n                            \n                                    Public\n                                getPoints\n                            \n                            \n                                    Public\n                                getPowerOut\n                            \n                            \n                                    Public\n                                numberOfComponents\n                            \n                            \n                                    Public\n                                randomize\n                            \n                            \n                                    Public\n                                setPowerIn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(power: number)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        power\n                                                  \n                                                        \n                                                                        number\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        points\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        powerIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        powerOut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:17\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addComponent\n                        \n                    \n                \n            \n            \n                \n                    \n                    addComponent(id: string, LinkBudgetComponent: LinkBudgetComponent)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    LinkBudgetComponent\n                                    \n                                                LinkBudgetComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addComponents\n                        \n                    \n                \n            \n            \n                \n                    \n                    addComponents(components: literal type[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    components\n                                    \n                                            literal type[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        compute\n                        \n                    \n                \n            \n            \n                \n                    \n                    compute(link: \"uplink\" | \"downlink\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:106\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    link\n                                    \n                                            \"uplink\" | \"downlink\"\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'uplink'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editGain\n                        \n                    \n                \n            \n            \n                \n                    \n                    editGain(id: string, value: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        editGains\n                        \n                    \n                \n            \n            \n                \n                    \n                    editGains(gains: literal type)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    gains\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getLabels\n                        \n                    \n                \n            \n            \n                \n                    \n                    getLabels()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getPoints\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPoints()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Point[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getPowerOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    getPowerOut()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        numberOfComponents\n                        \n                    \n                \n            \n            \n                \n                    \n                    numberOfComponents()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        randomize\n                        \n                    \n                \n            \n            \n                \n                    \n                    randomize(amplitude: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    amplitude\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        30\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     literal type\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        setPowerIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    setPowerIn(power: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    power\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        export interface LinkBudgetComponent {\n  label: string;\n  gain: number;\n  linear: boolean;\n  position: number; // This is redundant #FIXME\n  width: number; // These values are defined in percent\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport class LinkBudgetScenario {\n  private powerIn: number = 0;\n\n  private powerOut: number = 0;\n\n  private components: {\n    [id: string]: LinkBudgetComponent;\n  };\n\n  private points: Point[];\n\n  constructor(power: number) {\n    this.powerIn = power;\n    this.components = {};\n    this.points = [];\n  }\n\n  public setPowerIn(power: number) {\n    this.powerIn = power;\n  }\n\n  public getPowerOut() {\n    return this.powerOut;\n  }\n\n  public getLabels() {\n    /**\n    * Returns the different labels for the components with their associated positions in\n    * the form of a list of {label, position};\n    */\n    const labels: { name: string, position: number }[] = [];\n    Object.entries(this.components).forEach(([key, value]) => {\n      const label = { name: value.label, position: value.position + value.width / 2 };\n      labels.push(label);\n    });\n    // for (const key in this.components) {\n    //     const c = this.components[key];\n    //     const label = { name: c.label, position: c.position + c.width / 2 };\n    //     labels.push(label);\n    // }\n    return labels;\n  }\n\n  public addComponent(id: string, LinkBudgetComponent: LinkBudgetComponent) {\n    this.components[id] = LinkBudgetComponent;\n  }\n\n  public addComponents(components: { id: string; component: LinkBudgetComponent }[]) {\n    /**\n     * This method adds multiples components at once\n     */\n\n    components.forEach((s) => {\n      this.addComponent(s.id, s.component);\n    });\n  }\n\n  public editGain(id: string, value: number) {\n    this.components[id].gain = value;\n  }\n\n  public editGains(gains: { [key: string]: number }) {\n    /**\n     * Edit multiple gains at once, these can be provided by a formGroup using the formGroup.formValues attribute\n     */\n    // console.log(gains.keys());\n\n    Object.keys(gains).forEach((key:any) => {\n      this.editGain(key, gains[key]);\n    });\n  }\n\n  public numberOfComponents(): number {\n    return Object.keys(this.components).length;\n  }\n\n  public getPoints(): Point[] {\n    return this.points;\n  }\n\n  public randomize(amplitude: number = 30): { [id: string]: LinkBudgetComponent } {\n    /** This changes the gain from the components with random values and return the new components */\n    const excluded = ['tx', 'rx'];\n    Object.keys(this.components).forEach((id) => {\n      if (!excluded.includes(id)) {\n        this.components[id].gain = Math.round((Math.random() - 0.8) * amplitude);// Rounded to nearest integer\n      }\n    });\n    this.powerIn = Math.random() * amplitude;\n    return this.components;\n  }\n\n  public compute(link: 'uplink' | 'downlink' = 'uplink') {\n    /** This function gives us the points needed to plot our LB graph */\n    // FIXME: Tried to make this clean (still better than before) but forgot about pass by reference and now it looks like it could be way cleaner.\n    // Depending on the kind of link we want to go backward\n    const isUp = link === 'uplink';\n    const lastPoint: Point = { x: isUp ? 0 : 100, y: this.powerIn };\n    const points: Point[] = [{ x: lastPoint.x, y: lastPoint.y }];\n    const discontinuityPoint: Point = { x: 0, y: 0 };\n    Object.values(this.components).forEach((LinkBudgetComponent) => {\n      if (!LinkBudgetComponent.linear) {\n        // Here we create the discontinuity by adding a point with same abscissa\n        discontinuityPoint.x = lastPoint.x;\n        discontinuityPoint.y = lastPoint.y + LinkBudgetComponent.gain;\n        points.push({ x: discontinuityPoint.x, y: discontinuityPoint.y });\n      }\n\n      if (isUp) lastPoint.x += LinkBudgetComponent.width;\n      if(!isUp) lastPoint.x -= LinkBudgetComponent.width;\n      (lastPoint.y += LinkBudgetComponent.gain);\n\n      points.push({ x: lastPoint.x, y: lastPoint.y });\n    });\n    this.powerOut = lastPoint.y;\n    this.points = points;\n    // for (const id in this.components) {\n    //   if (Object.prototype.hasOwnProperty.call(this.components, id)) {\n    //     const LinkBudgetComponent = this.components[id];\n\n    //     if (!LinkBudgetComponent.linear) {\n    //     // Here we create the discontinuity by adding a point with same abscissa\n    //       discontinuityPoint.x = lastPoint.x;\n    //       discontinuityPoint.y = lastPoint.y + LinkBudgetComponent.gain;\n    //       points.push({ x: discontinuityPoint.x, y: discontinuityPoint.y });\n    //     }\n\n    //     (lastPoint.x += LinkBudgetComponent.width);\n    //     (lastPoint.y += LinkBudgetComponent.gain);\n\n    //     points.push({ x: lastPoint.x, y: lastPoint.y });\n    //   }\n\n    //   this.powerOut = lastPoint.y;\n    //   this.points = points;\n    // // return points;\n    // }\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LogEntry.html":{"url":"classes/LogEntry.html","title":"class - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/logger/logger.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entryDate\n                            \n                            \n                                extraInfo\n                            \n                            \n                                level\n                            \n                            \n                                logWithDate\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildLogString\n                            \n                            \n                                    Static\n                                formatParams\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        entryDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Default value : new Date()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extraInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogLevel\n\n                    \n                \n                \n                    \n                        Default value : LogLevel.Debug\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logWithDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:26\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildLogString\n                        \n                    \n                \n            \n            \n                \nbuildLogString()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        formatParams\n                        \n                    \n                \n            \n            \n                \n                    \n                    formatParams(params: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    params\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { LoggerModule } from './logger.module';\n\nexport enum LogLevel {\n  All = 0,\n  Debug = 1,\n  Info = 2,\n  Warn = 3,\n  Error = 4,\n  Fatal = 5,\n  Off = 6,\n}\n\nexport class LogEntry {\n  // Public Properties\n  entryDate: Date = new Date();\n\n  message: string = '';\n\n  level: LogLevel = LogLevel.Debug;\n\n  extraInfo: any[] = [];\n\n  logWithDate: boolean = true;\n\n  buildLogString(): string {\n    let ret: string = '';\n\n    if (this.logWithDate) {\n      ret = `${new Date()} - `;\n    }\n\n    ret += LogLevel[this.level];\n    ret += ` - ${this.message}`;\n    if (this.extraInfo.length) {\n      ret += ` - Extra Info: ${LogEntry.formatParams(this.extraInfo)}`;\n    }\n\n    return ret;\n  }\n\n  static formatParams(params: any[]): string {\n    let ret: string = params.join(',');\n\n    // Is there at least one object in the array?\n    if (params.some((p) => typeof p === 'object')) {\n      ret = '';\n\n      // Build comma-delimited string\n      params.forEach((item) => {\n        ret += `${JSON.stringify(item)},`;\n      });\n      // for (const item of params) {\n\n      // }\n    }\n\n    return ret;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggerService {\n  /**\n   * A custom service to log errors https://www.codemag.com/Article/1711021/Logging-in-Angular-Applications\n   */\n  constructor(private toastr: ToastrService) { }\n\n  // Miscellanious debugging variables\n  developer: boolean = false;\n\n  // End\n\n  level: LogLevel = LogLevel.Debug;\n\n  logWithDate: boolean = false;\n\n  logWithToast: boolean = true;\n\n  debug(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Debug, optionalParams);\n  }\n\n  info(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Info, optionalParams);\n  }\n\n  warn(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Warn, optionalParams);\n    this.sendToast(msg, LogLevel.Warn, LogEntry.formatParams(optionalParams));\n  }\n\n  error(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Error, optionalParams);\n    // console.log(typeof optionalParams[0])\n    // if (optionalParams.length>0){\n    // let entry = new LogEntry\n    this.sendToast(msg, LogLevel.Error, LogEntry.formatParams(optionalParams));\n  }\n\n  success(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Info, optionalParams);\n    this.sendToast(msg, LogLevel.Info, LogEntry.formatParams(optionalParams));\n  }\n\n  fatal(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Fatal, optionalParams);\n  }\n\n  log(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.All, optionalParams);\n  }\n\n  private sendToast(title: string, level: LogLevel, message?:string, params?: any[]) {\n    if (this.shouldLog(level) && this.logWithToast) {\n      switch (level) {\n        case LogLevel.Error:\n          this.toastr.error(message, title);\n          break;\n        case LogLevel.Warn:\n          this.toastr.warning(message, title);\n          break;\n        case LogLevel.Info:\n          this.toastr.success(message, title);\n          break;\n        default:\n          this.toastr.show(title);\n      }\n    }\n  }\n\n  private writeToLog(msg: string, level: LogLevel, params: any[]) {\n    if (this.shouldLog(level)) {\n      const entry: LogEntry = new LogEntry();\n      entry.message = msg;\n      entry.level = level;\n      entry.extraInfo = params;\n      entry.logWithDate = this.logWithDate;\n      switch (level) {\n        case LogLevel.Warn: console.warn(entry.buildLogString()); break;\n        case LogLevel.Error: console.error(entry.buildLogString()); break;\n        case LogLevel.Debug: console.debug(entry.buildLogString()); break;\n        default: console.log(entry.buildLogString());\n      }\n    }\n  }\n\n  private shouldLog(level: LogLevel): boolean {\n    let ret: boolean = false;\n    if ((level >= this.level && level !== LogLevel.Off) || this.level === LogLevel.All) {\n      ret = true;\n    }\n    return ret;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLoggerService\n\nLoggerService\n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.module.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations'\nimport { ToastrModule } from 'ngx-toastr';\nimport { LoggerService } from './logger.service';\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule,\n    BrowserAnimationsModule, //Required by Toastr\n    ToastrModule.forRoot({\n      positionClass: 'toast-bottom-right',\n    }),\n  ],\n  providers: [\n    LoggerService\n  ]\n})\nexport class LoggerModule { \n  static forRoot(): ModuleWithProviders {\n    return {\n      ngModule: LoggerModule,\n      providers: [\n        {provide: LoggerService }\n      ]\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/logger/logger.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                developer\n                            \n                            \n                                level\n                            \n                            \n                                logWithDate\n                            \n                            \n                                logWithToast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                fatal\n                            \n                            \n                                info\n                            \n                            \n                                log\n                            \n                            \n                                    Private\n                                sendToast\n                            \n                            \n                                    Private\n                                shouldLog\n                            \n                            \n                                success\n                            \n                            \n                                warn\n                            \n                            \n                                    Private\n                                writeToLog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(toastr: ToastrService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:73\n                            \n                        \n\n                \n                    \n                            A custom service to log errors https://www.codemag.com/Article/1711021/Logging-in-Angular-Applications\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        toastr\n                                                  \n                                                        \n                                                                    ToastrService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fatal\n                        \n                    \n                \n            \n            \n                \nfatal(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        info\n                        \n                    \n                \n            \n            \n                \ninfo(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        sendToast\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendToast(title: string, level: LogLevel, message?: string, params?: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:124\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        shouldLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    shouldLog(level: LogLevel)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:158\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        success\n                        \n                    \n                \n            \n            \n                \nsuccess(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(msg: string, ...optionalParams: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    optionalParams\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        writeToLog\n                        \n                    \n                \n            \n            \n                \n                    \n                    writeToLog(msg: string, level: LogLevel, params: any[])\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:142\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    level\n                                    \n                                                LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    params\n                                    \n                                            any[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        developer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        level\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LogLevel\n\n                    \n                \n                \n                    \n                        Default value : LogLevel.Debug\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:84\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logWithDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logWithToast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/logger/logger.service.ts:88\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ToastrService } from 'ngx-toastr';\nimport { LoggerModule } from './logger.module';\n\nexport enum LogLevel {\n  All = 0,\n  Debug = 1,\n  Info = 2,\n  Warn = 3,\n  Error = 4,\n  Fatal = 5,\n  Off = 6,\n}\n\nexport class LogEntry {\n  // Public Properties\n  entryDate: Date = new Date();\n\n  message: string = '';\n\n  level: LogLevel = LogLevel.Debug;\n\n  extraInfo: any[] = [];\n\n  logWithDate: boolean = true;\n\n  buildLogString(): string {\n    let ret: string = '';\n\n    if (this.logWithDate) {\n      ret = `${new Date()} - `;\n    }\n\n    ret += LogLevel[this.level];\n    ret += ` - ${this.message}`;\n    if (this.extraInfo.length) {\n      ret += ` - Extra Info: ${LogEntry.formatParams(this.extraInfo)}`;\n    }\n\n    return ret;\n  }\n\n  static formatParams(params: any[]): string {\n    let ret: string = params.join(',');\n\n    // Is there at least one object in the array?\n    if (params.some((p) => typeof p === 'object')) {\n      ret = '';\n\n      // Build comma-delimited string\n      params.forEach((item) => {\n        ret += `${JSON.stringify(item)},`;\n      });\n      // for (const item of params) {\n\n      // }\n    }\n\n    return ret;\n  }\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LoggerService {\n  /**\n   * A custom service to log errors https://www.codemag.com/Article/1711021/Logging-in-Angular-Applications\n   */\n  constructor(private toastr: ToastrService) { }\n\n  // Miscellanious debugging variables\n  developer: boolean = false;\n\n  // End\n\n  level: LogLevel = LogLevel.Debug;\n\n  logWithDate: boolean = false;\n\n  logWithToast: boolean = true;\n\n  debug(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Debug, optionalParams);\n  }\n\n  info(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Info, optionalParams);\n  }\n\n  warn(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Warn, optionalParams);\n    this.sendToast(msg, LogLevel.Warn, LogEntry.formatParams(optionalParams));\n  }\n\n  error(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Error, optionalParams);\n    // console.log(typeof optionalParams[0])\n    // if (optionalParams.length>0){\n    // let entry = new LogEntry\n    this.sendToast(msg, LogLevel.Error, LogEntry.formatParams(optionalParams));\n  }\n\n  success(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Info, optionalParams);\n    this.sendToast(msg, LogLevel.Info, LogEntry.formatParams(optionalParams));\n  }\n\n  fatal(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.Fatal, optionalParams);\n  }\n\n  log(msg: string, ...optionalParams: any[]) {\n    this.writeToLog(msg, LogLevel.All, optionalParams);\n  }\n\n  private sendToast(title: string, level: LogLevel, message?:string, params?: any[]) {\n    if (this.shouldLog(level) && this.logWithToast) {\n      switch (level) {\n        case LogLevel.Error:\n          this.toastr.error(message, title);\n          break;\n        case LogLevel.Warn:\n          this.toastr.warning(message, title);\n          break;\n        case LogLevel.Info:\n          this.toastr.success(message, title);\n          break;\n        default:\n          this.toastr.show(title);\n      }\n    }\n  }\n\n  private writeToLog(msg: string, level: LogLevel, params: any[]) {\n    if (this.shouldLog(level)) {\n      const entry: LogEntry = new LogEntry();\n      entry.message = msg;\n      entry.level = level;\n      entry.extraInfo = params;\n      entry.logWithDate = this.logWithDate;\n      switch (level) {\n        case LogLevel.Warn: console.warn(entry.buildLogString()); break;\n        case LogLevel.Error: console.error(entry.buildLogString()); break;\n        case LogLevel.Debug: console.debug(entry.buildLogString()); break;\n        default: console.log(entry.buildLogString());\n      }\n    }\n  }\n\n  private shouldLog(level: LogLevel): boolean {\n    let ret: boolean = false;\n    if ((level >= this.level && level !== LogLevel.Off) || this.level === LogLevel.All) {\n      ret = true;\n    }\n    return ret;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LuplinkConfig.html":{"url":"interfaces/LuplinkConfig.html","title":"interface - LuplinkConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LuplinkConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/luplink.module.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            defaultForm\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            isStandalone\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        defaultForm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        defaultForm:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        isStandalone\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        isStandalone:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormModule } from './form/form.module';\nimport { FormsModule } from '@angular/forms';\nimport { CardModule } from './components/card/card.module';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport ComputeLinkBudgetService from './services/compute-link-budget.service';\nimport { SaveLoadService } from './services/save-load.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LayoutModule } from './ui/layout.module';\nimport { NanospaceRequestService, NanospaceService, NgxNanospaceClientLibModule } from 'ngx-nanospace-client-lib';\nimport { JSatOrbLinkComponent } from './luplink-jsatorb-import/luplink-jsatorb-import.component';\nimport { ENVIRONMENT_TOKEN, FORM_TEMPLATE_TOKEN } from './shared/dependencies';\n\ninterface LuplinkConfig {\n  defaultForm: any,\n  environment: any,\n  isStandalone?: boolean,\n};\nconst NanospaceConfig = {\n  endpoint: 'https://dcas-nanostar.isae.fr/api/',\n};\n\n// This is a workaround to avoid forRoot being called twice (see: https://github.com/angular/angular/issues/38376#issuecomment-670551280)\nconst NgxNanospace = NgxNanospaceClientLibModule.forRoot(NanospaceConfig);\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    CardModule,\n    HttpClientModule,\n\n    NgxNanospace\n  ],\n  providers: [\n    ComputeLinkBudgetService,\n    SaveLoadService,\n    \n    NanospaceService,\n    NanospaceRequestService,\n  ],\n  exports: [ ]\n})\nexport class LuplinkModule {\n  static forRoot(config: LuplinkConfig): ModuleWithProviders {\n    console.log(config);\n    return {\n      ngModule: LuplinkModule,\n      providers: [\n        {\n          provide: FORM_TEMPLATE_TOKEN,\n          useValue: config.defaultForm,\n        },\n        {\n          provide: ENVIRONMENT_TOKEN,\n          useValue: { ...config.environment, isStandalone: config.isStandalone, version: \"0.2.1\" },\n        }\n      ]\n    };\n  }\n }\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LuplinkModule.html":{"url":"modules/LuplinkModule.html","title":"module - LuplinkModule","body":"\n                   \n\n\n\n\n    Modules\n    LuplinkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LuplinkModule\n\n\n\ncluster_LuplinkModule_imports\n\n\n\ncluster_LuplinkModule_providers\n\n\n\n\nCardModule\n\nCardModule\n\n\n\nLuplinkModule\n\nLuplinkModule\n\nLuplinkModule -->\n\nCardModule->LuplinkModule\n\n\n\n\n\nComputeLinkBudgetService\n\nComputeLinkBudgetService\n\nLuplinkModule -->\n\nComputeLinkBudgetService->LuplinkModule\n\n\n\n\n\nSaveLoadService\n\nSaveLoadService\n\nLuplinkModule -->\n\nSaveLoadService->LuplinkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/luplink.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ComputeLinkBudgetService\n                        \n                        \n                            SaveLoadService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        forRoot\n                        \n                    \n                \n            \n            \n                \n                    \n                    forRoot(config: LuplinkConfig)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/luplink.module.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    config\n                                    \n                                                LuplinkConfig\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ModuleWithProviders\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormModule } from './form/form.module';\nimport { FormsModule } from '@angular/forms';\nimport { CardModule } from './components/card/card.module';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport ComputeLinkBudgetService from './services/compute-link-budget.service';\nimport { SaveLoadService } from './services/save-load.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { LayoutModule } from './ui/layout.module';\nimport { NanospaceRequestService, NanospaceService, NgxNanospaceClientLibModule } from 'ngx-nanospace-client-lib';\nimport { JSatOrbLinkComponent } from './luplink-jsatorb-import/luplink-jsatorb-import.component';\nimport { ENVIRONMENT_TOKEN, FORM_TEMPLATE_TOKEN } from './shared/dependencies';\n\ninterface LuplinkConfig {\n  defaultForm: any,\n  environment: any,\n  isStandalone?: boolean,\n};\nconst NanospaceConfig = {\n  endpoint: 'https://dcas-nanostar.isae.fr/api/',\n};\n\n// This is a workaround to avoid forRoot being called twice (see: https://github.com/angular/angular/issues/38376#issuecomment-670551280)\nconst NgxNanospace = NgxNanospaceClientLibModule.forRoot(NanospaceConfig);\n\n@NgModule({\n  declarations: [\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    CardModule,\n    HttpClientModule,\n\n    NgxNanospace\n  ],\n  providers: [\n    ComputeLinkBudgetService,\n    SaveLoadService,\n    \n    NanospaceService,\n    NanospaceRequestService,\n  ],\n  exports: [ ]\n})\nexport class LuplinkModule {\n  static forRoot(config: LuplinkConfig): ModuleWithProviders {\n    console.log(config);\n    return {\n      ngModule: LuplinkModule,\n      providers: [\n        {\n          provide: FORM_TEMPLATE_TOKEN,\n          useValue: config.defaultForm,\n        },\n        {\n          provide: ENVIRONMENT_TOKEN,\n          useValue: { ...config.environment, isStandalone: config.isStandalone, version: \"0.2.1\" },\n        }\n      ]\n    };\n  }\n }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockComputeService.html":{"url":"classes/MockComputeService.html","title":"class - MockComputeService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockComputeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { FormBuilder, FormGroup } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n// Mocking the Toastr module thanks to https://github.com/scttcper/ngx-toastr/issues/339#issuecomment-508750488\nimport { Injectable, NgModule } from '@angular/core';\nimport {\n  IndividualConfig, ToastPackage, ToastRef, ToastrModule,\n} from 'ngx-toastr';\n// import mockPOSTData from './mockPOSTData.json';\n// Mocking  FormService\nexport class MockFormService {\n  public result:BehaviorSubject = new BehaviorSubject('');\n  fb = new FormBuilder();\n  public getFormData(): FormGroup {\n    // Objects.mockPOSTData.geometry\n    // const geo = this.fb.group(mockPOSTData.geometry);\n    return new FormBuilder().group({ test: 5, u: 3.14159265358979323846 });\n  }\n  public initForms(): void {}\n\n  public getFormData$(): Observable {\n    return of(new FormBuilder().group({ test: 5, u: 3.14159265358979323846 }));\n  }\n}\n// Mocking ComputeLinkBudgetService\nexport class MockComputeService {\n}\n// Mocking LoggerService\nexport class MockupLoggerService {\n  public log() {}\n  public debug() {}\n  public error() {}\n  public info() {}\n  public warn() {}\n}\n\n@Injectable()\nclass MockToastPackage extends ToastPackage {\n  constructor() {\n    const toastConfig = { toastClass: 'custom-toast' };\n    super(1, toastConfig, 'test message', 'test title', 'show', new ToastRef(null!));\n  }\n}\n\n@NgModule({\n  providers: [\n    { provide: ToastPackage, useClass: MockToastPackage },\n  ],\n  imports: [\n    ToastrModule.forRoot(),\n  ],\n  exports: [\n    ToastrModule,\n  ],\n})\nexport class ToastrTestingModule { }\n\n// INJECTION TOKENS \nexport const mockEnvironment = {\n  production: false,\n  debugMode: true,\n  enableNanospace: true,\n  APIEndPoint: 'http://localhost:8001/',\n  version: 0.0,\n};\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockFormService.html":{"url":"classes/MockFormService.html","title":"class - MockFormService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                fb\n                            \n                            \n                                    Public\n                                result\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getFormData\n                            \n                            \n                                    Public\n                                getFormData$\n                            \n                            \n                                    Public\n                                initForms\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        fb\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormBuilder()\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        result\n                        \n                    \n                \n            \n                \n                    \n                        Type :     BehaviorSubject\n\n                    \n                \n                \n                    \n                        Default value : new BehaviorSubject('')\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:14\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFormData\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         FormGroup\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getFormData$\n                        \n                    \n                \n            \n            \n                \n                    \n                    getFormData$()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        initForms\n                        \n                    \n                \n            \n            \n                \n                    \n                    initForms()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FormBuilder, FormGroup } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n// Mocking the Toastr module thanks to https://github.com/scttcper/ngx-toastr/issues/339#issuecomment-508750488\nimport { Injectable, NgModule } from '@angular/core';\nimport {\n  IndividualConfig, ToastPackage, ToastRef, ToastrModule,\n} from 'ngx-toastr';\n// import mockPOSTData from './mockPOSTData.json';\n// Mocking  FormService\nexport class MockFormService {\n  public result:BehaviorSubject = new BehaviorSubject('');\n  fb = new FormBuilder();\n  public getFormData(): FormGroup {\n    // Objects.mockPOSTData.geometry\n    // const geo = this.fb.group(mockPOSTData.geometry);\n    return new FormBuilder().group({ test: 5, u: 3.14159265358979323846 });\n  }\n  public initForms(): void {}\n\n  public getFormData$(): Observable {\n    return of(new FormBuilder().group({ test: 5, u: 3.14159265358979323846 }));\n  }\n}\n// Mocking ComputeLinkBudgetService\nexport class MockComputeService {\n}\n// Mocking LoggerService\nexport class MockupLoggerService {\n  public log() {}\n  public debug() {}\n  public error() {}\n  public info() {}\n  public warn() {}\n}\n\n@Injectable()\nclass MockToastPackage extends ToastPackage {\n  constructor() {\n    const toastConfig = { toastClass: 'custom-toast' };\n    super(1, toastConfig, 'test message', 'test title', 'show', new ToastRef(null!));\n  }\n}\n\n@NgModule({\n  providers: [\n    { provide: ToastPackage, useClass: MockToastPackage },\n  ],\n  imports: [\n    ToastrModule.forRoot(),\n  ],\n  exports: [\n    ToastrModule,\n  ],\n})\nexport class ToastrTestingModule { }\n\n// INJECTION TOKENS \nexport const mockEnvironment = {\n  production: false,\n  debugMode: true,\n  enableNanospace: true,\n  APIEndPoint: 'http://localhost:8001/',\n  version: 0.0,\n};\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MockToastPackage.html":{"url":"injectables/MockToastPackage.html","title":"injectable - MockToastPackage","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MockToastPackage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    ToastPackage\n            \n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:40\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import { FormBuilder, FormGroup } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n// Mocking the Toastr module thanks to https://github.com/scttcper/ngx-toastr/issues/339#issuecomment-508750488\nimport { Injectable, NgModule } from '@angular/core';\nimport {\n  IndividualConfig, ToastPackage, ToastRef, ToastrModule,\n} from 'ngx-toastr';\n// import mockPOSTData from './mockPOSTData.json';\n// Mocking  FormService\nexport class MockFormService {\n  public result:BehaviorSubject = new BehaviorSubject('');\n  fb = new FormBuilder();\n  public getFormData(): FormGroup {\n    // Objects.mockPOSTData.geometry\n    // const geo = this.fb.group(mockPOSTData.geometry);\n    return new FormBuilder().group({ test: 5, u: 3.14159265358979323846 });\n  }\n  public initForms(): void {}\n\n  public getFormData$(): Observable {\n    return of(new FormBuilder().group({ test: 5, u: 3.14159265358979323846 }));\n  }\n}\n// Mocking ComputeLinkBudgetService\nexport class MockComputeService {\n}\n// Mocking LoggerService\nexport class MockupLoggerService {\n  public log() {}\n  public debug() {}\n  public error() {}\n  public info() {}\n  public warn() {}\n}\n\n@Injectable()\nclass MockToastPackage extends ToastPackage {\n  constructor() {\n    const toastConfig = { toastClass: 'custom-toast' };\n    super(1, toastConfig, 'test message', 'test title', 'show', new ToastRef(null!));\n  }\n}\n\n@NgModule({\n  providers: [\n    { provide: ToastPackage, useClass: MockToastPackage },\n  ],\n  imports: [\n    ToastrModule.forRoot(),\n  ],\n  exports: [\n    ToastrModule,\n  ],\n})\nexport class ToastrTestingModule { }\n\n// INJECTION TOKENS \nexport const mockEnvironment = {\n  production: false,\n  debugMode: true,\n  enableNanospace: true,\n  APIEndPoint: 'http://localhost:8001/',\n  version: 0.0,\n};\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/MockupLoggerService.html":{"url":"classes/MockupLoggerService.html","title":"class - MockupLoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  MockupLoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                debug\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Public\n                                log\n                            \n                            \n                                    Public\n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        debug\n                        \n                    \n                \n            \n            \n                \n                    \n                    debug()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        info\n                        \n                    \n                \n            \n            \n                \n                    \n                    info()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        warn\n                        \n                    \n                \n            \n            \n                \n                    \n                    warn()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/shared/testing/mocks.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { FormBuilder, FormGroup } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n// Mocking the Toastr module thanks to https://github.com/scttcper/ngx-toastr/issues/339#issuecomment-508750488\nimport { Injectable, NgModule } from '@angular/core';\nimport {\n  IndividualConfig, ToastPackage, ToastRef, ToastrModule,\n} from 'ngx-toastr';\n// import mockPOSTData from './mockPOSTData.json';\n// Mocking  FormService\nexport class MockFormService {\n  public result:BehaviorSubject = new BehaviorSubject('');\n  fb = new FormBuilder();\n  public getFormData(): FormGroup {\n    // Objects.mockPOSTData.geometry\n    // const geo = this.fb.group(mockPOSTData.geometry);\n    return new FormBuilder().group({ test: 5, u: 3.14159265358979323846 });\n  }\n  public initForms(): void {}\n\n  public getFormData$(): Observable {\n    return of(new FormBuilder().group({ test: 5, u: 3.14159265358979323846 }));\n  }\n}\n// Mocking ComputeLinkBudgetService\nexport class MockComputeService {\n}\n// Mocking LoggerService\nexport class MockupLoggerService {\n  public log() {}\n  public debug() {}\n  public error() {}\n  public info() {}\n  public warn() {}\n}\n\n@Injectable()\nclass MockToastPackage extends ToastPackage {\n  constructor() {\n    const toastConfig = { toastClass: 'custom-toast' };\n    super(1, toastConfig, 'test message', 'test title', 'show', new ToastRef(null!));\n  }\n}\n\n@NgModule({\n  providers: [\n    { provide: ToastPackage, useClass: MockToastPackage },\n  ],\n  imports: [\n    ToastrModule.forRoot(),\n  ],\n  exports: [\n    ToastrModule,\n  ],\n})\nexport class ToastrTestingModule { }\n\n// INJECTION TOKENS \nexport const mockEnvironment = {\n  production: false,\n  debugMode: true,\n  enableNanospace: true,\n  APIEndPoint: 'http://localhost:8001/',\n  version: 0.0,\n};\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-navbar\n            \n\n            \n                styleUrls\n                ./navbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _isNanospaceEnabled\n                            \n                            \n                                angleLeft\n                            \n                            \n                                    Public\n                                computeLinkBudget\n                            \n                            \n                                debugMode\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                globalFormValue\n                            \n                            \n                                    Public\n                                isEditingTitle\n                            \n                            \n                                    Public\n                                loading\n                            \n                            \n                                    Public\n                                logger\n                            \n                            \n                                    Public\n                                pencil\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                titleInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                compute\n                            \n                            \n                                editTitle\n                            \n                            \n                                load\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onBlur\n                            \n                            \n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isNanospaceEnabled\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: any, saveLoadService: SaveLoadService, computeLinkBudget: ComputeLinkBudgetService, formService: FormService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:36\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        saveLoadService\n                                                  \n                                                        \n                                                                        SaveLoadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        computeLinkBudget\n                                                  \n                                                        \n                                                                        ComputeLinkBudgetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        compute\n                        \n                    \n                \n            \n            \n                \ncompute()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTitle\n                        \n                    \n                \n            \n            \n                \neditTitle()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        load\n                        \n                    \n                \n            \n            \n                \nload(files: FileList | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onBlur\n                        \n                    \n                \n            \n            \n                \nonBlur($event: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    $event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        save\n                        \n                    \n                \n            \n            \n                \nsave()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:77\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _isNanospaceEnabled\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        angleLeft\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleLeft\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        computeLinkBudget\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComputeLinkBudgetService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debugMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        globalFormValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({})\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isEditingTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggerService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pencil\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faPencilAlt\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Luplink-v0.2'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        titleInput\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('titleInput')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isNanospaceEnabled\n                    \n                \n\n                \n                    \n                        getisNanospaceEnabled()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:25\n                                \n                            \n\n                \n                    \n                        setisNanospaceEnabled(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts:28\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            boolean\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { faAngleLeft, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport ComputeLinkBudgetService from '../../services/compute-link-budget.service';\nimport { SaveLoadService } from '../../services/save-load.service';\nimport sanitize from 'sanitize-filename';\nimport { FormService } from '../../form/form.service';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { ENVIRONMENT_TOKEN } from '../../shared/dependencies';\n// import { environment } from 'projects/luplink-app/src/environments/environment';\n\n@Component({\n  selector: 'lib-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  @ViewChild('titleInput') titleInput?: ElementRef;\n\n  title = 'Luplink-v0.2';\n  // For now debug mode disables the reload warning. Debug mode is disabled automatically in prod mode but can be disabled manually\n  debugMode = false;\n  private _isNanospaceEnabled = true;\n  get isNanospaceEnabled(): boolean {\n    return this._isNanospaceEnabled;\n  }\n  set isNanospaceEnabled(value: boolean) {\n    this.environment.enableNanospace = value;\n    this._isNanospaceEnabled = value;\n  }\n  angleLeft = faAngleLeft;\n  public isEditingTitle: boolean = false;\n  public pencil = faPencilAlt;\n  public loading: boolean = false;\n  public globalFormValue: FormGroup = new FormGroup({});\n  constructor(\n    @Inject(ENVIRONMENT_TOKEN) private environment: any,\n    private saveLoadService: SaveLoadService,\n    public computeLinkBudget: ComputeLinkBudgetService,\n    public formService: FormService, public logger:LoggerService,\n  ) {\n    this.formService.initForms();\n    this.formService.getFormData$()\n      .subscribe((value:FormGroup) => {\n        this.globalFormValue = value;\n      });\n  }\n  onBlur($event:any): void {\n    // We use the sanitize-filename node module to make sure everything is fine with the selected fileName (length, characters, ...)\n    this.formService.title = sanitize($event.target.value);\n    console.log(this.formService.title);\n    this.isEditingTitle = false;\n  }\n\n  editTitle() {\n    this.isEditingTitle = true;\n    setTimeout(() => { // this will make the execution after the above boolean has changed\n      this.titleInput?.nativeElement.focus();\n    }, 0);\n  }\n\n  ngOnInit(): void {\n    this.logger.info('Logging is enabled');\n    // Prevent the user from losing data if he hasn't saved the current scenario\n    // if (!this.debugMode) {\n    window.addEventListener('beforeunload', (event) => {\n      if (!this.formService.isCurrentFormSaved) {\n        event.preventDefault();\n        // eslint-disable-next-line no-param-reassign\n        // event.returnValue = 'Unsaved modifications';\n      }\n      return event;\n    });\n    // }\n  }\n  save() {\n    this.saveLoadService.exportConfigFile(this.formService.getFormData());\n  }\n\n  load(files: FileList | null) {\n    if (files) { this.saveLoadService.importConfigFile(files); }\n  }\n  compute() {\n    const obs = this.computeLinkBudget.computeLinkBudget();\n    if (obs) {\n      this.loading = true;\n      const subscription = obs.subscribe(\n        (value) => {\n          // this.logger.debug('value', value);\n          this.computeLinkBudget.updateResult(value);\n          // this.logger.debug(\"API response:\", value)\n          this.loading = false;\n          subscription?.unsubscribe();\n        },\n        (err) => {\n          this.loading = false;\n          this.logger.debug('error in compute()', err);\n          subscription?.unsubscribe();\n        },\n      );\n    }\n  }\n\n}\n\n    \n\n    \n        \n    \n      Luplink\n      \n        \n        \n        \n       -->\n    \n    \n      \n         Diagram \n         Simple Link Budget \n         Full Link Budget \n      \n      \n        \n        \n          \n            \n            {{this.formService.title}}{{!this.formService.isCurrentFormSaved ? '*' : ''}}\n            \n          \n          \n            New Link Budget\n            \n              \n              Basic\n            \n            \n              \n              Dynamic\n             -->\n            \n              Developer mode\n              \n            \n            \n              Enable Nanospace\n              \n            \n  \n            \n            Save\n            \n                \n                  \n                  Import\n                \n           Load \n           \n            \n           \n  \n          \n        \n        \n          \n            Compute\n          \n        \n      \n    \n  \n  \n   -->\n  \n         -->\n -->\n  \n   -->\n  \n\n    \n\n    \n                \n                    ./navbar.component.scss\n                \n                .navbar {\n    min-height: auto;\n  }\n  .navbar {\n    padding-top: 0; //Remove the padding for smaller navbar\n    padding-bottom: 0;\n  }\n  .navbar-link:focus-within {\n    background-color: #00b89c;\n  }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Luplink                                     -->                       Diagram          Simple Link Budget          Full Link Budget                                                               {{this.formService.title}}{{!this.formService.isCurrentFormSaved ? \\'*\\' : \\'\\'}}                                            New Link Budget                                        Basic                                                    Dynamic             -->                          Developer mode                                                    Enable Nanospace                                                    Save                                                                Import                           Load                                                                                     Compute                                   -->           --> -->     -->  '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavbarModule.html":{"url":"modules/NavbarModule.html","title":"module - NavbarModule","body":"\n                   \n\n\n\n\n    Modules\n    NavbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NavbarModule\n\n\n\ncluster_NavbarModule_exports\n\n\n\ncluster_NavbarModule_declarations\n\n\n\ncluster_NavbarModule_imports\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\n\n\nNavbarModule\n\nNavbarModule\n\nNavbarModule -->\n\nNavbarComponent->NavbarModule\n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nNavbarModule->NavbarComponent \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nNavbarModule -->\n\nLoggerModule->NavbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/navbar/navbar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NavbarComponent } from './navbar.component';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormService } from '../../form/form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\n\n\n@NgModule({\n  declarations: [\n    NavbarComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    FontAwesomeModule,\n    RouterModule,\n    FormsModule,\n    LoggerModule\n  ],\n  exports:[\n    NavbarComponent\n  ]\n})\nexport class NavbarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavigationSidebarComponent.html":{"url":"components/NavigationSidebarComponent.html","title":"component - NavigationSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavigationSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-navigation-sidebar\n            \n\n            \n                styleUrls\n                ./navigation-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./navigation-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                collapsed\n                            \n                            \n                                    Public\n                                collapseDownlink\n                            \n                            \n                                    Public\n                                collapseUplink\n                            \n                            \n                                faAngleDown\n                            \n                            \n                                version\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                collapseSidebar\n                            \n                            \n                                switchTemplate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentComponent\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: any)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentComponent\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'geometry'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:27\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        collapseSidebar\n                        \n                    \n                \n            \n            \n                \ncollapseSidebar()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        switchTemplate\n                        \n                    \n                \n            \n            \n                \nswitchTemplate(name: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        collapsed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        collapseDownlink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        collapseUplink\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faAngleDown\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faAngleDown\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        version\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.environment.version\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  animate, style, transition, trigger,\n} from '@angular/animations';\nimport { Component, Inject, Input } from '@angular/core';\nimport { faAngleDown } from '@fortawesome/free-solid-svg-icons';\nimport { ENVIRONMENT_TOKEN } from '../../shared/dependencies';\n\n// import packageInfo from '../../../../package.json';\n\n@Component({\n  selector: 'lib-navigation-sidebar',\n  templateUrl: './navigation-sidebar.component.html',\n  styleUrls: ['./navigation-sidebar.component.scss'],\n  animations: [\n    trigger('panelInOut', [\n      transition('void => *', [\n        style({ transform: 'translateY(-100%)' }),\n        animate(100),\n      ]),\n      transition('* => void', [\n        animate(100, style({ transform: 'translateY(-100%)' })),\n      ]),\n    ]),\n  ],\n})\nexport class NavigationSidebarComponent {\n  @Input() public currentComponent: string = 'geometry';\n  constructor(@Inject(ENVIRONMENT_TOKEN) private environment: any) {\n    //console.log(environment);\n\n  }\n  public collapseUplink: boolean = true;\n  public collapseDownlink: boolean = true;\n\n  public collapsed: boolean = false;\n  \n  // version = packageInfo.version;\n  version = this.environment.version;\n  faAngleDown = faAngleDown;\n\n  switchTemplate(name:string) {\n    this.currentComponent = name;\n  }\n  collapseSidebar() {\n    this.collapsed = !this.collapsed;\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n      \n        \n          Welcome\n        \n        Link Budget\n\n        \n          Geometry\n        \n        \n          \n            \n              \n            \n            Uplink\n        \n        \n          \n            \n              Carrier & Environment\n            \n            \n              Transmitter\n            \n            \n              Receiver\n            \n          \n        \n        \n          \n            \n              \n             -->\n            \n              \n            Downlink\n        \n        \n          \n             -->\n            Carrier & Environment\n            Transmitter\n            Receiver\n          \n        \n        \n          Results\n        \n      \n      Tools\n      \n        \n          UI Experiments\n        \n        VSWR Pattern Calculation\n        LUTs\n       -->\n\n    \n    \n      {{\"v\"+version}}\n    \n  \n\n\n  \n    {{ this.collapsed ? \">\" : \"\n -->\n\n\n    \n  Collapse\n-->\n\n    \n\n    \n                \n                    ./navigation-sidebar.component.scss\n                \n                a:hover {\n  text-decoration: none;//Remove underline from links\n  background-color: #ececec;\n}\na {\n  color: rgb(100, 100, 100);\n}\n.version {\n  float: right;\n  padding:10px;\n  color: #464646be;\n}\n\n.fixed {\n  position: fixed;\n  left: 5px;\n  bottom: 30px;\n  z-index:-5;\n}\n.menu-label {\n  padding: 0px 12px;\n}\nli {\n  overflow:hidden;\n}\nli > a {\n  padding-left: 24px;\n  color: rgb(100, 100, 100);\n}\n.menu-label {\n  margin:0px;\n  padding: 12px;\n  // border: 0px;\n  // border-bottom: 1px;\n  // border-color:#8080802e;\n  // border-style: solid;\n}\n#sidebar{\n  height: 100vh;\n  position: sticky;\n  top: 0;\n  margin:10px;\n\n  background-color: #fbfbfb;\n  border-style: solid;\n  border-color: #8080802e;\n  border-width: 0px;\n  border-right-width: 1px;\n  width:200px;//Fixed sidebar to avoid issues when collapsing. Adapt to maximum required width\n}\n\n.navbar-menu.is-active {\n  background-color: #ececec !important;\n  color: #3273dc;\n  font-weight: bold;\n  animation: navAnim 0.2s ease-in-out;\n\n  border-style: solid;\n  border-color: #3273dc;\n  border-width: 0px;\n  border-left-width: 5px;\n}\n// .active-route {\n//   background-color: #ececec !important;\n//   color: #3273dc;\n//   font-weight: bold;\n//   animation: navAnim 0.2s ease-in-out;\n\n//   border-style: solid;\n//   border-color: #3273dc;\n//   border-width: 0px;\n// }\n@keyframes navAnim {\n0% {\n  opacity: 0;\n  background-color: transparent;\n  transform: scaleX(0);\n}\n100% {\n  opacity: 1;\n  // color:white;\n  transform: scaleX(100%);\n}\n}\n// @keyframes navAnim {\n//   0% {\n//     display: none;\n//     opacity: 0;\n//     height: 0;\n//   }\n//   1% {\n//     display: block;\n//     opacity: 0;\n//   }\n//   100% {\n//     opacity: 1;\n//     height: 396px;\n//   }\n//   }\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Welcome                Link Budget                  Geometry                                                                            Uplink                                                    Carrier & Environment                                      Transmitter                                      Receiver                                                                                       -->                                      Downlink                                       -->            Carrier & Environment            Transmitter            Receiver                                    Results                    Tools                        UI Experiments                VSWR Pattern Calculation        LUTs       -->              {{\"v\"+version}}            {{ this.collapsed ? \">\" : \" -->      Collapse-->'\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavigationSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NavigationSidebarModule.html":{"url":"modules/NavigationSidebarModule.html","title":"module - NavigationSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    NavigationSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_NavigationSidebarModule\n\n\n\ncluster_NavigationSidebarModule_declarations\n\n\n\ncluster_NavigationSidebarModule_exports\n\n\n\n\nNavigationSidebarComponent\n\nNavigationSidebarComponent\n\n\n\nNavigationSidebarModule\n\nNavigationSidebarModule\n\nNavigationSidebarModule -->\n\nNavigationSidebarComponent->NavigationSidebarModule\n\n\n\n\n\nNavigationSidebarComponent \n\nNavigationSidebarComponent \n\nNavigationSidebarComponent  -->\n\nNavigationSidebarModule->NavigationSidebarComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NavigationSidebarComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            NavigationSidebarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormService } from '../../form/form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\nimport { NavigationSidebarComponent } from './navigation-sidebar.component';\n\n\n@NgModule({\n  declarations: [\n    NavigationSidebarComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    FontAwesomeModule,\n    RouterModule,\n  ],\n  exports:[\n    NavigationSidebarComponent\n  ]\n})\nexport class NavigationSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Point.html":{"url":"interfaces/Point.html","title":"interface - Point","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Point\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            x\n                                        \n                                \n                                \n                                        \n                                            y\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        x\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        x:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        y\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        y:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LinkBudgetComponent {\n  label: string;\n  gain: number;\n  linear: boolean;\n  position: number; // This is redundant #FIXME\n  width: number; // These values are defined in percent\n}\n\nexport interface Point {\n  x: number;\n  y: number;\n}\n\nexport class LinkBudgetScenario {\n  private powerIn: number = 0;\n\n  private powerOut: number = 0;\n\n  private components: {\n    [id: string]: LinkBudgetComponent;\n  };\n\n  private points: Point[];\n\n  constructor(power: number) {\n    this.powerIn = power;\n    this.components = {};\n    this.points = [];\n  }\n\n  public setPowerIn(power: number) {\n    this.powerIn = power;\n  }\n\n  public getPowerOut() {\n    return this.powerOut;\n  }\n\n  public getLabels() {\n    /**\n    * Returns the different labels for the components with their associated positions in\n    * the form of a list of {label, position};\n    */\n    const labels: { name: string, position: number }[] = [];\n    Object.entries(this.components).forEach(([key, value]) => {\n      const label = { name: value.label, position: value.position + value.width / 2 };\n      labels.push(label);\n    });\n    // for (const key in this.components) {\n    //     const c = this.components[key];\n    //     const label = { name: c.label, position: c.position + c.width / 2 };\n    //     labels.push(label);\n    // }\n    return labels;\n  }\n\n  public addComponent(id: string, LinkBudgetComponent: LinkBudgetComponent) {\n    this.components[id] = LinkBudgetComponent;\n  }\n\n  public addComponents(components: { id: string; component: LinkBudgetComponent }[]) {\n    /**\n     * This method adds multiples components at once\n     */\n\n    components.forEach((s) => {\n      this.addComponent(s.id, s.component);\n    });\n  }\n\n  public editGain(id: string, value: number) {\n    this.components[id].gain = value;\n  }\n\n  public editGains(gains: { [key: string]: number }) {\n    /**\n     * Edit multiple gains at once, these can be provided by a formGroup using the formGroup.formValues attribute\n     */\n    // console.log(gains.keys());\n\n    Object.keys(gains).forEach((key:any) => {\n      this.editGain(key, gains[key]);\n    });\n  }\n\n  public numberOfComponents(): number {\n    return Object.keys(this.components).length;\n  }\n\n  public getPoints(): Point[] {\n    return this.points;\n  }\n\n  public randomize(amplitude: number = 30): { [id: string]: LinkBudgetComponent } {\n    /** This changes the gain from the components with random values and return the new components */\n    const excluded = ['tx', 'rx'];\n    Object.keys(this.components).forEach((id) => {\n      if (!excluded.includes(id)) {\n        this.components[id].gain = Math.round((Math.random() - 0.8) * amplitude);// Rounded to nearest integer\n      }\n    });\n    this.powerIn = Math.random() * amplitude;\n    return this.components;\n  }\n\n  public compute(link: 'uplink' | 'downlink' = 'uplink') {\n    /** This function gives us the points needed to plot our LB graph */\n    // FIXME: Tried to make this clean (still better than before) but forgot about pass by reference and now it looks like it could be way cleaner.\n    // Depending on the kind of link we want to go backward\n    const isUp = link === 'uplink';\n    const lastPoint: Point = { x: isUp ? 0 : 100, y: this.powerIn };\n    const points: Point[] = [{ x: lastPoint.x, y: lastPoint.y }];\n    const discontinuityPoint: Point = { x: 0, y: 0 };\n    Object.values(this.components).forEach((LinkBudgetComponent) => {\n      if (!LinkBudgetComponent.linear) {\n        // Here we create the discontinuity by adding a point with same abscissa\n        discontinuityPoint.x = lastPoint.x;\n        discontinuityPoint.y = lastPoint.y + LinkBudgetComponent.gain;\n        points.push({ x: discontinuityPoint.x, y: discontinuityPoint.y });\n      }\n\n      if (isUp) lastPoint.x += LinkBudgetComponent.width;\n      if(!isUp) lastPoint.x -= LinkBudgetComponent.width;\n      (lastPoint.y += LinkBudgetComponent.gain);\n\n      points.push({ x: lastPoint.x, y: lastPoint.y });\n    });\n    this.powerOut = lastPoint.y;\n    this.points = points;\n    // for (const id in this.components) {\n    //   if (Object.prototype.hasOwnProperty.call(this.components, id)) {\n    //     const LinkBudgetComponent = this.components[id];\n\n    //     if (!LinkBudgetComponent.linear) {\n    //     // Here we create the discontinuity by adding a point with same abscissa\n    //       discontinuityPoint.x = lastPoint.x;\n    //       discontinuityPoint.y = lastPoint.y + LinkBudgetComponent.gain;\n    //       points.push({ x: discontinuityPoint.x, y: discontinuityPoint.y });\n    //     }\n\n    //     (lastPoint.x += LinkBudgetComponent.width);\n    //     (lastPoint.y += LinkBudgetComponent.gain);\n\n    //     points.push({ x: lastPoint.x, y: lastPoint.y });\n    //   }\n\n    //   this.powerOut = lastPoint.y;\n    //   this.points = points;\n    // // return points;\n    // }\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResultSidebarComponent.html":{"url":"components/ResultSidebarComponent.html","title":"component - ResultSidebarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ResultSidebarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/results/components/sidebar/result-sidebar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-result-sidebar\n            \n\n            \n                styleUrls\n                ./result-sidebar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./result-sidebar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                computeLinkBudget\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(computeLinkBudget: ComputeLinkBudgetService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/results/components/sidebar/result-sidebar.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        computeLinkBudget\n                                                  \n                                                        \n                                                                        ComputeLinkBudgetService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/results/components/sidebar/result-sidebar.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        computeLinkBudget\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ComputeLinkBudgetService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/results/components/sidebar/result-sidebar.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport ComputeLinkBudgetService from '../../../../services/compute-link-budget.service';\n\n@Component({\n  selector: 'lib-result-sidebar',\n  templateUrl: './result-sidebar.component.html',\n  styleUrls: ['./result-sidebar.component.scss'],\n})\nexport class ResultSidebarComponent implements OnInit {\n  constructor(public computeLinkBudget: ComputeLinkBudgetService) {}\n\n  ngOnInit(): void {\n  }\n}\n\n    \n\n    \n        \n   -->\n   -->\n     -->\n      \n     -->\n   -->\n -->\n\n  {{ this.computeLinkBudget.displayingResults ? \">\" : \"\n\n    \n\n    \n                \n                    ./result-sidebar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '   -->   -->     -->           -->   --> -->  {{ this.computeLinkBudget.displayingResults ? \">\" : \"'\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ResultSidebarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResultSidebarModule.html":{"url":"modules/ResultSidebarModule.html","title":"module - ResultSidebarModule","body":"\n                   \n\n\n\n\n    Modules\n    ResultSidebarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ResultSidebarModule\n\n\n\ncluster_ResultSidebarModule_exports\n\n\n\ncluster_ResultSidebarModule_declarations\n\n\n\ncluster_ResultSidebarModule_imports\n\n\n\n\nResultSidebarComponent\n\nResultSidebarComponent\n\n\n\nResultSidebarModule\n\nResultSidebarModule\n\nResultSidebarModule -->\n\nResultSidebarComponent->ResultSidebarModule\n\n\n\n\n\nResultsComponent\n\nResultsComponent\n\nResultSidebarModule -->\n\nResultsComponent->ResultSidebarModule\n\n\n\n\n\nResultSidebarComponent \n\nResultSidebarComponent \n\nResultSidebarComponent  -->\n\nResultSidebarModule->ResultSidebarComponent \n\n\n\n\n\nResultsComponent \n\nResultsComponent \n\nResultsComponent  -->\n\nResultSidebarModule->ResultsComponent \n\n\n\n\n\nCardModule\n\nCardModule\n\nResultSidebarModule -->\n\nCardModule->ResultSidebarModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nResultSidebarModule -->\n\nLoggerModule->ResultSidebarModule\n\n\n\n\n\nNavigationSidebarModule\n\nNavigationSidebarModule\n\nResultSidebarModule -->\n\nNavigationSidebarModule->ResultSidebarModule\n\n\n\n\n\nSyntheticDrawingModule\n\nSyntheticDrawingModule\n\nResultSidebarModule -->\n\nSyntheticDrawingModule->ResultSidebarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/results/results.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ResultSidebarComponent\n                        \n                        \n                            ResultsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            NavigationSidebarModule\n                        \n                        \n                            SyntheticDrawingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ResultSidebarComponent\n                        \n                        \n                            ResultsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormService } from '../../form/form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\nimport { ResultSidebarComponent } from './components/sidebar/result-sidebar.component';\nimport { ResultsComponent } from './components/results/results.component';\nimport { SyntheticDrawingModule } from '../synthetic-drawing/synthetic-drawing.module';\nimport { NavigationSidebarModule } from '../navigation-sidebar/navigation-sidebar.module';\nimport { CardModule } from '../card/card.module';\n\n\n\n@NgModule({\n  declarations: [\n    ResultSidebarComponent,\n    ResultsComponent\n  ],\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    RouterModule,\n    FormsModule,\n    LoggerModule.forRoot(),\n    CardModule,\n    SyntheticDrawingModule,\n    NavigationSidebarModule\n  ],\n  exports:[\n    ResultSidebarComponent,\n    ResultsComponent\n  ]\n})\nexport class ResultSidebarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SaveLoadService.html":{"url":"injectables/SaveLoadService.html","title":"injectable - SaveLoadService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SaveLoadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/services/save-load.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                parseJSOData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exportConfigFile\n                            \n                            \n                                    Public\n                                formatJSOData\n                            \n                            \n                                    Public\n                                importConfigFile\n                            \n                            \n                                    Public\n                                importJSatOrbConfigFile\n                            \n                            \n                                    Public\n                                importJSOData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: any, logger: LoggerService, formService: FormService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:34\n                            \n                        \n\n                \n                    \n                            This service handles both saving and loading of configuration files, JSatOrb config files.\nNote: Using promises here might not be the best choice considering we have used only observable so far. At least, it is independant from the rest so we don't mix both.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        exportConfigFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    exportConfigFile(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:170\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        formatJSOData\n                        \n                    \n                \n            \n            \n                \n                    \n                    formatJSOData(satellites: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    satellites\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        importConfigFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    importConfigFile(files: FileList | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:135\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        importJSatOrbConfigFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    importJSatOrbConfigFile(files: FileList | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        importJSOData\n                        \n                    \n                \n            \n            \n                \n                    \n                    importJSOData(title: string, satellite: any, station: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:110\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    title\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    satellite\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    station\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        parseJSOData\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {...}\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/services/save-load.service.ts:42\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\n// import packageInfo from 'package.json';\nimport { Observable } from 'rxjs';\nimport sanitize from 'sanitize-filename';\nimport { FormService } from '../form/form.service';\nimport { HelperFunctions } from '../shared/helper-functions';\nimport { LoggerService } from '../shared/logger/logger.service'\nimport { FormBuilder } from '@angular/forms';\nimport { ENVIRONMENT_TOKEN } from '../shared/dependencies';\n\nconst readFile = (files: FileList | null): Observable => new Observable((obs) => {\n  // This is a helper function that opens the provided file and passes its content to the provided callback function.\n  if (!files || !files.item(0)) {\n    // this.logger.warn('Error', 'Unexpected error, cannot open imported file');\n    obs.error(new Error('cannot open imported file'));\n    return;\n  }\n\n  const file: File = files.item(0)!;\n  const fileReader = new FileReader();\n\n  fileReader.onerror = (err) => obs.error(err);\n  fileReader.onabort = (err) => obs.error(err);\n  fileReader.onload = () => obs.next(fileReader.result);\n  fileReader.onloadend = () => obs.complete();\n\n  fileReader.readAsText(file, 'utf8');\n});\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SaveLoadService {\n  /**\n   * This service handles both saving and loading of configuration files, JSatOrb config files.\n   * Note: Using promises here might not be the best choice considering we have used only observable so far. At least, it is independant from the rest so we don't mix both.\n  */\n  constructor(@Inject(ENVIRONMENT_TOKEN) private environment: any, private logger: LoggerService, private formService: FormService, private fb: FormBuilder) { }\n  // Defining a callback function to which we will feed the provided file\n  // Replace by Observables !!!\n  parseJSOData = (results: any): { title:any, satellites:any, groundStations:any } | null => {\n    // console.log(results);\n    if (results) {\n      this.logger.debug('Importing JSatOrb config file', results);\n      const title = results.header?.mission;\n      let { satellites } = results;\n      const { groundStations } = results;\n      satellites = this.formatJSOData(satellites);\n      /**\n       * 1. Display available options\n       * 2. Create a scenario : choose satellite, choose groundstation.\n       * 3. Convert that to a LB\n       */\n\n      // To move elsewhere !\n      return { title, satellites, groundStations };\n    }\n    return null;\n    };\n  public importJSatOrbConfigFile(files: FileList | null) : Observable {\n    /*\n    * This allows the user to import a JSatOrb Configuration file (.jso) into this app\n    */\n    return new Observable((obs) => {\n      readFile(files).subscribe(\n        (value: string) => {\n          obs.next(this.parseJSOData(JSON.parse(value)));\n          obs.complete();\n        },\n        (error) => {\n          obs.error(error);\n        },\n      );\n    });\n    // We then pass this callback function to our function that imports the file\n    // this.importFile(files)\n    //   .pipe(\n    //     mergeMap((result) => callbackFn(result)),\n    //   )\n    // return new Observable(\n    //   (subscriber) => {\n    //     this.importFile(files).subscribe((results) => {\n    //       console.log(results);\n\n    //     });\n    // },\n    // );\n    // .then((results) => new Promise(() => callbackFn(results)));\n    // return of({ title: '', satellites: [], groundStations: [] });\n  }\n  public formatJSOData(satellites: any) {\n    /**\n     * Takes the satellite list from a .jso file and converts all TLE-types satellites to Keplerian-type\n     */\n    Object.entries(satellites).forEach(([key, satellite] : [string, any]) => {\n      if (satellite.type === 'tle') {\n        satellites[key] = { ...satellite, ...HelperFunctions.convertTLEtoKeplearian(satellite.line1, satellite.line2) }; // HelperFunctions.convertTLEtoKeplearian('', ''),\n        // console.log(satellites)\n        // console.log(HelperFunctions.convertTLEtoKeplearian(satellite.line1, satellite.line2));\n      } else {\n        Object.values(['sma', 'ecc', 'inc', 'pa', 'raan', 'meanAnomaly']).forEach((val) => {\n          satellites[key][val] = parseFloat(satellite[val]);\n        });\n      }\n      // results.satellite = satellites\n    });\n    return satellites;\n  }\n  public importJSOData(title: string, satellite: any, station: any) {\n    /**\n     * Given data extracted from JSatOrb, updates the current link budget\n     */\n     if (!this.formService.isCurrentFormSaved) {\n      this.logger.warn('Warning', 'You have unsaved data');\n      return;\n    }\n    this.formService.title = title;\n    const { geometry } = this.formService.getFormData();\n\n    // Here AMSAT uses mean altitude which is equivalent to SMA but we will be using maximum Altitude corresponding to worst case scenario\n    geometry.altitude.value = (1 + satellite.ecc) * satellite.sma;\n    geometry.elevation.value =  station.elevation;\n    \n    // Updating slantRange also\n    geometry.slantRange.value = HelperFunctions.slantRangeFromAltElev(satellite.sma, station.elevation);\n    \n    // this.formService.addArchive('geometry', this.fb.group(geometry));\n    this.formService.globalForm.setControl('geometry', this.fb.group(geometry));\n    \n\n    console.log(this.formService.globalForm.value);\n    this.logger.success('importing data');\n  }\n  public importConfigFile(files:FileList | null): void {\n    /*\n    * This allows importing a json config file containing a scenario using the save/load buttons\n    */\n    // #TODO: SOME FILE VERIFICATION\n    // Defining a callback function to which we will feed the provided file\n    const callbackFn = (results: any) => {\n      if (results && results.metadata) {\n        if (results.metadata.version !== this.environment.version) {\n          this.logger.warn('Version Warning', 'The imported file has been generated with a different version');\n        }\n        const safeResults = results;\n        // We want to make sure to import a file-safe name\n        safeResults.metadata.title = sanitize(results.metadata.title);\n        this.formService.importForm(safeResults);\n        this.logger.success('Successfully loaded config file');\n      } else {\n        // If the file doesn't contain metadata or if its content is null or undefined, this probably hasn't been generated with Luplink\n        this.logger.error('This file doesn\\'t look like a Luplink configuration file', 'Missing content or metadata');\n      }\n    };\n    // We then pass this callback function to our function that imports the file\n\n    readFile(files).subscribe(\n      (value: string) => {\n        callbackFn(JSON.parse(value));\n      },\n      (error) => {\n        this.logger.error('Error while importing file', error);\n      },\n    );\n    // this.importFile(files);\n    // .then(() => new Promise((results) => callbackFn(results)));\n  }\n\n  public exportConfigFile(data:any) {\n    // #TODO: This is working, now are we sure we can't inject javascript using this (XSS injection) ?\n    // #TODO: Also, given a large enough JSON, this won't work, -> switch to blob\n    // this.logger.debug('exporting config!');\n    const metadata = {\n      title: this.formService.title,\n      data: Date.now(),\n      version: this.environment.version,\n    };\n    // FIXME: USING DATA URI IS PRETTY STRAIGHTFORWARD YET THE MAX SIZE DEPENDS ON THE BROWSER (2MB for Chrome, unlimited for Firefox), BETTER TO USE BLOB\n    // See https://stackoverflow.com/questions/695151/data-protocol-url-size-limitations\n    const configURL = `data:application/json;charset=UTF-8,${encodeURIComponent(JSON.stringify({ metadata, data }, undefined, 2))}`;\n    // Create a placeholder element for this data\n    const anchor = document.createElement('a');\n    anchor.href = configURL;\n    anchor.target = '_blank';\n    anchor.download = `${metadata.title}.json`;\n\n    anchor.click();\n    // Removing placeholder element\n    anchor.remove();\n\n    // Mark the current form as saved\n    this.formService.isCurrentFormSaved = true;\n  }\n\n  // public importFile(files: FileList | null) : Observable {\n  //   // This is a helper function that opens the provided file and passes its content to the provided callback function.\n  //   if (!files) {\n  //     this.logger.warn('Error', 'Unexpected error, cannot open imported file');\n  //   }\n  //   return new Observable(\n  //     (subscriber) => {\n  //       if (files != null && files.item(0) !== null) {\n  //         this.logger.debug(`importing ${files.length} config files! The first one named: ${files[0].name}`);\n  //         // #TODO: SOME FILE VERIFICATION\n  //         const file: File = files.item(0)!;\n  //         const fileReader = new FileReader();\n  //         fileReader.readAsText(file, 'utf8');\n  //         fileReader.onload = () => subscriber.next(fileReader.result);\n  //         fileReader.onerror = () => this.logger.error('Error', 'Could not read the provided file');\n  //         // fileReader.onload = () => { Promise.resolve(JSON.parse(fileReader.result)); };\n  //         // fileReader.onerror = (error: ProgressEvent) => Promise.reject(error);\n  //       } else {\n  //         this.logger.error('Error', 'Provided files seem to be null');\n  //       }\n  //     },\n  //   );\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SimpleDocumentationComponent.html":{"url":"components/SimpleDocumentationComponent.html","title":"component - SimpleDocumentationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SimpleDocumentationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-simple-documentation\n            \n\n            \n                styleUrls\n                ./simple-documentation.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./simple-documentation.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                alt\n                            \n                            \n                                delta\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                formulas\n                            \n                            \n                                geometry\n                            \n                            \n                                hasGeometryBeenDrawn\n                            \n                            \n                                sr\n                            \n                            \n                                svg\n                            \n                            \n                                systemTemperature\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                drawGeometry\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                updateDiagram\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        drawGeometry\n                        \n                    \n                \n            \n            \n                \ndrawGeometry()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDiagram\n                        \n                    \n                \n            \n            \n                \nupdateDiagram(geo: any, precision: number)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    geo\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    precision\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        3\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        alt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormService\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        formulas\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        geometry\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `\n  $\\\\delta$ is the minimum acceptable elevation angle. It is used for the calculation of the maximum slant range to the spacecraft. This range is then used to compute path losses.\n\n  The slant range is calculated using the following formula :\n  $$S=R_e(\\\\sqrt{[\\\\frac{r}{R_e}]^2-\\\\cos^2{\\\\delta}}-\\\\sin{\\\\delta})$$\n  with:\n  \n  $S$, the slant range in km\n  $r$, the distance of satellite from center of Earth in km ($r= R_e+h$)\n  $R_e$, the Earth's radius (in km) $\\\\delta$, the minimum acceptable elevation angle\n  `\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hasGeometryBeenDrawn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sr\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        svg\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        systemTemperature\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : `\n    $$T_s = T_a + T_1 + \\\\frac{T_2}{G_1} + \\\\frac{T_3}{G_1G_2}$$\n  `\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import * as d3 from 'd3';\n\nimport { AfterViewInit, ChangeDetectionStrategy, Component, Input } from '@angular/core';\nimport { LoggerService } from '../../shared/logger/logger.service'\nimport { FormService } from '../../form/form.service';\n\n\n@Component({\n  selector: 'lib-simple-documentation',\n  templateUrl: './simple-documentation.component.html',\n  styleUrls: ['./simple-documentation.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SimpleDocumentationComponent implements AfterViewInit {\n  @Input() component: string = '';\n  public formulas : { [id: string]: string };\n  hasGeometryBeenDrawn: boolean = false;\n  geometry: string = `\n  $\\\\delta$ is the minimum acceptable elevation angle. It is used for the calculation of the maximum slant range to the spacecraft. This range is then used to compute path losses.\n\n  The slant range is calculated using the following formula :\n  $$S=R_e(\\\\sqrt{[\\\\frac{r}{R_e}]^2-\\\\cos^2{\\\\delta}}-\\\\sin{\\\\delta})$$\n  with:\n  \n  $S$, the slant range in km\n  $r$, the distance of satellite from center of Earth in km ($r= R_e+h$)\n  $R_e$, the Earth's radius (in km) $\\\\delta$, the minimum acceptable elevation angle\n  `;\n\n  systemTemperature: string = `\n    $$T_s = T_a + T_1 + \\\\frac{T_2}{G_1} + \\\\frac{T_3}{G_1G_2}$$\n  `;\n  // cf: https://github.com/garciparedes/ng-katex\n  constructor(public formService: FormService, private logger: LoggerService) {\n    this.formulas = {\n      sr: 'S=R_e(\\\\sqrt{(\\\\frac{r}{R_e})^2-\\\\cos{2\\\\delta}}-\\\\sin{\\\\delta})',\n    };\n  }\n\n  svg:any;\n  delta: any;\n  alt:any;\n  sr:any;\n\n  drawGeometry(): void {\n    this.svg = d3.select('#sr')\n      .select('svg');\n\n    this.delta = this.svg\n      .append('text')\n      .attr('x', 73)\n      .attr('y', 59)\n      .attr('text-anchor', 'left')\n      .style('font-size', '4px');\n\n    this.alt = this.svg\n      .append('text')\n      .attr('x', 5)\n      .attr('y', 20)\n      .attr('text-anchor', 'left')\n      .style('font-size', '4px');\n\n    this.sr = this.svg\n      .append('text')\n      .attr('x', 42)\n      .attr('y', 42)\n      .attr('text-anchor', 'left')\n      .style('font-size', '4px');\n    this.hasGeometryBeenDrawn = true;\n\n    const geo = this.formService.getFormData().geometry;\n    // eslint-disable-next-line @typescript-eslint/no-unused-expressions\n    geo && this.updateDiagram(geo);\n    this.formService.getFormData$().subscribe((obs: any) => {\n      // console.log(obs.getRawValue().geometry);\n      // console.log(obs.geometry);\n      this.updateDiagram(obs.geometry);\n    });\n  }\n  ngAfterViewInit(): void {\n    // If the text hasn't been drawn, we draw it (#sr is always present since we are just hiding it)\n    if (!this.hasGeometryBeenDrawn) {\n      this.drawGeometry();\n    }\n  }\n\n  updateDiagram(geo:any, precision: number = 3) {\n    const alt: number = parseFloat(geo.altitude.value);\n    const sr: number = parseFloat(geo.slantRange.value);\n\n    this.delta.text(`ẟ=${geo.elevation.value} ${geo.elevation.unit}`);\n    this.alt.text(`${alt.toPrecision(precision)} ${geo.altitude.unit}`);\n    this.sr.text(`${sr.toPrecision(precision + 1)} ${geo.slantRange.unit}`);\n  }\n}\n\n    \n\n    \n        \n  Slant Range: -->\n  \n    \n      \n       \n        \n       \n      \n      \n       \n       \n       \n       \n       \n       \n        \n         \n         \n        \n       \n       \n       \n       \n       HORIZON LINE\n       SLANT RANGE\n       ALTITUDE\n       MINIMUM ELEVATION\n       \n        \n        \n        \n        \n       \n      \n     \n    \n    \n      \n    \n\n\n\n  Carrier & Environment\n  Here we can define the carrier used for the uplink.\n    The Free Space Path Loss (FSPL)  and atmospheric losses depend on frequency but also polarization of the carrier.\n    This graph shows the losses in dB due to propagation in free space as a function of distance between antennas and frequency of the carrier\n        \n        \n        &copy; Splash, CC BY-SA 3.0, via Wikimedia Commons\n\n\n  \n    \n      In this section, we define the transmitter used based on the following architecture: \n      \n    \n    \n      The following values have been chosen :\n      \n        \n          \n            {{this.formService.getFormData().uplink.transmitter | json}}\n          \n        \n        \n          \n            {{this.formService.getFormData().uplink.transmitter_antenna | json}}\n          \n        \n      \n\n    \n  \n\n\n  \n    \n      Graph showing the architecture of the system\n    \n    \n      Temperatures:\n      We define a system temperature that is used to determine the noise in the link.\n      The system temperature is defined as:\n      \n      This is the Friis formula for noise temperature. We use this temperature in order to compute G/T out of the antena.\n\n      Here we consider the system to only have a LNA.\n    \n  \n\n\n\n    \n\n    \n                \n                    ./simple-documentation.component.scss\n                \n                svg {\n    width: 85%;\n    height: auto;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Slant Range: -->                                                                                                                                                             HORIZON LINE       SLANT RANGE       ALTITUDE       MINIMUM ELEVATION                                                                             Carrier & Environment  Here we can define the carrier used for the uplink.    The Free Space Path Loss (FSPL)  and atmospheric losses depend on frequency but also polarization of the carrier.    This graph shows the losses in dB due to propagation in free space as a function of distance between antennas and frequency of the carrier                        © Splash, CC BY-SA 3.0, via Wikimedia Commons            In this section, we define the transmitter used based on the following architecture:                     The following values have been chosen :                                    {{this.formService.getFormData().uplink.transmitter | json}}                                                {{this.formService.getFormData().uplink.transmitter_antenna | json}}                                          Graph showing the architecture of the system              Temperatures:      We define a system temperature that is used to determine the noise in the link.      The system temperature is defined as:            This is the Friis formula for noise temperature. We use this temperature in order to compute G/T out of the antena.      Here we consider the system to only have a LNA.      '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SimpleDocumentationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SimpleDocumentationModule.html":{"url":"modules/SimpleDocumentationModule.html","title":"module - SimpleDocumentationModule","body":"\n                   \n\n\n\n\n    Modules\n    SimpleDocumentationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SimpleDocumentationModule\n\n\n\ncluster_SimpleDocumentationModule_imports\n\n\n\ncluster_SimpleDocumentationModule_exports\n\n\n\ncluster_SimpleDocumentationModule_declarations\n\n\n\n\nSimpleDocumentationComponent\n\nSimpleDocumentationComponent\n\n\n\nSimpleDocumentationModule\n\nSimpleDocumentationModule\n\nSimpleDocumentationModule -->\n\nSimpleDocumentationComponent->SimpleDocumentationModule\n\n\n\n\n\nSimpleDocumentationComponent \n\nSimpleDocumentationComponent \n\nSimpleDocumentationComponent  -->\n\nSimpleDocumentationModule->SimpleDocumentationComponent \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nSimpleDocumentationModule -->\n\nLoggerModule->SimpleDocumentationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SimpleDocumentationComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SimpleDocumentationComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormService } from '../../form/form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\nimport { SyntheticDrawingModule } from '../synthetic-drawing/synthetic-drawing.module';\nimport { NavigationSidebarModule } from '../navigation-sidebar/navigation-sidebar.module';\nimport { CardModule } from '../card/card.module';\nimport { SimpleDocumentationComponent } from './simple-documentation.component';\nimport { KatexModule } from 'ng-katex';\n\n\n\n@NgModule({\n  declarations: [\n    SimpleDocumentationComponent\n  ],\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    FormsModule,\n    LoggerModule.forRoot(),\n    KatexModule\n  ],\n  exports: [\n    SimpleDocumentationComponent\n  ]\n})\nexport class SimpleDocumentationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StepbarComponent.html":{"url":"components/StepbarComponent.html","title":"component - StepbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StepbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-stepbar\n            \n\n            \n                styleUrls\n                ./stepbar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./stepbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _step\n                            \n                            \n                                    Private\n                                _validity\n                            \n                            \n                                faCheck\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isActive\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                step\n                            \n                            \n                                validity\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    validity\n                                \n                                \n                                    step\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:36\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        validity\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isActive\n                        \n                    \n                \n            \n            \n                \n                    \n                    isActive(step: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    step\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _step\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'geometry'\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _validity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        faCheck\n                        \n                    \n                \n            \n                \n                    \n                        Default value : faCheck\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:35\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        validity\n                    \n                \n\n                \n                    \n                        getvalidity()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:17\n                                \n                            \n\n                \n                    \n                        setvalidity(value: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:20\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        step\n                    \n                \n\n                \n                    \n                        getstep()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:28\n                                \n                            \n\n                \n                    \n                        setstep(value: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts:31\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface Validity {\n  steps: { [key:string]: string },\n  forms: { [key:string]: string },\n}\n\n@Component({\n  selector: 'lib-stepbar',\n  templateUrl: './stepbar.component.html',\n  styleUrls: ['./stepbar.component.scss'],\n})\n\nexport class StepbarComponent implements OnInit {\n  @Input()\n  get validity(): any {\n    return this._validity;\n  }\n  set validity(value: any) {\n    if (value) {\n      console.log(value);\n      this._validity = value;\n    }\n  }\n\n  @Input()\n  get step(): string {\n    return this._step;\n  }\n  set step(value: string) {\n    this._step = value;\n  }\n  private _validity: any; // Validity = { steps: {}, forms: {} };\n  faCheck = faCheck;\n  private _step: string = 'geometry';\n  constructor() {\n  }\n\n  public isActive(step: string): boolean {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in this.validity.steps) {\n      if (Object.prototype.hasOwnProperty.call(this.validity.steps, key)) {\n        // console.log(this.validity.steps);\n        // console.log(key);\n        if (this.validity.steps[key] === 'invalid' || this.step === step) {\n          // We don't want the progress bar go beyond a warning\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  ngOnInit(): void {\n  }\n}\n\n    \n\n    \n        \n    \n      \n        \n          \n            \n            \n          \n        \n\n          \n            Geometry\n          \n\n      \n      \n          \n            \n              \n              \n            \n          \n          \n            Uplink\n          \n      \n      \n          \n            \n              \n               -->\n              \n            \n          \n          \n            Downlink\n          \n      \n      \n          \n          \n            \n              \n            \n           -->\n          \n            Result\n          \n      \n    \n  \n\n    \n\n    \n                \n                    ./stepbar.component.scss\n                \n                // @import \"~node_modules/bulma\";\n@import '~bulma/sass/utilities/derived-variables.sass';\n@import \"~node_modules/bulma-o-steps/bulma-steps.sass\";\n@import \"~node_modules/bulma-o-steps/index.sass\";\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            Geometry                                                                                                                    Uplink                                                                         -->                                                          Downlink                                                                                           -->                      Result                      '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'StepbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StepbarModule.html":{"url":"modules/StepbarModule.html","title":"module - StepbarModule","body":"\n                   \n\n\n\n\n    Modules\n    StepbarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StepbarModule\n\n\n\ncluster_StepbarModule_exports\n\n\n\ncluster_StepbarModule_imports\n\n\n\ncluster_StepbarModule_declarations\n\n\n\n\nStepbarComponent\n\nStepbarComponent\n\n\n\nStepbarModule\n\nStepbarModule\n\nStepbarModule -->\n\nStepbarComponent->StepbarModule\n\n\n\n\n\nStepbarComponent \n\nStepbarComponent \n\nStepbarComponent  -->\n\nStepbarModule->StepbarComponent \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nStepbarModule -->\n\nLoggerModule->StepbarModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/stepbar/stepbar.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            StepbarComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StepbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormService } from '../../form/form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\nimport { SyntheticDrawingModule } from '../synthetic-drawing/synthetic-drawing.module';\nimport { NavigationSidebarModule } from '../navigation-sidebar/navigation-sidebar.module';\nimport { CardModule } from '../card/card.module';\nimport { StepbarComponent } from './stepbar.component';\n\n\n\n@NgModule({\n  declarations: [\n    StepbarComponent\n  ],\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    LoggerModule.forRoot(),\n  ],\n  exports: [\n    StepbarComponent\n  ]\n})\nexport class StepbarModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SynthesisComponent.html":{"url":"components/SynthesisComponent.html","title":"component - SynthesisComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SynthesisComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/synthesis/synthesis.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-synthesis\n            \n\n            \n                styleUrls\n                ./synthesis.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./synthesis.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/synthesis/synthesis.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthesis/synthesis.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-synthesis',\n  templateUrl: './synthesis.component.html',\n  styleUrls: ['./synthesis.component.scss'],\n})\nexport class SynthesisComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n}\n\n    \n\n    \n        \n  \n      \n\n        \n          \n        \n\n      \n\n\n      \n        \n          \n        \n      \n  \n\n\n    \n\n    \n                \n                    ./synthesis.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SynthesisComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SynthesisModule.html":{"url":"modules/SynthesisModule.html","title":"module - SynthesisModule","body":"\n                   \n\n\n\n\n    Modules\n    SynthesisModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SynthesisModule\n\n\n\ncluster_SynthesisModule_declarations\n\n\n\ncluster_SynthesisModule_imports\n\n\n\ncluster_SynthesisModule_exports\n\n\n\n\nSynthesisComponent\n\nSynthesisComponent\n\n\n\nSynthesisModule\n\nSynthesisModule\n\nSynthesisModule -->\n\nSynthesisComponent->SynthesisModule\n\n\n\n\n\nSynthesisComponent \n\nSynthesisComponent \n\nSynthesisComponent  -->\n\nSynthesisModule->SynthesisComponent \n\n\n\n\n\nCardModule\n\nCardModule\n\nSynthesisModule -->\n\nCardModule->SynthesisModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nSynthesisModule -->\n\nLoggerModule->SynthesisModule\n\n\n\n\n\nSyntheticDrawingModule\n\nSyntheticDrawingModule\n\nSynthesisModule -->\n\nSyntheticDrawingModule->SynthesisModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/synthesis/synthesis.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SynthesisComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            SyntheticDrawingModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SynthesisComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormService } from '../../form/form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\nimport { SyntheticDrawingModule } from '../synthetic-drawing/synthetic-drawing.module';\nimport { NavigationSidebarModule } from '../navigation-sidebar/navigation-sidebar.module';\nimport { CardModule } from '../card/card.module';\nimport { SynthesisComponent } from './synthesis.component';\n\n\n\n@NgModule({\n  declarations: [\n    SynthesisComponent\n  ],\n  imports: [\n    CommonModule,\n    FontAwesomeModule,\n    CardModule,\n    SyntheticDrawingModule,\n    LoggerModule.forRoot(),\n  ],\n  exports: [\n    SynthesisComponent\n  ]\n})\nexport class SynthesisModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SyntheticDrawingComponent.html":{"url":"components/SyntheticDrawingComponent.html","title":"component - SyntheticDrawingComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SyntheticDrawingComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-synthetic-drawing\n            \n\n            \n                styleUrls\n                ./synthetic-drawing.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./synthetic-drawing.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                _components\n                            \n                            \n                                    Private\n                                _powerIn\n                            \n                            \n                                    Private\n                                budgetText\n                            \n                            \n                                diagram\n                            \n                            \n                                graphPoints\n                            \n                            \n                                    Private\n                                height\n                            \n                            \n                                    Private\n                                labels\n                            \n                            \n                                    Private\n                                mainSVG\n                            \n                            \n                                    Private\n                                margin\n                            \n                            \n                                    Private\n                                verticalLinesGroup\n                            \n                            \n                                    Private\n                                width\n                            \n                            \n                                    Private\n                                x\n                            \n                            \n                                    Private\n                                y\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                initGraph\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Private\n                                updateGraphData\n                            \n                            \n                                    Private\n                                updateLabels\n                            \n                            \n                                    Private\n                                updateLBScenario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                components\n                            \n                            \n                                displayGraph\n                            \n                            \n                                linkType\n                            \n                            \n                                powerIn\n                            \n                            \n                                scenarioId\n                            \n                        \n                    \n                \n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    powerIn\n                                \n                                \n                                    components\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(drawingService: SyntheticDrawingFormService, logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:61\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        drawingService\n                                                  \n                                                        \n                                                                        SyntheticDrawingFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        components\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:54\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        displayGraph\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        linkType\n                    \n                \n                \n                    \n                        Type :     \"uplink\" | \"downlink\"\n\n                    \n                \n                \n                    \n                        Default value : 'uplink'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        powerIn\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        scenarioId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:41\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        initGraph\n                        \n                    \n                \n            \n            \n                \n                    \n                    initGraph()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateGraphData\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateGraphData(newScenario: LinkBudgetScenario)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newScenario\n                                    \n                                                LinkBudgetScenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateLabels\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLabels(newScenario: LinkBudgetScenario)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    newScenario\n                                    \n                                                LinkBudgetScenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        updateLBScenario\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateLBScenario(power: number, components: any, linkType: \"uplink\" | \"downlink\")\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    power\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    components\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    linkType\n                                    \n                                            \"uplink\" | \"downlink\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _components\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : DrawingDefault.defaultComponents\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        _powerIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        budgetText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        diagram\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('diagram')\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        graphPoints\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Point[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        labels\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        mainSVG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        margin\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n    top: 30, right: 30, bottom: 0, left: 30,\n  }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        verticalLinesGroup\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        width\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        x\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        y\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:26\n                        \n                    \n\n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        powerIn\n                    \n                \n\n                \n                    \n                        getpowerIn()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:45\n                                \n                            \n\n                \n                    \n                        setpowerIn(value: number)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:48\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            number\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        components\n                    \n                \n\n                \n                    \n                        getcomponents()\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:54\n                                \n                            \n\n                \n                    \n                        setcomponents(value: any)\n                    \n                \n                            \n                                \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts:57\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            any\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import {\n  AfterViewInit,\n  Component, Input, ViewChild,\n} from '@angular/core';\nimport { LinkBudgetScenario, Point } from '../../../shared/models/LinkBudgetScenario.model';\nimport * as d3 from 'd3';\nimport { LoggerService } from '../../../shared/logger/logger.service';\nimport { SyntheticDrawingFormService } from '../synthetic-drawing-form.service';\nimport { DrawingDefault } from '../models/default';\n\n@Component({\n  selector: 'lib-synthetic-drawing',\n  templateUrl: './synthetic-drawing.component.html',\n  styleUrls: ['./synthetic-drawing.component.scss'],\n})\nexport class SyntheticDrawingComponent implements AfterViewInit {\n  private height: number = 0;\n  private width: number = 0;\n  private margin: { top: number; bottom: number; left: number; right: number } = {\n    top: 30, right: 30, bottom: 0, left: 30,\n  };\n\n  // Parameters used by D3 #FIXME: Can we replace the anys types?\n  // The x and y axis used by D3\n  private x: any;\n  private y: any;\n\n  @ViewChild('diagram') diagram: any;\n  graphPoints: Point[] = [];\n\n  private budgetText: any;\n  private mainSVG: any;\n  private labels: any;\n  private verticalLinesGroup:any;\n\n  // DefaultLBScenario:LinkBudgetScenario;\n  // private drawing: any;\n  // private graph: any;\n\n  @Input() linkType: 'uplink' | 'downlink' = 'uplink'; // If not used by results component, choose uplink as default\n  @Input() scenarioId: string = 'default';\n  @Input() displayGraph: boolean = true;\n\n  // Setters and getter for powerIn and components variables because they require to update the graph\n  @Input() get powerIn() : number {\n    return this._powerIn;\n  }\n  set powerIn(value: number) {\n    this._powerIn = value;\n    this.updateLBScenario(value, this.components, this.linkType);\n  }\n  private _powerIn: any = 0;\n  @Input()\n  get components(): any {\n    return this._components;\n  }\n  set components(value: any) {\n    this._components = value;\n    this.updateLBScenario(this.powerIn, value, this.linkType);\n  }\n  private _components: any = DrawingDefault.defaultComponents;\n\n  constructor(private drawingService:SyntheticDrawingFormService, private logger:LoggerService) { }\n\n  private updateLBScenario(power: number, components: any, linkType: 'uplink' | 'downlink'): void {\n    const scenario = new LinkBudgetScenario(power);\n    scenario.addComponents(components);\n    scenario.compute(linkType);\n    this.drawingService.updateLBScenario(this.scenarioId, scenario);\n  }\n\n  ngAfterViewInit(): void {\n    // We need to do this after view init because else, the ViewChild result might still be undefined\n    if (this.displayGraph) { // In some cases, we might just be interested by the drawing\n      this.initGraph();\n      // Subscribing to the LBScenario models in case they are modified\n      this.drawingService.getLBScenario$(this.scenarioId)\n        .subscribe((value: LinkBudgetScenario) => {\n          this.updateGraphData(value);\n        });\n\n      // Initial update with all the current data\n      this.updateLBScenario(this.powerIn, this.components, this.linkType);\n    }\n  }\n\n  private updateLabels(newScenario: LinkBudgetScenario): void {\n    const labels = newScenario.getLabels();\n    this.labels\n      .selectAll('text')\n      .data(labels)\n      .enter()\n      .append('text')\n      .text((d:any) => d.name)\n      .attr('x', (d:any) => d.position * 9)\n      .attr('text-anchor', 'middle');\n  }\n\n  private initGraph(): void {\n    // points = this.DefaultLBScenario.getPoints();\n\n    this.width = 960 - this.margin.left - this.margin.right; // Same value as for the drawing\n    this.height = 240 - this.margin.top - this.margin.bottom;\n\n    this.x = d3.scaleLinear().range([0, this.width]);\n    this.y = d3.scaleLinear().range([0, this.height]);\n    this.x.domain([0, 100]);\n\n    // Setting the viewbox and div for the graph\n    this.mainSVG = d3.select(this.diagram.nativeElement)\n      .append('svg')\n      .attr('id', 'graph')\n      .attr(\n        'viewBox',\n        `${-this.margin.left\n        } ${\n          -this.margin.top\n        } ${\n          this.width + this.margin.left + this.margin.right\n        } ${\n          this.height + this.margin.top + this.margin.bottom + 60}`,\n      );\n    this.mainSVG\n      .append('path')\n      .attr('width', this.width + this.margin.left + this.margin.right)\n      .attr('height', this.height + this.margin.top + this.margin.bottom);\n\n    // Adding the summary text at the bottom, centered.\n    this.budgetText = this.mainSVG\n      .append('text')\n      .attr('x', (this.width + this.margin.left + this.margin.right) / 2)\n      .attr('y', this.height + this.margin.top + this.margin.bottom + 15)\n      .attr('text-anchor', 'middle');\n\n    this.verticalLinesGroup = this.mainSVG\n      .append('g')\n      .attr('class', 'group');\n\n    this.mainSVG.append('g').attr('class', 'YAxis');\n\n    this.labels = this.mainSVG.append('g')\n      .attr('class', 'labels')\n      .attr('transform', 'translate(0,-10)');\n  }\n\n  private updateGraphData(newScenario: LinkBudgetScenario) {\n    const { x, y } = this;\n    const points = newScenario.getPoints();\n    const powerOut = newScenario.getPowerOut();\n\n    this.updateLabels(newScenario);\n\n    // this.logger.debug('Updating graph, points are :', points);\n    // this.logger.debug('newScenario is:', newScenario);\n\n    // Careful with this one, returns (min, max) but domain expects (up, down) so trouble with yaxis\n    const [min, max] = (\n      d3.extent(points, (point: { x: number; y: number }) => point.y)\n    ) ?? [0, -150];\n\n    this.y.domain([max, min]);\n\n    const valueline = d3\n      .line()\n      .x((d: any) => x(d.x) ?? x(0))\n      .y((d: any) => y(d.y) ?? y(0));\n\n    // Setting the plot line\n    this.mainSVG\n      .select('path')\n      .datum(points)\n      .attr('class', 'line')\n      .transition()\n      .duration(1000)\n      .attr('d', valueline)\n      .attr('stroke-width', 2)\n      .attr('fill', '#FFFFFF')\n      .attr('stroke', '#111111');\n\n    // Setting the YAxis\n    this.mainSVG\n      .select('.YAxis')\n      .transition()\n      .duration(1000)\n      .call(d3.axisLeft(this.y));\n\n    // The vertical lines, here the *9 factor is explained by the 100px -> (960-60)px conversion\n    this.verticalLinesGroup\n      .selectAll('line')\n      .remove();\n\n    this.verticalLinesGroup\n      .selectAll('line')\n      .data(points)\n      .enter()\n      .append('line')\n      .attr('class', 'vert-line')\n      .attr('x1', (d:any) => d.x * 9)\n      .attr('y1', this.height)\n      .attr('x2', (d:any) => d.x * 9)\n      .attr('y2', 0)\n      .attr('stroke-width', 1)\n      .attr('stroke-dasharray', '5,5')\n      .attr('stroke', '#888888');\n\n    // Adding a line with power out\n    // this.svg\n    //   .append('line')\n    //   .attr('class', 'horz-line')\n    //   .attr('x1', (d:any) => 0)\n    //   .attr('y1', powerOut)\n    //   .attr('x2', (d:any) => this.width)\n    //   .attr('y2', powerOut)\n    //   .attr('stroke-width', 1)\n    //   .attr('stroke-dasharray', '5,5')\n    //   .attr('stroke', '#888888');\n\n    // Adding the formula at bottom\n    this.budgetText.text(\n      `Prx = Ptx - Ltx + Gtx - Lpath + Grx - Lrx = ${\n        powerOut.toFixed(1)\n      } dB`,\n    );\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n          \n            \n            \n          \n          \n            \n            \n          \n          \n            \n          \n          \n          \n          \n            \n            Tx\n            \n            Ground Segment\n            \n            Space Segment\n            \n            \n            \n            \n            \n            \n          \n          \n            \n          \n          \n            \n            \n            \n          \n          \n            \n            \n              \n              \n              \n            \n            \n          \n          \n            \n          \n          \n            \n            \n            \n            Rx\n          \n          \n        \n\n      \n\n      \n      \n    \n    \n    \n      \n            \n            \n              \n              \n            \n            \n              \n              \n            \n            \n              \n            \n            \n            \n            \n              \n              Tx\n              \n            \n            \n              \n            \n            \n              \n              \n              \n            \n            \n              \n              \n                \n                \n                \n              \n              \n            \n            \n              \n            \n            \n              \n              \n              \n              Rx\n            \n            \n            Ground Segment\n            Space Segment\n            \n            \n            \n            \n            \n            \n            \n      \n    \n    \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./synthetic-drawing.component.scss\n                \n                \n#side {\n  display:inline-block;\n  width: 50%;\n  height: 800px\n}\n\n// .line {\n//   fill: #FFFFFF;\n//   stroke: black;\n//   stroke-width: 2;\n// }\n\nform {\n  //float:left;\n  width:50%;\n  margin-right:auto;\n}\ninput{\n  float:right;\n}\n\ndiv {\n  margin: 10px 0px 10px  0px;\n}\n// #container{\n\n// }\n#diagram {\n  margin:24px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                              Tx                        Ground Segment                        Space Segment                                                                                                                                                                                                                                                                                                                                                                                  Rx                                                                                                                                                                                                                                                                                          Tx                                                                                                                                                                                                                                                                                                                                                                            Rx                                    Ground Segment            Space Segment                                                                                                            '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SyntheticDrawingComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SyntheticDrawingFormComponent.html":{"url":"components/SyntheticDrawingFormComponent.html","title":"component - SyntheticDrawingFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SyntheticDrawingFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-synthetic-drawing-form\n            \n\n            \n                styleUrls\n                ./synthetic-drawing-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./synthetic-drawing-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentScenario\n                            \n                            \n                                drawingForm\n                            \n                            \n                                drawingFormSub\n                            \n                            \n                                LBScenarioSub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                randomizeInputs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                scenarioId\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formBuilder: FormBuilder, drawingService: SyntheticDrawingFormService)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formBuilder\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        drawingService\n                                                  \n                                                        \n                                                                        SyntheticDrawingFormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        scenarioId\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'default'\n                    \n                \n                        \n                            \n                                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        randomizeInputs\n                        \n                    \n                \n            \n            \n                \nrandomizeInputs()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentScenario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawingForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        drawingFormSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LBScenarioSub\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {\n  Component, Input, OnDestroy, OnInit,\n} from '@angular/core';\nimport {\n  AbstractControlOptions, FormBuilder, FormGroup, Validators,\n} from '@angular/forms';\nimport { LinkBudgetComponent, LinkBudgetScenario } from '../../../shared/models/LinkBudgetScenario.model';\nimport { DrawingDefault } from '../models/default';\nimport { SyntheticDrawingFormService } from '../synthetic-drawing-form.service';\n@Component({\n  selector: 'lib-synthetic-drawing-form',\n  templateUrl: './synthetic-drawing-form.component.html',\n  styleUrls: ['./synthetic-drawing-form.component.scss'],\n})\nexport class SyntheticDrawingFormComponent implements OnInit, OnDestroy {\n  drawingForm: FormGroup;\n  currentScenario: any;\n  drawingFormSub: any;\n  LBScenarioSub: any;\n  // This ties the form to the right LBScenario model, don't forget to include it\n  @Input() scenarioId: string = 'default';\n\n  constructor(private formBuilder: FormBuilder, private drawingService:SyntheticDrawingFormService) {\n    // This sets the options for our form group\n    const controlOptions: AbstractControlOptions = { validators: [Validators.required], updateOn: 'blur' };\n    this.drawingForm = this.formBuilder.group({\n      power: DrawingDefault.powerIn,\n      gains: this.formBuilder.group(DrawingDefault.defaultGains),\n    }, controlOptions);\n  }\n\n  ngOnInit(): void {\n    // When the 'updateOn:blur' is triggered, we call the onSubmit within the new context\n    this.drawingFormSub = this.drawingForm.valueChanges.subscribe({\n      next: this.onSubmit.bind(this),\n    });\n    this.LBScenarioSub = this.drawingService.getLBScenario$(this.scenarioId).subscribe((next) => {\n      this.currentScenario = next;\n    });\n  }\n\n  ngOnDestroy() {\n    this.drawingFormSub.unsubscribe();\n    this.LBScenarioSub.unsubscribe();\n  }\n\n  randomizeInputs() {\n    // Randomize belongs to the form component, we should randomize here and send data to model after\n    const defaultLBScenario: LinkBudgetScenario = this.drawingService.getLBScenario(this.scenarioId);\n    const components: { [id: string]: LinkBudgetComponent; } = defaultLBScenario.randomize();\n\n    const newGains: { [id:string]:number } = {};\n    const excluded = ['tx', 'rx'];\n    Object.entries(components).forEach(([key, value]) => {\n      if (!excluded.includes(key)) {\n        newGains[key] = value.gain;\n      }\n    });\n    this.drawingForm.patchValue({ gains: newGains });// Update the form values\n    defaultLBScenario.compute();\n    this.drawingService.updateLBScenario(this.scenarioId, defaultLBScenario);\n  }\n\n  onSubmit() {\n    const defaultLBScenario = this.drawingService.getLBScenario(this.scenarioId);\n    defaultLBScenario.setPowerIn( this.drawingForm.value.power);\n\n    const formValues = this.drawingForm.value.gains;\n\n    defaultLBScenario.editGains(formValues);\n    defaultLBScenario.compute();\n    this.drawingService.updateLBScenario(this.scenarioId, defaultLBScenario);\n  }\n}\n\n    \n\n    \n        \n  \n    Power in: \n  \n\n  \n    \n      \n        Tx Cable Loss: \n      \n      \n        Tx Antenna Gain: \n      \n      \n        FSL: \n      \n      \n        Rx Antenna Gain: \n      \n      \n        Rx Cable Loss: \n      \n    \n  \n  \n    \n      \n        Update Graph\n      \n    \n    \n      \n        Random values\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./synthetic-drawing-form.component.scss\n                \n                .ng-valid[required], .ng-valid.required {\n  border-left: 5px solid green;\n}\n.ng-invalid:not(form) {\n  border-left: 5px solid red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Power in:                       Tx Cable Loss:                     Tx Antenna Gain:                     FSL:                     Rx Antenna Gain:                     Rx Cable Loss:                                 Update Graph                            Random values            '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SyntheticDrawingFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SyntheticDrawingFormService.html":{"url":"injectables/SyntheticDrawingFormService.html","title":"injectable - SyntheticDrawingFormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SyntheticDrawingFormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                components\n                            \n                            \n                                    Public\n                                LBScenario\n                            \n                            \n                                    Public\n                                LBScenario$\n                            \n                            \n                                powerIn\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLBScenario\n                            \n                            \n                                getLBScenario$\n                            \n                            \n                                updateLBScenario\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:22\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLBScenario\n                        \n                    \n                \n            \n            \n                \ngetLBScenario(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LinkBudgetScenario\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLBScenario$\n                        \n                    \n                \n            \n            \n                \ngetLBScenario$(id: string)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Subject\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateLBScenario\n                        \n                    \n                \n            \n            \n                \nupdateLBScenario(id: string, newLBScenario: LinkBudgetScenario)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    newLBScenario\n                                    \n                                                LinkBudgetScenario\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        components\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type[]\n\n                    \n                \n                \n                    \n                        Default value : DrawingDefault.defaultComponents\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        LBScenario\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:18\n                        \n                    \n\n            \n                \n                    This class handles the form part where the user can input some values in order to display them on the graph.\nIt is not required for the graph to display. The graph can be used as standalone.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        LBScenario$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        powerIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : DrawingDefault.powerIn\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { LinkBudgetComponent, LinkBudgetScenario } from '../../shared/models/LinkBudgetScenario.model';\nimport { DrawingDefault } from './models/default';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SyntheticDrawingFormService {\n  /**\n   * This class handles the form part where the user can input some values in order to display them on the graph.\n   * It is not required for the graph to display. The graph can be used as standalone.\n   */\n\n  // That is not exactly a good practice but we are keeping the last value of LBScenario\n  // This is used by drawingFormService as a basis for randomizing\n  public LBScenario: { [id: string]: LinkBudgetScenario } = { };\n  public LBScenario$: { [id: string]: Subject } = { };\n\n  components: { id: string, component: LinkBudgetComponent }[] = DrawingDefault.defaultComponents;\n  powerIn: number = DrawingDefault.powerIn;\n\n  constructor() {\n    // THIS is the wrong way to do it, subscribing to one of the object's parameters overrides other subscription.\n    // Terrible bug to solve, still not sure why it did not work...\n    // this.LBScenario$.default = new Subject();\n    // this.LBScenario$.uplink = new Subject();\n    // this.LBScenario$.downlink = new Subject();\n    this.LBScenario$ = {\n      default: new Subject(),\n      uplink: new Subject(),\n      downlink: new Subject(),\n    };\n  }\n  // // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  // initLBScenario(id: string, powerIn = this.powerIn, components = this.components, type: 'uplink' | 'downlink' = 'uplink') {\n  // }\n\n  updateLBScenario(id: string, newLBScenario: LinkBudgetScenario) {\n    this.LBScenario[id] = newLBScenario;\n    this.LBScenario$[id].next(newLBScenario);\n  }\n\n  getLBScenario$(id: string): Subject {\n    return this.LBScenario$[id];\n  }\n\n  getLBScenario(id: string) : LinkBudgetScenario {\n    /** Do not use this function unless absolutely necessary */\n    return this.LBScenario[id]; // ?? this.LBScenario$.default.getValue();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SyntheticDrawingModule.html":{"url":"modules/SyntheticDrawingModule.html","title":"module - SyntheticDrawingModule","body":"\n                   \n\n\n\n\n    Modules\n    SyntheticDrawingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SyntheticDrawingModule\n\n\n\ncluster_SyntheticDrawingModule_exports\n\n\n\ncluster_SyntheticDrawingModule_providers\n\n\n\ncluster_SyntheticDrawingModule_declarations\n\n\n\ncluster_SyntheticDrawingModule_imports\n\n\n\n\nSyntheticDrawingComponent\n\nSyntheticDrawingComponent\n\n\n\nSyntheticDrawingModule\n\nSyntheticDrawingModule\n\nSyntheticDrawingModule -->\n\nSyntheticDrawingComponent->SyntheticDrawingModule\n\n\n\n\n\nSyntheticDrawingFormComponent\n\nSyntheticDrawingFormComponent\n\nSyntheticDrawingModule -->\n\nSyntheticDrawingFormComponent->SyntheticDrawingModule\n\n\n\n\n\nSyntheticDrawingComponent \n\nSyntheticDrawingComponent \n\nSyntheticDrawingComponent  -->\n\nSyntheticDrawingModule->SyntheticDrawingComponent \n\n\n\n\n\nSyntheticDrawingFormComponent \n\nSyntheticDrawingFormComponent \n\nSyntheticDrawingFormComponent  -->\n\nSyntheticDrawingModule->SyntheticDrawingFormComponent \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nSyntheticDrawingModule -->\n\nLoggerModule->SyntheticDrawingModule\n\n\n\n\n\nSyntheticDrawingFormService\n\nSyntheticDrawingFormService\n\nSyntheticDrawingModule -->\n\nSyntheticDrawingFormService->SyntheticDrawingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SyntheticDrawingComponent\n                        \n                        \n                            SyntheticDrawingFormComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SyntheticDrawingFormService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SyntheticDrawingComponent\n                        \n                        \n                            SyntheticDrawingFormComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { SyntheticDrawingFormComponent } from './synthetic-drawing-form/synthetic-drawing-form.component';\nimport { SyntheticDrawingComponent } from './synthetic-drawing-display/synthetic-drawing.component';\nimport { SyntheticDrawingFormService } from './synthetic-drawing-form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\n\n@NgModule({\n  declarations: [\n    SyntheticDrawingFormComponent,\n    SyntheticDrawingComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    LoggerModule\n  ],\n  exports: [\n    SyntheticDrawingFormComponent,\n    SyntheticDrawingComponent,\n  ],\n  providers: [\n    SyntheticDrawingFormService,\n  ],\n\n})\nexport class SyntheticDrawingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Template.html":{"url":"interfaces/Template.html","title":"interface - Template","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Template\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            components\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        components\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        components:         Form[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Form[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Field {\n\n  id:string, // id used by API to recognize label\n  desc: string, // the label displayed, human-readable\n  units: string[], // A list of possible units, the first one being displayed by default\n  // #FIXME antenna selector extends field maybe\n  options?: 'field' | 'antenna' // Optional, since by default we'll assume it's a field\n  optionsField?: Field[]\n  default: number\n  alternative? : Form;\n}\n\n// FIXME:!!! The type param is ugly,  fix with oop\nexport interface Form {\n\n  /// /componentType:string,\n  componentId: string,\n  parentComponent?: string,\n  hasAntenna?: boolean,\n  componentName?:string,\n  image?: string,\n  params: Field[],\n\n  parent?: string,\n  computeFn?: string,\n\n}\n\nexport interface AntennaField{\n  id:string,\n  antennaId: string,\n\n  antennaValues: Field[]\n}\n\nexport interface Template {\n  components: Form[]\n}\n\nexport class emptyForm implements Form {\n  // componentType: '',\n    componentId: string;\n    parentComponent?: string;\n    params: Field[];\n\n    constructor() {\n      this.componentId = 'empty';\n      this.parentComponent = 'uplink';\n      this.params = [];\n    }\n  };\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ToastrTestingModule.html":{"url":"modules/ToastrTestingModule.html","title":"module - ToastrTestingModule","body":"\n                   \n\n\n\n\n    Modules\n    ToastrTestingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /* eslint-disable max-classes-per-file */\n/* eslint-disable class-methods-use-this */\n\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\n// Mocking the Toastr module thanks to https://github.com/scttcper/ngx-toastr/issues/339#issuecomment-508750488\nimport { Injectable, NgModule } from '@angular/core';\nimport {\n  IndividualConfig, ToastPackage, ToastRef, ToastrModule,\n} from 'ngx-toastr';\n// import mockPOSTData from './mockPOSTData.json';\n// Mocking  FormService\nexport class MockFormService {\n  public result:BehaviorSubject = new BehaviorSubject('');\n  fb = new FormBuilder();\n  public getFormData(): FormGroup {\n    // Objects.mockPOSTData.geometry\n    // const geo = this.fb.group(mockPOSTData.geometry);\n    return new FormBuilder().group({ test: 5, u: 3.14159265358979323846 });\n  }\n  public initForms(): void {}\n\n  public getFormData$(): Observable {\n    return of(new FormBuilder().group({ test: 5, u: 3.14159265358979323846 }));\n  }\n}\n// Mocking ComputeLinkBudgetService\nexport class MockComputeService {\n}\n// Mocking LoggerService\nexport class MockupLoggerService {\n  public log() {}\n  public debug() {}\n  public error() {}\n  public info() {}\n  public warn() {}\n}\n\n@Injectable()\nclass MockToastPackage extends ToastPackage {\n  constructor() {\n    const toastConfig = { toastClass: 'custom-toast' };\n    super(1, toastConfig, 'test message', 'test title', 'show', new ToastRef(null!));\n  }\n}\n\n@NgModule({\n  providers: [\n    { provide: ToastPackage, useClass: MockToastPackage },\n  ],\n  imports: [\n    ToastrModule.forRoot(),\n  ],\n  exports: [\n    ToastrModule,\n  ],\n})\nexport class ToastrTestingModule { }\n\n// INJECTION TOKENS \nexport const mockEnvironment = {\n  production: false,\n  debugMode: true,\n  enableNanospace: true,\n  APIEndPoint: 'http://localhost:8001/',\n  version: 0.0,\n};\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Validity.html":{"url":"interfaces/Validity.html","title":"interface - Validity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Validity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            forms\n                                        \n                                \n                                \n                                        \n                                            steps\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        forms\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        forms:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        steps\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        steps:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { faCheck } from '@fortawesome/free-solid-svg-icons';\n\ninterface Validity {\n  steps: { [key:string]: string },\n  forms: { [key:string]: string },\n}\n\n@Component({\n  selector: 'lib-stepbar',\n  templateUrl: './stepbar.component.html',\n  styleUrls: ['./stepbar.component.scss'],\n})\n\nexport class StepbarComponent implements OnInit {\n  @Input()\n  get validity(): any {\n    return this._validity;\n  }\n  set validity(value: any) {\n    if (value) {\n      console.log(value);\n      this._validity = value;\n    }\n  }\n\n  @Input()\n  get step(): string {\n    return this._step;\n  }\n  set step(value: string) {\n    this._step = value;\n  }\n  private _validity: any; // Validity = { steps: {}, forms: {} };\n  faCheck = faCheck;\n  private _step: string = 'geometry';\n  constructor() {\n  }\n\n  public isActive(step: string): boolean {\n    // eslint-disable-next-line no-restricted-syntax\n    for (const key in this.validity.steps) {\n      if (Object.prototype.hasOwnProperty.call(this.validity.steps, key)) {\n        // console.log(this.validity.steps);\n        // console.log(key);\n        if (this.validity.steps[key] === 'invalid' || this.step === step) {\n          // We don't want the progress bar go beyond a warning\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n  ngOnInit(): void {\n  }\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ViewComponent.html":{"url":"components/ViewComponent.html","title":"component - ViewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ViewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/ui/view/view.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-view\n            \n\n            \n                styleUrls\n                ./view.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./view.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/ui/view/view.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/ui/view/view.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.scss']\n})\nexport class ViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./view.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ViewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WarnFn.html":{"url":"interfaces/WarnFn.html","title":"interface - WarnFn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WarnFn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/custom-field.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        ValidatorFn\n            \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { AbstractControl, FormControl, RequiredValidator, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\n\n// https://dev.to/vishesh/custom-error-handling-in-angular-reactive-forms-5f05\n\nexport interface AbstractControlWarn extends AbstractControl { warnings: any; }\nexport interface WarnFn extends ValidatorFn { }\nexport function lossWarningValidator(control: AbstractControlWarn): null  {\n  if (control.get('value')?.value > 0) {\n    control.warnings = 'Loss is here algebraic and usually  {\n  //   if(control.errors === null){\n  //     return null\n  //     let { warning } = control.\n  //   };\n  //   return null;\n  // };\n\n  public requiredValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if(!control && control !== 0){\n      return {\n        error: \"Please enter a value here\",\n        warning: \"Test Warning!\" // FIXME: Remove later\n      }\n    }\n    return null;\n  };\n\n  public validValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    if (control.errors === null) {\n      return null\n    }\n    let { pattern } = control.errors;\n    if( pattern ){\n      return {\n        error: \"Please enter a numerical value\",\n      }\n    }\n    return {\n      error: 'Unknown error (3)'\n    }\n  };\n\n public fieldValidator: ValidatorFn = (control: AbstractControl):\n\n ValidationErrors | null => {\n\n  let value = control.get('value');\n  const unit = control.get('unit');\n\n  /*\n  Pass value Abstract control through multiple validators and output the result\n  TODO: order them by importance and only show the most jarring issue (or should we show all errors at once?)\n  -required\n  -numerical\n  -bounds\n  - ?\n  */\n  let req = this.requiredValidator(value?.value);\n  //let val = this.validValidator(value.value)\n  //let errList = [req, val];\n\n  // for(let i = 0; i  null;\n\n// export const isotropicGainValidator: ValidatorFn = ():\n\n// ValidationErrors | null => null;\n\n// // #TODO Custom validation depending on input kind\n// // How to handle separate field / unit validation ? Or is it all the same ?\n\n// export class CustomValidators {\n//   // TODO For real\n//   validators = {\n//     power:\n//     {\n//       validator: powerValidator,\n//       message: 'The power should be no more than 1MW',\n//     },\n//     gain_iso: {\n//       validator: isotropicGainValidator,\n//       message: 'The gain should be positive',\n//     },\n//   };\n// }\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WelcomeComponent.html":{"url":"components/WelcomeComponent.html","title":"component - WelcomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WelcomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lib-welcome\n            \n\n            \n                styleUrls\n                ./welcome.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./welcome.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                debugMode\n                            \n                            \n                                    Public\n                                environment\n                            \n                            \n                                    Public\n                                jsoData\n                            \n                            \n                                jsoForm\n                            \n                            \n                                    Public\n                                selectedSatellite\n                            \n                            \n                                    Public\n                                selectedStation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                buildForm\n                            \n                            \n                                importJSatOrbData\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                useSelectedData\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: any, logger: LoggerService, saveLoadService: SaveLoadService, formService: FormService, fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:15\n                            \n                        \n\n                \n                    \n                            Import Data from JSatOrb, select satellites and groundstations to study. Maybe also import from nanospace.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        saveLoadService\n                                                  \n                                                        \n                                                                        SaveLoadService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                        FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        buildForm\n                        \n                    \n                \n            \n            \n                \nbuildForm(data: any)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        this.jsoData\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         FormGroup\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        importJSatOrbData\n                        \n                    \n                \n            \n            \n                \nimportJSatOrbData(files: FileList | null)\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    files\n                                    \n                                            FileList | null\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        useSelectedData\n                        \n                    \n                \n            \n            \n                \nuseSelectedData()\n                \n            \n\n\n            \n                \n                    Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        debugMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.environment.debugMode\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(ENVIRONMENT_TOKEN)\n                        \n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        jsoData\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { title: '', satellites: undefined, groundStations: undefined }\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        jsoForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    satellite: new FormControl(),\n    station: new FormControl(),\n  })\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedSatellite\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        selectedStation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { LoggerService } from '../../shared/logger/logger.service';\nimport { SaveLoadService } from '../../services/save-load.service';\nimport { HelperFunctions } from '../../shared/helper-functions';\nimport mockJSatOrbData from '../../shared/testing/mockJSatOrbData.json';\nimport { FormService } from '../../form/form.service';\nimport { ENVIRONMENT_TOKEN } from '../../shared/dependencies';\nimport { FormGroup, FormControl } from '@angular/forms';\n@Component({\n  selector: 'lib-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss'],\n})\nexport class WelcomeComponent implements OnInit {\n  /**\n   * Import Data from JSatOrb, select satellites and groundstations to study. Maybe also import from nanospace.\n   */\n  constructor(@Inject(ENVIRONMENT_TOKEN) public environment: any, private logger: LoggerService, private saveLoadService: SaveLoadService, private formService: FormService, private fb:FormBuilder) { }\n  public selectedSatellite: any;\n  public selectedStation: any;\n  public jsoData: { title: string, satellites: any, groundStations: any } = { title: '', satellites: undefined, groundStations: undefined };\n  debugMode = this.environment.debugMode;\n\n  jsoForm = new FormGroup({\n    satellite: new FormControl(),\n    station: new FormControl(),\n  });\n\n  ngOnInit(): void {\n    if (this.debugMode) {\n      const testData = mockJSatOrbData;\n      const title = testData.header?.mission;\n      const satellites = this.saveLoadService.formatJSOData(testData.satellites);\n      const { groundStations } = testData;\n      this.jsoData = { title, satellites, groundStations };\n      this.buildForm();\n    }\n  }\n\n  importJSatOrbData(files: FileList | null) {\n    const obs = this.saveLoadService.importJSatOrbConfigFile(files)\n      .subscribe(\n        (value:any) => {\n          if (value) this.jsoData = value;\n          console.log('import from jso');\n          console.log(this.jsoData);\n          this.buildForm();\n          obs.unsubscribe();\n        },\n        (error:any) => {\n          this.logger.error('Error', 'Could not open file provided');\n          obs.unsubscribe();\n        },\n        // When complete\n        () => { obs.unsubscribe(); },\n      );\n    // return;\n  }\n  \n  buildForm(data: any = this.jsoData): FormGroup {\n    /**\n     * This builds the reactive part of the form from jsoData so that it can be displayed by template\n     */\n     this.jsoForm.patchValue({\n       satellite: this.jsoData.satellites[0], //MIGHT CRASH IF EMPTY\n       station: this.jsoData.groundStations[0]\n     });\n     return this.jsoForm;\n  }\n  useSelectedData() {\n    if (!(this.selectedSatellite && this.selectedStation)) {\n      this.logger.warn('Warning', 'Station or satellite not selected!');\n      return;\n    }\n    this.saveLoadService.importJSOData(this.jsoData.title, this.selectedSatellite, this.selectedStation);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      Welcome to Luplink\n      Start importing data from JSatOrb or use default data to compute a link budget!\n      \n        \n          \n        \n        Dummy import\n       -->\n      \n        \n\n           -->\n          \n            \n              \n                \n                  \n                    \n                    Import -->\n                  \n                  Load JSatOrb file (.jso)\n                \n\n                Imported project: {{this.jsoData.title}}Satellites: ({{this.jsoData.satellites?.length}})Groundstations: ({{this.jsoData.groundStations?.length}})\n              \n              Choose a satellite and a groundstation to import: \n              \n                \n\n                  \n                    \n                      Satellites\n                      Characteristics\n                    \n                    \n                      \n                        {{satellite.name}}\n                        {{satellite.type}}\n                        \n                          Select\n                        \n                      \n                    \n                  \n                \n                \n                  \n                    \n                      Stations\n                    \n                    \n                      \n                        {{station.name}}\n                        \n                          Select\n                        \n                      \n                    \n                  \n                \n               -->\n              \n                \n                    \n                        \n                            Satellite:\n                            \n                                \n                                    {{satellite.name}}\n                                \n                            \n                        \n                        \n                            Station:\n                            \n                                \n                                    {{station.name}}\n                                \n                            \n                        \n                     \n                \n                \n                    \n                        \n                    \n                    \n                        \n                            Import\n                        \n                    \n                \n            \n            \n              Selected Satellite:\n              {{selectedSatellite | json}}\n              \n                This fails if the provided json values are not number (will be later processed correctly in logic and\n                not in template)\n                Semi-Major Axis: {{((selectedSatellite.sma)).toPrecision(3)}}\n                Excentricity: {{selectedSatellite.ecc}}\n                Minimum Altitude: {{((1-selectedSatellite.ecc)*selectedSatellite.sma).toPrecision(3)}} km\n                Maximum Altitude (will be imported into geometry): {{((1+selectedSatellite.ecc)*selectedSatellite.sma).toPrecision(3)}} km\n\n                Mean Altitude: {{(selectedSatellite.sma).toPrecision(3)}} km\n              \n              Selected groundstation\n              {{selectedStation | json}}\n              \n              Elevation: {{(selectedStation.elevation).toPrecision(3)}}\n            \nImport -->\n        \n\n\n        \n\n         -->\n        \n          \n            \n            \n            \n          \n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./welcome.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              Welcome to Luplink      Start importing data from JSatOrb or use default data to compute a link budget!                                        Dummy import       -->                         -->                                                                                                              Import -->                                    Load JSatOrb file (.jso)                                Imported project: {{this.jsoData.title}}Satellites: ({{this.jsoData.satellites?.length}})Groundstations: ({{this.jsoData.groundStations?.length}})                            Choose a satellite and a groundstation to import:                                                                                           Satellites                      Characteristics                                                                                      {{satellite.name}}                        {{satellite.type}}                                                  Select                                                                                                                                                                                Stations                                                                                      {{station.name}}                                                  Select                                                                                                                   -->                                                                                                      Satellite:                                                                                                {{satellite.name}}                                                                                                                                        Station:                                                                                                {{station.name}}                                                                                                                                                                                                                                                                                 Import                                                                                                  Selected Satellite:              {{selectedSatellite | json}}                              This fails if the provided json values are not number (will be later processed correctly in logic and                not in template)                Semi-Major Axis: {{((selectedSatellite.sma)).toPrecision(3)}}                Excentricity: {{selectedSatellite.ecc}}                Minimum Altitude: {{((1-selectedSatellite.ecc)*selectedSatellite.sma).toPrecision(3)}} km                Maximum Altitude (will be imported into geometry): {{((1+selectedSatellite.ecc)*selectedSatellite.sma).toPrecision(3)}} km                Mean Altitude: {{(selectedSatellite.sma).toPrecision(3)}} km                            Selected groundstation              {{selectedStation | json}}                            Elevation: {{(selectedStation.elevation).toPrecision(3)}}            Import -->                         -->                                                                                              '\n    var COMPONENTS = [{'name': 'CardComponent', 'selector': 'lib-card'},{'name': 'FormComponent', 'selector': 'lib-form'},{'name': 'JSatOrbLinkComponent', 'selector': 'lib-luplink-jsatorb-import'},{'name': 'LayoutComponent', 'selector': 'lib-layout'},{'name': 'NavbarComponent', 'selector': 'lib-navbar'},{'name': 'NavigationSidebarComponent', 'selector': 'lib-navigation-sidebar'},{'name': 'ResultsComponent', 'selector': 'lib-results'},{'name': 'ResultSidebarComponent', 'selector': 'lib-result-sidebar'},{'name': 'SimpleDocumentationComponent', 'selector': 'lib-simple-documentation'},{'name': 'StepbarComponent', 'selector': 'lib-stepbar'},{'name': 'SynthesisComponent', 'selector': 'lib-synthesis'},{'name': 'SyntheticDrawingComponent', 'selector': 'lib-synthetic-drawing'},{'name': 'SyntheticDrawingFormComponent', 'selector': 'lib-synthetic-drawing-form'},{'name': 'ViewComponent', 'selector': 'lib-view'},{'name': 'WelcomeComponent', 'selector': 'lib-welcome'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WelcomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WelcomeModule.html":{"url":"modules/WelcomeModule.html","title":"module - WelcomeModule","body":"\n                   \n\n\n\n\n    Modules\n    WelcomeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WelcomeModule\n\n\n\ncluster_WelcomeModule_imports\n\n\n\ncluster_WelcomeModule_exports\n\n\n\ncluster_WelcomeModule_declarations\n\n\n\n\nWelcomeComponent\n\nWelcomeComponent\n\n\n\nWelcomeModule\n\nWelcomeModule\n\nWelcomeModule -->\n\nWelcomeComponent->WelcomeModule\n\n\n\n\n\nWelcomeComponent \n\nWelcomeComponent \n\nWelcomeComponent  -->\n\nWelcomeModule->WelcomeComponent \n\n\n\n\n\nCardModule\n\nCardModule\n\nWelcomeModule -->\n\nCardModule->WelcomeModule\n\n\n\n\n\nFormModule\n\nFormModule\n\nWelcomeModule -->\n\nFormModule->WelcomeModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nWelcomeModule -->\n\nLoggerModule->WelcomeModule\n\n\n\n\n\nNavigationSidebarModule\n\nNavigationSidebarModule\n\nWelcomeModule -->\n\nNavigationSidebarModule->WelcomeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/components/welcome/welcome.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            WelcomeComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CardModule\n                        \n                        \n                            FormModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            NavigationSidebarModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            WelcomeComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormService } from '../../form/form.service';\nimport { LoggerModule } from '../../shared/logger/logger.module';\nimport { SyntheticDrawingModule } from '../synthetic-drawing/synthetic-drawing.module';\nimport { NavigationSidebarModule } from '../navigation-sidebar/navigation-sidebar.module';\nimport { CardModule } from '../card/card.module';\nimport { WelcomeComponent } from './welcome.component';\nimport { FormModule } from '../../form/form.module';\nimport { NanospaceRequestService, NanospaceService, NgxNanospaceClientLibModule } from 'ngx-nanospace-client-lib';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    WelcomeComponent\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FontAwesomeModule,\n    LoggerModule.forRoot(),\n    FormModule,\n    CardModule,\n    NavigationSidebarModule,\n    NgxNanospaceClientLibModule,\n  ],\n  exports: [\n    WelcomeComponent\n  ],\n  providers: [\n    // NanospaceRequestService,\n    // NanospaceService,\n  ]\n})\nexport class WelcomeModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/card/card.component.ts\n            \n            component\n            CardComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                0 %\n                (0/20)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/navigation-sidebar/navigation-sidebar.component.ts\n            \n            component\n            NavigationSidebarComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/results/components/results/results.component.ts\n            \n            component\n            ResultsComponent\n            \n                0 %\n                (0/28)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/results/components/sidebar/result-sidebar.component.ts\n            \n            component\n            ResultSidebarComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/simple-documentation/simple-documentation.component.ts\n            \n            component\n            SimpleDocumentationComponent\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts\n            \n            component\n            StepbarComponent\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/stepbar/stepbar.component.ts\n            \n            interface\n            Validity\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/synthesis/synthesis.component.ts\n            \n            component\n            SynthesisComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/synthetic-drawing/models/default.ts\n            \n            class\n            DrawingDefault\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-display/synthetic-drawing.component.ts\n            \n            component\n            SyntheticDrawingComponent\n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form.service.ts\n            \n            injectable\n            SyntheticDrawingFormService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/synthetic-drawing/synthetic-drawing-form/synthetic-drawing-form.component.ts\n            \n            component\n            SyntheticDrawingFormComponent\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/components/welcome/welcome.component.ts\n            \n            component\n            WelcomeComponent\n            \n                8 %\n                (1/12)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/form/component/form.component.ts\n            \n            component\n            FormComponent\n            \n                0 %\n                (0/22)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/form/form.service.ts\n            \n            class\n            FormControlWarn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/form/form.service.ts\n            \n            injectable\n            FormService\n            \n                5 %\n                (1/18)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/luplink-jsatorb-import/jsatorb-link.service.ts\n            \n            injectable\n            JSatOrbLinkService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/luplink-jsatorb-import/luplink-jsatorb-import.component.ts\n            \n            component\n            JSatOrbLinkComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/luplink.module.ts\n            \n            interface\n            LuplinkConfig\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/luplink.module.ts\n            \n            variable\n            NanospaceConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/luplink.module.ts\n            \n            variable\n            NgxNanospace\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/services/compute-link-budget.service.ts\n            \n            injectable\n            ComputeLinkBudgetService\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/services/save-load.service.ts\n            \n            injectable\n            SaveLoadService\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/services/save-load.service.ts\n            \n            variable\n            readFile\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/CustomRouteReuseStrategy.ts\n            \n            class\n            CustomRouteReuseStrategy\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/custom-field.ts\n            \n            injectable\n            CustomValidators\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/custom-field.ts\n            \n            interface\n            AbstractControlWarn\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/custom-field.ts\n            \n            interface\n            WarnFn\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/custom-field.ts\n            \n            function\n            lossWarningValidator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/dependencies.ts\n            \n            variable\n            ENVIRONMENT_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/dependencies.ts\n            \n            variable\n            FORM_TEMPLATE_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/helper-functions.ts\n            \n            class\n            HelperFunctions\n            \n                12 %\n                (1/8)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/logger/logger.service.ts\n            \n            class\n            LogEntry\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/logger/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                6 %\n                (1/16)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Antennas.ts\n            \n            class\n            Antennas\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Antennas.ts\n            \n            interface\n            Antenna\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Antennas.ts\n            \n            variable\n            AntennasUtilsFunctions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n            \n            class\n            emptyForm\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n            \n            interface\n            AntennaField\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n            \n            interface\n            Field\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n            \n            interface\n            Form\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n            \n            interface\n            Template\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts\n            \n            class\n            LinkBudgetScenario\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts\n            \n            interface\n            LinkBudgetComponent\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/models/LinkBudgetScenario.model.ts\n            \n            interface\n            Point\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/testing/mockFormsTemplate.ts\n            \n            class\n            FormsTemplate\n            \n                0 %\n                (0/17)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n            \n            class\n            MockComputeService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n            \n            class\n            MockFormService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n            \n            class\n            MockupLoggerService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n            \n            injectable\n            MockToastPackage\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n            \n            variable\n            mockEnvironment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/ui/link-budget/layout.component.ts\n            \n            component\n            LayoutComponent\n            \n                0 %\n                (0/23)\n            \n        \n        \n            \n                \n                projects/ngx-luplink/src/lib/ui/view/view.component.ts\n            \n            component\n            ViewComponent\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^11.2.14\n        \n            @angular/common : ~11.2.1\n        \n            @angular/compiler : ~11.2.1\n        \n            @angular/core : ~11.2.1\n        \n            @angular/forms : ~11.2.1\n        \n            @angular/platform-browser : ~11.2.1\n        \n            @angular/platform-browser-dynamic : ~11.2.1\n        \n            @angular/router : ~11.2.1\n        \n            @fortawesome/angular-fontawesome : ^0.9.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.35\n        \n            @fortawesome/free-solid-svg-icons : ^5.15.3\n        \n            @ng-bootstrap/ng-bootstrap : ^10.0.0\n        \n            bootstrap : ^5.0.2\n        \n            bulma : ^0.9.3\n        \n            bulma-o-steps : ^1.1.0\n        \n            d3 : ^7.0.0\n        \n            ng-katex : ^2.0.3\n        \n            ngx-nanospace-client-lib : ^0.4.2\n        \n            ngx-luplink : file:./projects/ngx-luplink/\n        \n            ngx-toastr : ^14.0.0\n        \n            rxjs : ~6.6.0\n        \n            sanitize-filename : ^1.6.3\n        \n            tslib : ^2.0.0\n        \n            zone.js : ~0.11.3\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/emptyForm.html":{"url":"classes/emptyForm.html","title":"class - emptyForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  emptyForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/ngx-luplink/src/lib/shared/models/Form.model.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            Form\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentId\n                            \n                            \n                                params\n                            \n                            \n                                    Optional\n                                parentComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/ngx-luplink/src/lib/shared/models/Form.model.ts:44\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        componentId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/Form.model.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        params\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Field[]\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/Form.model.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        parentComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in projects/ngx-luplink/src/lib/shared/models/Form.model.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export interface Field {\n\n  id:string, // id used by API to recognize label\n  desc: string, // the label displayed, human-readable\n  units: string[], // A list of possible units, the first one being displayed by default\n  // #FIXME antenna selector extends field maybe\n  options?: 'field' | 'antenna' // Optional, since by default we'll assume it's a field\n  optionsField?: Field[]\n  default: number\n  alternative? : Form;\n}\n\n// FIXME:!!! The type param is ugly,  fix with oop\nexport interface Form {\n\n  /// /componentType:string,\n  componentId: string,\n  parentComponent?: string,\n  hasAntenna?: boolean,\n  componentName?:string,\n  image?: string,\n  params: Field[],\n\n  parent?: string,\n  computeFn?: string,\n\n}\n\nexport interface AntennaField{\n  id:string,\n  antennaId: string,\n\n  antennaValues: Field[]\n}\n\nexport interface Template {\n  components: Form[]\n}\n\nexport class emptyForm implements Form {\n  // componentType: '',\n    componentId: string;\n    parentComponent?: string;\n    params: Field[];\n\n    constructor() {\n      this.componentId = 'empty';\n      this.parentComponent = 'uplink';\n      this.params = [];\n    }\n  };\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LogLevel   (projects/.../logger.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-luplink/src/lib/shared/logger/logger.service.ts\n    \n        \n            \n                \n                    \n                        \n                        LogLevel\n                    \n                \n                        \n                            \n                                 All\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 Debug\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 Info\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 Warn\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n                        \n                            \n                                 Error\n                            \n                        \n                        \n                            \n                                Value : 4\n                            \n                        \n                        \n                            \n                                 Fatal\n                            \n                        \n                        \n                            \n                                Value : 5\n                            \n                        \n                        \n                            \n                                 Off\n                            \n                        \n                        \n                            \n                                Value : 6\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            lossWarningValidator   (projects/.../custom-field.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-luplink/src/lib/shared/custom-field.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        lossWarningValidator\n                        \n                    \n                \n            \n            \n                \nlossWarningValidator(control)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    control\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDevelopping a library : you might need to use npm-link in order to avoid the process of building the library & restarting the application each time you want to modify or debug the library.\nSee : https://medium.com/dailyjs/how-to-use-npm-link-7375b6219557 \nnpm-link isn't commited with git so if you want to use it you will need to set it up by yourself.\nYou can easily set do the link with :\nbash link.shIn order to use the library on local NPM, you first have to build it: \nng build --project=ngx-luplink\nYou can then pack it by going to dist/ngx-luplink and executing npm pack. This creates a package that can be install using npm install path/to/ngx-luplink.tgz\n\n#Activate npm-link\ncd project/ngx-luplink\nnpm link\ncd ../luplink-app\nnpm link ngx-luplinkLuplink\nThis project was generated with Angular CLI version 11.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        CardModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LayoutModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LuplinkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NavigationSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResultSidebarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SimpleDocumentationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StepbarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SynthesisModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SyntheticDrawingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ToastrTestingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WelcomeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CardModule\n\n\n\ncluster_CardModule_declarations\n\n\n\ncluster_CardModule_exports\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_LayoutModule\n\n\n\ncluster_LayoutModule_declarations\n\n\n\ncluster_LayoutModule_imports\n\n\n\ncluster_LayoutModule_exports\n\n\n\ncluster_LayoutModule_providers\n\n\n\ncluster_LuplinkModule\n\n\n\ncluster_LuplinkModule_providers\n\n\n\ncluster_NavbarModule\n\n\n\ncluster_NavbarModule_declarations\n\n\n\ncluster_NavbarModule_exports\n\n\n\ncluster_NavigationSidebarModule\n\n\n\ncluster_NavigationSidebarModule_declarations\n\n\n\ncluster_NavigationSidebarModule_exports\n\n\n\ncluster_ResultSidebarModule\n\n\n\ncluster_ResultSidebarModule_declarations\n\n\n\ncluster_ResultSidebarModule_imports\n\n\n\ncluster_ResultSidebarModule_exports\n\n\n\ncluster_SimpleDocumentationModule\n\n\n\ncluster_SimpleDocumentationModule_declarations\n\n\n\ncluster_SimpleDocumentationModule_exports\n\n\n\ncluster_StepbarModule\n\n\n\ncluster_StepbarModule_declarations\n\n\n\ncluster_StepbarModule_exports\n\n\n\ncluster_SynthesisModule\n\n\n\ncluster_SynthesisModule_declarations\n\n\n\ncluster_SynthesisModule_exports\n\n\n\ncluster_SyntheticDrawingModule\n\n\n\ncluster_SyntheticDrawingModule_declarations\n\n\n\ncluster_SyntheticDrawingModule_exports\n\n\n\ncluster_SyntheticDrawingModule_providers\n\n\n\ncluster_WelcomeModule\n\n\n\ncluster_WelcomeModule_declarations\n\n\n\ncluster_WelcomeModule_exports\n\n\n\n\nCardComponent\n\nCardComponent\n\n\n\nCardModule\n\nCardModule\n\nCardModule -->\n\nCardComponent->CardModule\n\n\n\n\n\nCardComponent \n\nCardComponent \n\nCardComponent  -->\n\nCardModule->CardComponent \n\n\n\n\n\nLayoutModule\n\nLayoutModule\n\nLayoutModule -->\n\nCardModule->LayoutModule\n\n\n\n\n\nResultSidebarModule\n\nResultSidebarModule\n\nResultSidebarModule -->\n\nCardModule->ResultSidebarModule\n\n\n\n\n\nLuplinkModule\n\nLuplinkModule\n\nLuplinkModule -->\n\nCardModule->LuplinkModule\n\n\n\n\n\nSynthesisModule\n\nSynthesisModule\n\nSynthesisModule -->\n\nCardModule->SynthesisModule\n\n\n\n\n\nWelcomeModule\n\nWelcomeModule\n\nWelcomeModule -->\n\nCardModule->WelcomeModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\nLayoutModule -->\n\nFormModule->LayoutModule\n\n\n\nWelcomeModule -->\n\nFormModule->WelcomeModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nFormModule -->\n\nLoggerModule->FormModule\n\n\n\nLayoutModule -->\n\nLoggerModule->LayoutModule\n\n\n\nResultSidebarModule -->\n\nLoggerModule->ResultSidebarModule\n\n\n\n\n\nSimpleDocumentationModule\n\nSimpleDocumentationModule\n\nSimpleDocumentationModule -->\n\nLoggerModule->SimpleDocumentationModule\n\n\n\n\n\nStepbarModule\n\nStepbarModule\n\nStepbarModule -->\n\nLoggerModule->StepbarModule\n\n\n\n\n\nNavbarModule\n\nNavbarModule\n\nNavbarModule -->\n\nLoggerModule->NavbarModule\n\n\n\n\n\nSyntheticDrawingModule\n\nSyntheticDrawingModule\n\nSyntheticDrawingModule -->\n\nLoggerModule->SyntheticDrawingModule\n\n\n\nSynthesisModule -->\n\nLoggerModule->SynthesisModule\n\n\n\nWelcomeModule -->\n\nLoggerModule->WelcomeModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nFormModule -->\n\nLoggerService->FormModule\n\n\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\nJSatOrbLinkComponent\n\nJSatOrbLinkComponent\n\nLayoutModule -->\n\nJSatOrbLinkComponent->LayoutModule\n\n\n\n\n\nLayoutComponent\n\nLayoutComponent\n\nLayoutModule -->\n\nLayoutComponent->LayoutModule\n\n\n\n\n\nViewComponent\n\nViewComponent\n\nLayoutModule -->\n\nViewComponent->LayoutModule\n\n\n\n\n\nJSatOrbLinkComponent \n\nJSatOrbLinkComponent \n\nJSatOrbLinkComponent  -->\n\nLayoutModule->JSatOrbLinkComponent \n\n\n\n\n\nLayoutComponent \n\nLayoutComponent \n\nLayoutComponent  -->\n\nLayoutModule->LayoutComponent \n\n\n\n\n\nViewComponent \n\nViewComponent \n\nViewComponent  -->\n\nLayoutModule->ViewComponent \n\n\n\n\n\nNavigationSidebarModule\n\nNavigationSidebarModule\n\nLayoutModule -->\n\nNavigationSidebarModule->LayoutModule\n\n\n\nResultSidebarModule -->\n\nNavigationSidebarModule->ResultSidebarModule\n\n\n\n\n\nNavigationSidebarComponent \n\nNavigationSidebarComponent \n\nNavigationSidebarComponent  -->\n\nNavigationSidebarModule->NavigationSidebarComponent \n\n\n\nWelcomeModule -->\n\nNavigationSidebarModule->WelcomeModule\n\n\n\nLayoutModule -->\n\nResultSidebarModule->LayoutModule\n\n\n\n\n\nResultSidebarComponent \n\nResultSidebarComponent \n\nResultSidebarComponent  -->\n\nResultSidebarModule->ResultSidebarComponent \n\n\n\n\n\nResultsComponent \n\nResultsComponent \n\nResultsComponent  -->\n\nResultSidebarModule->ResultsComponent \n\n\n\nLayoutModule -->\n\nSimpleDocumentationModule->LayoutModule\n\n\n\n\n\nSimpleDocumentationComponent \n\nSimpleDocumentationComponent \n\nSimpleDocumentationComponent  -->\n\nSimpleDocumentationModule->SimpleDocumentationComponent \n\n\n\nLayoutModule -->\n\nStepbarModule->LayoutModule\n\n\n\n\n\nStepbarComponent \n\nStepbarComponent \n\nStepbarComponent  -->\n\nStepbarModule->StepbarComponent \n\n\n\n\n\nJSatOrbLinkService\n\nJSatOrbLinkService\n\nLayoutModule -->\n\nJSatOrbLinkService->LayoutModule\n\n\n\n\n\nComputeLinkBudgetService\n\nComputeLinkBudgetService\n\nLuplinkModule -->\n\nComputeLinkBudgetService->LuplinkModule\n\n\n\n\n\nSaveLoadService\n\nSaveLoadService\n\nLuplinkModule -->\n\nSaveLoadService->LuplinkModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nNavbarModule -->\n\nNavbarComponent->NavbarModule\n\n\n\n\n\nNavbarComponent \n\nNavbarComponent \n\nNavbarComponent  -->\n\nNavbarModule->NavbarComponent \n\n\n\n\n\nNavigationSidebarComponent\n\nNavigationSidebarComponent\n\nNavigationSidebarModule -->\n\nNavigationSidebarComponent->NavigationSidebarModule\n\n\n\n\n\nResultSidebarComponent\n\nResultSidebarComponent\n\nResultSidebarModule -->\n\nResultSidebarComponent->ResultSidebarModule\n\n\n\n\n\nResultsComponent\n\nResultsComponent\n\nResultSidebarModule -->\n\nResultsComponent->ResultSidebarModule\n\n\n\nResultSidebarModule -->\n\nSyntheticDrawingModule->ResultSidebarModule\n\n\n\nSynthesisModule -->\n\nSyntheticDrawingModule->SynthesisModule\n\n\n\n\n\nSyntheticDrawingComponent \n\nSyntheticDrawingComponent \n\nSyntheticDrawingComponent  -->\n\nSyntheticDrawingModule->SyntheticDrawingComponent \n\n\n\n\n\nSyntheticDrawingFormComponent \n\nSyntheticDrawingFormComponent \n\nSyntheticDrawingFormComponent  -->\n\nSyntheticDrawingModule->SyntheticDrawingFormComponent \n\n\n\n\n\nSimpleDocumentationComponent\n\nSimpleDocumentationComponent\n\nSimpleDocumentationModule -->\n\nSimpleDocumentationComponent->SimpleDocumentationModule\n\n\n\n\n\nStepbarComponent\n\nStepbarComponent\n\nStepbarModule -->\n\nStepbarComponent->StepbarModule\n\n\n\n\n\nSynthesisComponent\n\nSynthesisComponent\n\nSynthesisModule -->\n\nSynthesisComponent->SynthesisModule\n\n\n\n\n\nSynthesisComponent \n\nSynthesisComponent \n\nSynthesisComponent  -->\n\nSynthesisModule->SynthesisComponent \n\n\n\n\n\nSyntheticDrawingComponent\n\nSyntheticDrawingComponent\n\nSyntheticDrawingModule -->\n\nSyntheticDrawingComponent->SyntheticDrawingModule\n\n\n\n\n\nSyntheticDrawingFormComponent\n\nSyntheticDrawingFormComponent\n\nSyntheticDrawingModule -->\n\nSyntheticDrawingFormComponent->SyntheticDrawingModule\n\n\n\n\n\nSyntheticDrawingFormService\n\nSyntheticDrawingFormService\n\nSyntheticDrawingModule -->\n\nSyntheticDrawingFormService->SyntheticDrawingModule\n\n\n\n\n\nWelcomeComponent\n\nWelcomeComponent\n\nWelcomeModule -->\n\nWelcomeComponent->WelcomeModule\n\n\n\n\n\nWelcomeComponent \n\nWelcomeComponent \n\nWelcomeComponent  -->\n\nWelcomeModule->WelcomeComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        14 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    15 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    12 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            APIResult   (projects/.../results.component.ts)\n                        \n                        \n                            Element   (projects/.../results.component.ts)\n                        \n                        \n                            Result   (projects/.../results.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-luplink/src/lib/components/results/components/results/results.component.ts\n    \n    \n        \n            \n                \n                    \n                    APIResult\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Element\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    Result\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            AntennasUtilsFunctions   (projects/.../Antennas.ts)\n                        \n                        \n                            ENVIRONMENT_TOKEN   (projects/.../dependencies.ts)\n                        \n                        \n                            FORM_TEMPLATE_TOKEN   (projects/.../dependencies.ts)\n                        \n                        \n                            mockEnvironment   (projects/.../mocks.ts)\n                        \n                        \n                            NanospaceConfig   (projects/.../luplink.module.ts)\n                        \n                        \n                            NgxNanospace   (projects/.../luplink.module.ts)\n                        \n                        \n                            readFile   (projects/.../save-load.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/ngx-luplink/src/lib/shared/models/Antennas.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AntennasUtilsFunctions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  yagiGainComputation: function (params: any): number {\n    /**\n     * AMSAT uses a LUT for this computation.\n     * There seems to exist Python library that could handle these calculations.\n     * For now, we're interpolating the data used in AMSAT\n     * This function could also call API for complex calculations\n     */\n    console.warn('Yagi Gain Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round(12.316 * length ** 0.2665 * 100) / 100;\n  },\n  yagiOptimumElements: function (params: any): number {\n    console.warn('Yagi Beamwidth Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round((2.632 * length ** 0.2665 + 3.149) * 100) / 100;\n  },\n  yagiBeamwidthComputation: function (params: any): number {\n    console.warn('Yagi Beamwidth Computation - not finished', params);\n    const length = params.boomLength.value;\n\n    return Math.round(Math.sqrt(40000 / (10 ** (this.yagiGainComputation(params) / 10))) * 100) / 100;\n  },\n}\n                    \n                \n\n\n        \n    \n\n    projects/ngx-luplink/src/lib/shared/dependencies.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ENVIRONMENT_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('environment')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        FORM_TEMPLATE_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('FormTemplate')\n                    \n                \n\n\n        \n    \n\n    projects/ngx-luplink/src/lib/shared/testing/mocks.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        mockEnvironment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false,\n  debugMode: true,\n  enableNanospace: true,\n  APIEndPoint: 'http://localhost:8001/',\n  version: 0.0,\n}\n                    \n                \n\n\n        \n    \n\n    projects/ngx-luplink/src/lib/luplink.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        NanospaceConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  endpoint: 'https://dcas-nanostar.isae.fr/api/',\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        NgxNanospace\n                        \n                    \n                \n            \n                \n                    \n                        Default value : NgxNanospaceClientLibModule.forRoot(NanospaceConfig)\n                    \n                \n\n\n        \n    \n\n    projects/ngx-luplink/src/lib/services/save-load.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        readFile\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (files: FileList | null): Observable => new Observable((obs) => {\n  // This is a helper function that opens the provided file and passes its content to the provided callback function.\n  if (!files || !files.item(0)) {\n    // this.logger.warn('Error', 'Unexpected error, cannot open imported file');\n    obs.error(new Error('cannot open imported file'));\n    return;\n  }\n\n  const file: File = files.item(0)!;\n  const fileReader = new FileReader();\n\n  fileReader.onerror = (err) => obs.error(err);\n  fileReader.onabort = (err) => obs.error(err);\n  fileReader.onload = () => obs.next(fileReader.result);\n  fileReader.onloadend = () => obs.complete();\n\n  fileReader.readAsText(file, 'utf8');\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
